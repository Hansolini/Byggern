
TTK4155 Gruppe 44.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000122  00800100  00000d20  00000db4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d20  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800222  00800222  00000ed6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ed6  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00000f32  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000004bc  00000000  00000000  00000faa  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002bc  00000000  00000000  00001466  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000335  00000000  00000000  00001722  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000148  00000000  00000000  00001a58  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002c1  00000000  00000000  00001ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002ca  00000000  00000000  00001e61  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  0000212b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	12 e0       	ldi	r17, 0x02	; 2
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e0 e2       	ldi	r30, 0x20	; 32
  84:	fd e0       	ldi	r31, 0x0D	; 13
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a2 32       	cpi	r26, 0x22	; 34
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	22 e0       	ldi	r18, 0x02	; 2
  94:	a2 e2       	ldi	r26, 0x22	; 34
  96:	b2 e0       	ldi	r27, 0x02	; 2
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ac 32       	cpi	r26, 0x2C	; 44
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 8e 06 	jmp	0xd1c	; 0xd1c <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
{
	//1 output, 0 input 
	
	//TestAle();
	
	uart_init(9600);
  ae:	80 e8       	ldi	r24, 0x80	; 128
  b0:	95 e2       	ldi	r25, 0x25	; 37
  b2:	0e 94 72 00 	call	0xe4	; 0xe4 <uart_init>
	fdevopen(uart_putchar, uart_getchar);
  b6:	69 e9       	ldi	r22, 0x99	; 153
  b8:	70 e0       	ldi	r23, 0x00	; 0
  ba:	8c e6       	ldi	r24, 0x6C	; 108
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	0e 94 e7 01 	call	0x3ce	; 0x3ce <fdevopen>
	
	MCUCR |= (1<<SRE);
  c2:	85 b7       	in	r24, 0x35	; 53
  c4:	80 68       	ori	r24, 0x80	; 128
  c6:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<<XMM2);
  c8:	80 b7       	in	r24, 0x30	; 48
  ca:	80 62       	ori	r24, 0x20	; 32
  cc:	80 bf       	out	0x30, r24	; 48
	
	SRAM_test();
  ce:	0e 94 9d 00 	call	0x13a	; 0x13a <SRAM_test>
		
		printf(x);
		printf("\n");
		
	}*/
  d2:	80 e0       	ldi	r24, 0x00	; 0
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	08 95       	ret

000000d8 <uart_putchar>:
  d8:	5d 9b       	sbis	0x0b, 5	; 11
  da:	fe cf       	rjmp	.-4      	; 0xd8 <uart_putchar>
  dc:	8c b9       	out	0x0c, r24	; 12
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	08 95       	ret

000000e4 <uart_init>:
  e4:	aa 27       	eor	r26, r26
  e6:	97 fd       	sbrc	r25, 7
  e8:	a0 95       	com	r26
  ea:	ba 2f       	mov	r27, r26
  ec:	88 0f       	add	r24, r24
  ee:	99 1f       	adc	r25, r25
  f0:	aa 1f       	adc	r26, r26
  f2:	bb 1f       	adc	r27, r27
  f4:	88 0f       	add	r24, r24
  f6:	99 1f       	adc	r25, r25
  f8:	aa 1f       	adc	r26, r26
  fa:	bb 1f       	adc	r27, r27
  fc:	9c 01       	movw	r18, r24
  fe:	ad 01       	movw	r20, r26
 100:	22 0f       	add	r18, r18
 102:	33 1f       	adc	r19, r19
 104:	44 1f       	adc	r20, r20
 106:	55 1f       	adc	r21, r21
 108:	22 0f       	add	r18, r18
 10a:	33 1f       	adc	r19, r19
 10c:	44 1f       	adc	r20, r20
 10e:	55 1f       	adc	r21, r21
 110:	60 e0       	ldi	r22, 0x00	; 0
 112:	70 e0       	ldi	r23, 0x00	; 0
 114:	8b e4       	ldi	r24, 0x4B	; 75
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	0e 94 48 01 	call	0x290	; 0x290 <__divmodsi4>
 11c:	21 50       	subi	r18, 0x01	; 1
 11e:	31 09       	sbc	r19, r1
 120:	29 b9       	out	0x09, r18	; 9
 122:	30 bd       	out	0x20, r19	; 32
 124:	88 e1       	ldi	r24, 0x18	; 24
 126:	8a b9       	out	0x0a, r24	; 10
 128:	8e e8       	ldi	r24, 0x8E	; 142
 12a:	80 bd       	out	0x20, r24	; 32
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	08 95       	ret

00000132 <uart_getchar>:
 132:	5f 9b       	sbis	0x0b, 7	; 11
 134:	fe cf       	rjmp	.-4      	; 0x132 <uart_getchar>
 136:	8c b1       	in	r24, 0x0c	; 12
 138:	08 95       	ret

0000013a <SRAM_test>:
	//TODO function which takes a memory address as input and turns on the necessary pins. Separate function for lcd, sram, etc? Then check if the argument address is outside the supposed address space
}


void SRAM_test(void)
{
 13a:	6f 92       	push	r6
 13c:	7f 92       	push	r7
 13e:	8f 92       	push	r8
 140:	9f 92       	push	r9
 142:	af 92       	push	r10
 144:	bf 92       	push	r11
 146:	cf 92       	push	r12
 148:	df 92       	push	r13
 14a:	ef 92       	push	r14
 14c:	ff 92       	push	r15
 14e:	0f 93       	push	r16
 150:	1f 93       	push	r17
 152:	cf 93       	push	r28
 154:	df 93       	push	r29
	= 0x800;
	uint16_t write_errors
	= 0;
	uint16_t retrieval_errors
	= 0;
	printf("Starting SRAM test...\n");
 156:	8a e0       	ldi	r24, 0x0A	; 10
 158:	91 e0       	ldi	r25, 0x01	; 1
 15a:	0e 94 46 02 	call	0x48c	; 0x48c <puts>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
 15e:	0e 94 d7 01 	call	0x3ae	; 0x3ae <rand>
 162:	4c 01       	movw	r8, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
 164:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 168:	c0 e0       	ldi	r28, 0x00	; 0
 16a:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size
	= 0x800;
	uint16_t write_errors
 16c:	c1 2c       	mov	r12, r1
 16e:	d1 2c       	mov	r13, r1
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		ext_ram[i] = some_value;
		uint8_t retreived_value = ext_ram[i];
		printf("Write phase : ext_ram[%4d] = %02X (should be %02X)\n", i,retreived_value, some_value);
 170:	0f 2e       	mov	r0, r31
 172:	f0 e2       	ldi	r31, 0x20	; 32
 174:	ef 2e       	mov	r14, r31
 176:	f1 e0       	ldi	r31, 0x01	; 1
 178:	ff 2e       	mov	r15, r31
 17a:	f0 2d       	mov	r31, r0
		if (retreived_value != some_value) {
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,retreived_value, some_value);
 17c:	0f 2e       	mov	r0, r31
 17e:	f4 e5       	ldi	r31, 0x54	; 84
 180:	af 2e       	mov	r10, r31
 182:	f1 e0       	ldi	r31, 0x01	; 1
 184:	bf 2e       	mov	r11, r31
 186:	f0 2d       	mov	r31, r0
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
 188:	0e 94 d7 01 	call	0x3ae	; 0x3ae <rand>
 18c:	68 2e       	mov	r6, r24
 18e:	fe 01       	movw	r30, r28
 190:	f8 5e       	subi	r31, 0xE8	; 232
		ext_ram[i] = some_value;
 192:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
 194:	70 80       	ld	r7, Z
		printf("Write phase : ext_ram[%4d] = %02X (should be %02X)\n", i,retreived_value, some_value);
 196:	8c 01       	movw	r16, r24
 198:	11 27       	eor	r17, r17
 19a:	1f 93       	push	r17
 19c:	0f 93       	push	r16
 19e:	1f 92       	push	r1
 1a0:	7f 92       	push	r7
 1a2:	df 93       	push	r29
 1a4:	cf 93       	push	r28
 1a6:	ff 92       	push	r15
 1a8:	ef 92       	push	r14
 1aa:	0e 94 32 02 	call	0x464	; 0x464 <printf>
		if (retreived_value != some_value) {
 1ae:	8d b7       	in	r24, 0x3d	; 61
 1b0:	9e b7       	in	r25, 0x3e	; 62
 1b2:	08 96       	adiw	r24, 0x08	; 8
 1b4:	0f b6       	in	r0, 0x3f	; 63
 1b6:	f8 94       	cli
 1b8:	9e bf       	out	0x3e, r25	; 62
 1ba:	0f be       	out	0x3f, r0	; 63
 1bc:	8d bf       	out	0x3d, r24	; 61
 1be:	76 14       	cp	r7, r6
 1c0:	a9 f0       	breq	.+42     	; 0x1ec <SRAM_test+0xb2>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,retreived_value, some_value);
 1c2:	1f 93       	push	r17
 1c4:	0f 93       	push	r16
 1c6:	1f 92       	push	r1
 1c8:	7f 92       	push	r7
 1ca:	df 93       	push	r29
 1cc:	cf 93       	push	r28
 1ce:	bf 92       	push	r11
 1d0:	af 92       	push	r10
 1d2:	0e 94 32 02 	call	0x464	; 0x464 <printf>
			write_errors++;
 1d6:	9f ef       	ldi	r25, 0xFF	; 255
 1d8:	c9 1a       	sub	r12, r25
 1da:	d9 0a       	sbc	r13, r25
 1dc:	8d b7       	in	r24, 0x3d	; 61
 1de:	9e b7       	in	r25, 0x3e	; 62
 1e0:	08 96       	adiw	r24, 0x08	; 8
 1e2:	0f b6       	in	r0, 0x3f	; 63
 1e4:	f8 94       	cli
 1e6:	9e bf       	out	0x3e, r25	; 62
 1e8:	0f be       	out	0x3f, r0	; 63
 1ea:	8d bf       	out	0x3d, r24	; 61
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 1ec:	21 96       	adiw	r28, 0x01	; 1
 1ee:	c1 15       	cp	r28, r1
 1f0:	98 e0       	ldi	r25, 0x08	; 8
 1f2:	d9 07       	cpc	r29, r25
 1f4:	49 f6       	brne	.-110    	; 0x188 <SRAM_test+0x4e>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,retreived_value, some_value);
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the writephase
	srand(seed);
 1f6:	c4 01       	movw	r24, r8
 1f8:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <srand>
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 1fc:	c0 e0       	ldi	r28, 0x00	; 0
 1fe:	d0 e0       	ldi	r29, 0x00	; 0
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size
	= 0x800;
	uint16_t write_errors
	= 0;
	uint16_t retrieval_errors
 200:	00 e0       	ldi	r16, 0x00	; 0
 202:	10 e0       	ldi	r17, 0x00	; 0
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n",i, retreived_value, some_value);
 204:	0f 2e       	mov	r0, r31
 206:	fd e8       	ldi	r31, 0x8D	; 141
 208:	ef 2e       	mov	r14, r31
 20a:	f1 e0       	ldi	r31, 0x01	; 1
 20c:	ff 2e       	mov	r15, r31
 20e:	f0 2d       	mov	r31, r0
	}
	// Retrieval phase: Check that no values were changed during or after the writephase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
 210:	0e 94 d7 01 	call	0x3ae	; 0x3ae <rand>
 214:	fe 01       	movw	r30, r28
 216:	f8 5e       	subi	r31, 0xE8	; 232
		uint8_t retreived_value = ext_ram[i];
 218:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
 21a:	28 17       	cp	r18, r24
 21c:	a9 f0       	breq	.+42     	; 0x248 <SRAM_test+0x10e>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n",i, retreived_value, some_value);
 21e:	99 27       	eor	r25, r25
 220:	9f 93       	push	r25
 222:	8f 93       	push	r24
 224:	1f 92       	push	r1
 226:	2f 93       	push	r18
 228:	df 93       	push	r29
 22a:	cf 93       	push	r28
 22c:	ff 92       	push	r15
 22e:	ef 92       	push	r14
 230:	0e 94 32 02 	call	0x464	; 0x464 <printf>
			retrieval_errors++;
 234:	0f 5f       	subi	r16, 0xFF	; 255
 236:	1f 4f       	sbci	r17, 0xFF	; 255
 238:	8d b7       	in	r24, 0x3d	; 61
 23a:	9e b7       	in	r25, 0x3e	; 62
 23c:	08 96       	adiw	r24, 0x08	; 8
 23e:	0f b6       	in	r0, 0x3f	; 63
 240:	f8 94       	cli
 242:	9e bf       	out	0x3e, r25	; 62
 244:	0f be       	out	0x3f, r0	; 63
 246:	8d bf       	out	0x3d, r24	; 61
		}
	}
	// Retrieval phase: Check that no values were changed during or after the writephase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 248:	21 96       	adiw	r28, 0x01	; 1
 24a:	c1 15       	cp	r28, r1
 24c:	98 e0       	ldi	r25, 0x08	; 8
 24e:	d9 07       	cpc	r29, r25
 250:	f9 f6       	brne	.-66     	; 0x210 <SRAM_test+0xd6>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n",i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase and\n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
 252:	1f 93       	push	r17
 254:	0f 93       	push	r16
 256:	df 92       	push	r13
 258:	cf 92       	push	r12
 25a:	8a ec       	ldi	r24, 0xCA	; 202
 25c:	91 e0       	ldi	r25, 0x01	; 1
 25e:	9f 93       	push	r25
 260:	8f 93       	push	r24
 262:	0e 94 32 02 	call	0x464	; 0x464 <printf>
 266:	0f 90       	pop	r0
 268:	0f 90       	pop	r0
 26a:	0f 90       	pop	r0
 26c:	0f 90       	pop	r0
 26e:	0f 90       	pop	r0
 270:	0f 90       	pop	r0
 272:	df 91       	pop	r29
 274:	cf 91       	pop	r28
 276:	1f 91       	pop	r17
 278:	0f 91       	pop	r16
 27a:	ff 90       	pop	r15
 27c:	ef 90       	pop	r14
 27e:	df 90       	pop	r13
 280:	cf 90       	pop	r12
 282:	bf 90       	pop	r11
 284:	af 90       	pop	r10
 286:	9f 90       	pop	r9
 288:	8f 90       	pop	r8
 28a:	7f 90       	pop	r7
 28c:	6f 90       	pop	r6
 28e:	08 95       	ret

00000290 <__divmodsi4>:
 290:	05 2e       	mov	r0, r21
 292:	97 fb       	bst	r25, 7
 294:	1e f4       	brtc	.+6      	; 0x29c <__divmodsi4+0xc>
 296:	00 94       	com	r0
 298:	0e 94 5f 01 	call	0x2be	; 0x2be <__negsi2>
 29c:	57 fd       	sbrc	r21, 7
 29e:	07 d0       	rcall	.+14     	; 0x2ae <__divmodsi4_neg2>
 2a0:	0e 94 67 01 	call	0x2ce	; 0x2ce <__udivmodsi4>
 2a4:	07 fc       	sbrc	r0, 7
 2a6:	03 d0       	rcall	.+6      	; 0x2ae <__divmodsi4_neg2>
 2a8:	4e f4       	brtc	.+18     	; 0x2bc <__divmodsi4_exit>
 2aa:	0c 94 5f 01 	jmp	0x2be	; 0x2be <__negsi2>

000002ae <__divmodsi4_neg2>:
 2ae:	50 95       	com	r21
 2b0:	40 95       	com	r20
 2b2:	30 95       	com	r19
 2b4:	21 95       	neg	r18
 2b6:	3f 4f       	sbci	r19, 0xFF	; 255
 2b8:	4f 4f       	sbci	r20, 0xFF	; 255
 2ba:	5f 4f       	sbci	r21, 0xFF	; 255

000002bc <__divmodsi4_exit>:
 2bc:	08 95       	ret

000002be <__negsi2>:
 2be:	90 95       	com	r25
 2c0:	80 95       	com	r24
 2c2:	70 95       	com	r23
 2c4:	61 95       	neg	r22
 2c6:	7f 4f       	sbci	r23, 0xFF	; 255
 2c8:	8f 4f       	sbci	r24, 0xFF	; 255
 2ca:	9f 4f       	sbci	r25, 0xFF	; 255
 2cc:	08 95       	ret

000002ce <__udivmodsi4>:
 2ce:	a1 e2       	ldi	r26, 0x21	; 33
 2d0:	1a 2e       	mov	r1, r26
 2d2:	aa 1b       	sub	r26, r26
 2d4:	bb 1b       	sub	r27, r27
 2d6:	fd 01       	movw	r30, r26
 2d8:	0d c0       	rjmp	.+26     	; 0x2f4 <__udivmodsi4_ep>

000002da <__udivmodsi4_loop>:
 2da:	aa 1f       	adc	r26, r26
 2dc:	bb 1f       	adc	r27, r27
 2de:	ee 1f       	adc	r30, r30
 2e0:	ff 1f       	adc	r31, r31
 2e2:	a2 17       	cp	r26, r18
 2e4:	b3 07       	cpc	r27, r19
 2e6:	e4 07       	cpc	r30, r20
 2e8:	f5 07       	cpc	r31, r21
 2ea:	20 f0       	brcs	.+8      	; 0x2f4 <__udivmodsi4_ep>
 2ec:	a2 1b       	sub	r26, r18
 2ee:	b3 0b       	sbc	r27, r19
 2f0:	e4 0b       	sbc	r30, r20
 2f2:	f5 0b       	sbc	r31, r21

000002f4 <__udivmodsi4_ep>:
 2f4:	66 1f       	adc	r22, r22
 2f6:	77 1f       	adc	r23, r23
 2f8:	88 1f       	adc	r24, r24
 2fa:	99 1f       	adc	r25, r25
 2fc:	1a 94       	dec	r1
 2fe:	69 f7       	brne	.-38     	; 0x2da <__udivmodsi4_loop>
 300:	60 95       	com	r22
 302:	70 95       	com	r23
 304:	80 95       	com	r24
 306:	90 95       	com	r25
 308:	9b 01       	movw	r18, r22
 30a:	ac 01       	movw	r20, r24
 30c:	bd 01       	movw	r22, r26
 30e:	cf 01       	movw	r24, r30
 310:	08 95       	ret

00000312 <do_rand>:
 312:	8f 92       	push	r8
 314:	9f 92       	push	r9
 316:	af 92       	push	r10
 318:	bf 92       	push	r11
 31a:	cf 92       	push	r12
 31c:	df 92       	push	r13
 31e:	ef 92       	push	r14
 320:	ff 92       	push	r15
 322:	cf 93       	push	r28
 324:	df 93       	push	r29
 326:	ec 01       	movw	r28, r24
 328:	68 81       	ld	r22, Y
 32a:	79 81       	ldd	r23, Y+1	; 0x01
 32c:	8a 81       	ldd	r24, Y+2	; 0x02
 32e:	9b 81       	ldd	r25, Y+3	; 0x03
 330:	61 15       	cp	r22, r1
 332:	71 05       	cpc	r23, r1
 334:	81 05       	cpc	r24, r1
 336:	91 05       	cpc	r25, r1
 338:	21 f4       	brne	.+8      	; 0x342 <do_rand+0x30>
 33a:	64 e2       	ldi	r22, 0x24	; 36
 33c:	79 ed       	ldi	r23, 0xD9	; 217
 33e:	8b e5       	ldi	r24, 0x5B	; 91
 340:	97 e0       	ldi	r25, 0x07	; 7
 342:	2d e1       	ldi	r18, 0x1D	; 29
 344:	33 ef       	ldi	r19, 0xF3	; 243
 346:	41 e0       	ldi	r20, 0x01	; 1
 348:	50 e0       	ldi	r21, 0x00	; 0
 34a:	0e 94 48 01 	call	0x290	; 0x290 <__divmodsi4>
 34e:	49 01       	movw	r8, r18
 350:	5a 01       	movw	r10, r20
 352:	9b 01       	movw	r18, r22
 354:	ac 01       	movw	r20, r24
 356:	a7 ea       	ldi	r26, 0xA7	; 167
 358:	b1 e4       	ldi	r27, 0x41	; 65
 35a:	0e 94 35 06 	call	0xc6a	; 0xc6a <__muluhisi3>
 35e:	6b 01       	movw	r12, r22
 360:	7c 01       	movw	r14, r24
 362:	ac ee       	ldi	r26, 0xEC	; 236
 364:	b4 ef       	ldi	r27, 0xF4	; 244
 366:	a5 01       	movw	r20, r10
 368:	94 01       	movw	r18, r8
 36a:	0e 94 43 06 	call	0xc86	; 0xc86 <__mulohisi3>
 36e:	c6 0e       	add	r12, r22
 370:	d7 1e       	adc	r13, r23
 372:	e8 1e       	adc	r14, r24
 374:	f9 1e       	adc	r15, r25
 376:	f7 fe       	sbrs	r15, 7
 378:	06 c0       	rjmp	.+12     	; 0x386 <do_rand+0x74>
 37a:	81 e0       	ldi	r24, 0x01	; 1
 37c:	c8 1a       	sub	r12, r24
 37e:	d1 08       	sbc	r13, r1
 380:	e1 08       	sbc	r14, r1
 382:	80 e8       	ldi	r24, 0x80	; 128
 384:	f8 0a       	sbc	r15, r24
 386:	c8 82       	st	Y, r12
 388:	d9 82       	std	Y+1, r13	; 0x01
 38a:	ea 82       	std	Y+2, r14	; 0x02
 38c:	fb 82       	std	Y+3, r15	; 0x03
 38e:	c6 01       	movw	r24, r12
 390:	9f 77       	andi	r25, 0x7F	; 127
 392:	df 91       	pop	r29
 394:	cf 91       	pop	r28
 396:	ff 90       	pop	r15
 398:	ef 90       	pop	r14
 39a:	df 90       	pop	r13
 39c:	cf 90       	pop	r12
 39e:	bf 90       	pop	r11
 3a0:	af 90       	pop	r10
 3a2:	9f 90       	pop	r9
 3a4:	8f 90       	pop	r8
 3a6:	08 95       	ret

000003a8 <rand_r>:
 3a8:	0e 94 89 01 	call	0x312	; 0x312 <do_rand>
 3ac:	08 95       	ret

000003ae <rand>:
 3ae:	80 e0       	ldi	r24, 0x00	; 0
 3b0:	91 e0       	ldi	r25, 0x01	; 1
 3b2:	0e 94 89 01 	call	0x312	; 0x312 <do_rand>
 3b6:	08 95       	ret

000003b8 <srand>:
 3b8:	a0 e0       	ldi	r26, 0x00	; 0
 3ba:	b0 e0       	ldi	r27, 0x00	; 0
 3bc:	80 93 00 01 	sts	0x0100, r24
 3c0:	90 93 01 01 	sts	0x0101, r25
 3c4:	a0 93 02 01 	sts	0x0102, r26
 3c8:	b0 93 03 01 	sts	0x0103, r27
 3cc:	08 95       	ret

000003ce <fdevopen>:
 3ce:	0f 93       	push	r16
 3d0:	1f 93       	push	r17
 3d2:	cf 93       	push	r28
 3d4:	df 93       	push	r29
 3d6:	ec 01       	movw	r28, r24
 3d8:	8b 01       	movw	r16, r22
 3da:	00 97       	sbiw	r24, 0x00	; 0
 3dc:	31 f4       	brne	.+12     	; 0x3ea <fdevopen+0x1c>
 3de:	61 15       	cp	r22, r1
 3e0:	71 05       	cpc	r23, r1
 3e2:	19 f4       	brne	.+6      	; 0x3ea <fdevopen+0x1c>
 3e4:	80 e0       	ldi	r24, 0x00	; 0
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	38 c0       	rjmp	.+112    	; 0x45a <fdevopen+0x8c>
 3ea:	6e e0       	ldi	r22, 0x0E	; 14
 3ec:	70 e0       	ldi	r23, 0x00	; 0
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	0e 94 45 04 	call	0x88a	; 0x88a <calloc>
 3f6:	fc 01       	movw	r30, r24
 3f8:	00 97       	sbiw	r24, 0x00	; 0
 3fa:	a1 f3       	breq	.-24     	; 0x3e4 <fdevopen+0x16>
 3fc:	80 e8       	ldi	r24, 0x80	; 128
 3fe:	83 83       	std	Z+3, r24	; 0x03
 400:	01 15       	cp	r16, r1
 402:	11 05       	cpc	r17, r1
 404:	71 f0       	breq	.+28     	; 0x422 <fdevopen+0x54>
 406:	13 87       	std	Z+11, r17	; 0x0b
 408:	02 87       	std	Z+10, r16	; 0x0a
 40a:	81 e8       	ldi	r24, 0x81	; 129
 40c:	83 83       	std	Z+3, r24	; 0x03
 40e:	80 91 22 02 	lds	r24, 0x0222
 412:	90 91 23 02 	lds	r25, 0x0223
 416:	89 2b       	or	r24, r25
 418:	21 f4       	brne	.+8      	; 0x422 <fdevopen+0x54>
 41a:	f0 93 23 02 	sts	0x0223, r31
 41e:	e0 93 22 02 	sts	0x0222, r30
 422:	20 97       	sbiw	r28, 0x00	; 0
 424:	c9 f0       	breq	.+50     	; 0x458 <fdevopen+0x8a>
 426:	d1 87       	std	Z+9, r29	; 0x09
 428:	c0 87       	std	Z+8, r28	; 0x08
 42a:	83 81       	ldd	r24, Z+3	; 0x03
 42c:	82 60       	ori	r24, 0x02	; 2
 42e:	83 83       	std	Z+3, r24	; 0x03
 430:	80 91 24 02 	lds	r24, 0x0224
 434:	90 91 25 02 	lds	r25, 0x0225
 438:	89 2b       	or	r24, r25
 43a:	71 f4       	brne	.+28     	; 0x458 <fdevopen+0x8a>
 43c:	f0 93 25 02 	sts	0x0225, r31
 440:	e0 93 24 02 	sts	0x0224, r30
 444:	80 91 26 02 	lds	r24, 0x0226
 448:	90 91 27 02 	lds	r25, 0x0227
 44c:	89 2b       	or	r24, r25
 44e:	21 f4       	brne	.+8      	; 0x458 <fdevopen+0x8a>
 450:	f0 93 27 02 	sts	0x0227, r31
 454:	e0 93 26 02 	sts	0x0226, r30
 458:	cf 01       	movw	r24, r30
 45a:	df 91       	pop	r29
 45c:	cf 91       	pop	r28
 45e:	1f 91       	pop	r17
 460:	0f 91       	pop	r16
 462:	08 95       	ret

00000464 <printf>:
 464:	a0 e0       	ldi	r26, 0x00	; 0
 466:	b0 e0       	ldi	r27, 0x00	; 0
 468:	e8 e3       	ldi	r30, 0x38	; 56
 46a:	f2 e0       	ldi	r31, 0x02	; 2
 46c:	0c 94 58 06 	jmp	0xcb0	; 0xcb0 <__prologue_saves__+0x20>
 470:	fe 01       	movw	r30, r28
 472:	35 96       	adiw	r30, 0x05	; 5
 474:	61 91       	ld	r22, Z+
 476:	71 91       	ld	r23, Z+
 478:	af 01       	movw	r20, r30
 47a:	80 91 24 02 	lds	r24, 0x0224
 47e:	90 91 25 02 	lds	r25, 0x0225
 482:	0e 94 73 02 	call	0x4e6	; 0x4e6 <vfprintf>
 486:	e2 e0       	ldi	r30, 0x02	; 2
 488:	0c 94 74 06 	jmp	0xce8	; 0xce8 <__epilogue_restores__+0x20>

0000048c <puts>:
 48c:	0f 93       	push	r16
 48e:	1f 93       	push	r17
 490:	cf 93       	push	r28
 492:	df 93       	push	r29
 494:	e0 91 24 02 	lds	r30, 0x0224
 498:	f0 91 25 02 	lds	r31, 0x0225
 49c:	23 81       	ldd	r18, Z+3	; 0x03
 49e:	21 ff       	sbrs	r18, 1
 4a0:	1b c0       	rjmp	.+54     	; 0x4d8 <puts+0x4c>
 4a2:	ec 01       	movw	r28, r24
 4a4:	00 e0       	ldi	r16, 0x00	; 0
 4a6:	10 e0       	ldi	r17, 0x00	; 0
 4a8:	89 91       	ld	r24, Y+
 4aa:	60 91 24 02 	lds	r22, 0x0224
 4ae:	70 91 25 02 	lds	r23, 0x0225
 4b2:	db 01       	movw	r26, r22
 4b4:	18 96       	adiw	r26, 0x08	; 8
 4b6:	ed 91       	ld	r30, X+
 4b8:	fc 91       	ld	r31, X
 4ba:	19 97       	sbiw	r26, 0x09	; 9
 4bc:	88 23       	and	r24, r24
 4be:	31 f0       	breq	.+12     	; 0x4cc <puts+0x40>
 4c0:	09 95       	icall
 4c2:	89 2b       	or	r24, r25
 4c4:	89 f3       	breq	.-30     	; 0x4a8 <puts+0x1c>
 4c6:	0f ef       	ldi	r16, 0xFF	; 255
 4c8:	1f ef       	ldi	r17, 0xFF	; 255
 4ca:	ee cf       	rjmp	.-36     	; 0x4a8 <puts+0x1c>
 4cc:	8a e0       	ldi	r24, 0x0A	; 10
 4ce:	09 95       	icall
 4d0:	89 2b       	or	r24, r25
 4d2:	11 f4       	brne	.+4      	; 0x4d8 <puts+0x4c>
 4d4:	c8 01       	movw	r24, r16
 4d6:	02 c0       	rjmp	.+4      	; 0x4dc <puts+0x50>
 4d8:	8f ef       	ldi	r24, 0xFF	; 255
 4da:	9f ef       	ldi	r25, 0xFF	; 255
 4dc:	df 91       	pop	r29
 4de:	cf 91       	pop	r28
 4e0:	1f 91       	pop	r17
 4e2:	0f 91       	pop	r16
 4e4:	08 95       	ret

000004e6 <vfprintf>:
 4e6:	ac e0       	ldi	r26, 0x0C	; 12
 4e8:	b0 e0       	ldi	r27, 0x00	; 0
 4ea:	e9 e7       	ldi	r30, 0x79	; 121
 4ec:	f2 e0       	ldi	r31, 0x02	; 2
 4ee:	0c 94 48 06 	jmp	0xc90	; 0xc90 <__prologue_saves__>
 4f2:	7c 01       	movw	r14, r24
 4f4:	6b 01       	movw	r12, r22
 4f6:	8a 01       	movw	r16, r20
 4f8:	fc 01       	movw	r30, r24
 4fa:	17 82       	std	Z+7, r1	; 0x07
 4fc:	16 82       	std	Z+6, r1	; 0x06
 4fe:	83 81       	ldd	r24, Z+3	; 0x03
 500:	81 ff       	sbrs	r24, 1
 502:	bd c1       	rjmp	.+890    	; 0x87e <__stack+0x37f>
 504:	ce 01       	movw	r24, r28
 506:	01 96       	adiw	r24, 0x01	; 1
 508:	4c 01       	movw	r8, r24
 50a:	f7 01       	movw	r30, r14
 50c:	93 81       	ldd	r25, Z+3	; 0x03
 50e:	f6 01       	movw	r30, r12
 510:	93 fd       	sbrc	r25, 3
 512:	85 91       	lpm	r24, Z+
 514:	93 ff       	sbrs	r25, 3
 516:	81 91       	ld	r24, Z+
 518:	6f 01       	movw	r12, r30
 51a:	88 23       	and	r24, r24
 51c:	09 f4       	brne	.+2      	; 0x520 <__stack+0x21>
 51e:	ab c1       	rjmp	.+854    	; 0x876 <__stack+0x377>
 520:	85 32       	cpi	r24, 0x25	; 37
 522:	39 f4       	brne	.+14     	; 0x532 <__stack+0x33>
 524:	93 fd       	sbrc	r25, 3
 526:	85 91       	lpm	r24, Z+
 528:	93 ff       	sbrs	r25, 3
 52a:	81 91       	ld	r24, Z+
 52c:	6f 01       	movw	r12, r30
 52e:	85 32       	cpi	r24, 0x25	; 37
 530:	29 f4       	brne	.+10     	; 0x53c <__stack+0x3d>
 532:	b7 01       	movw	r22, r14
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	0e 94 a5 05 	call	0xb4a	; 0xb4a <fputc>
 53a:	e7 cf       	rjmp	.-50     	; 0x50a <__stack+0xb>
 53c:	51 2c       	mov	r5, r1
 53e:	31 2c       	mov	r3, r1
 540:	20 e0       	ldi	r18, 0x00	; 0
 542:	20 32       	cpi	r18, 0x20	; 32
 544:	a0 f4       	brcc	.+40     	; 0x56e <__stack+0x6f>
 546:	8b 32       	cpi	r24, 0x2B	; 43
 548:	69 f0       	breq	.+26     	; 0x564 <__stack+0x65>
 54a:	30 f4       	brcc	.+12     	; 0x558 <__stack+0x59>
 54c:	80 32       	cpi	r24, 0x20	; 32
 54e:	59 f0       	breq	.+22     	; 0x566 <__stack+0x67>
 550:	83 32       	cpi	r24, 0x23	; 35
 552:	69 f4       	brne	.+26     	; 0x56e <__stack+0x6f>
 554:	20 61       	ori	r18, 0x10	; 16
 556:	2c c0       	rjmp	.+88     	; 0x5b0 <__stack+0xb1>
 558:	8d 32       	cpi	r24, 0x2D	; 45
 55a:	39 f0       	breq	.+14     	; 0x56a <__stack+0x6b>
 55c:	80 33       	cpi	r24, 0x30	; 48
 55e:	39 f4       	brne	.+14     	; 0x56e <__stack+0x6f>
 560:	21 60       	ori	r18, 0x01	; 1
 562:	26 c0       	rjmp	.+76     	; 0x5b0 <__stack+0xb1>
 564:	22 60       	ori	r18, 0x02	; 2
 566:	24 60       	ori	r18, 0x04	; 4
 568:	23 c0       	rjmp	.+70     	; 0x5b0 <__stack+0xb1>
 56a:	28 60       	ori	r18, 0x08	; 8
 56c:	21 c0       	rjmp	.+66     	; 0x5b0 <__stack+0xb1>
 56e:	27 fd       	sbrc	r18, 7
 570:	27 c0       	rjmp	.+78     	; 0x5c0 <__stack+0xc1>
 572:	30 ed       	ldi	r19, 0xD0	; 208
 574:	38 0f       	add	r19, r24
 576:	3a 30       	cpi	r19, 0x0A	; 10
 578:	78 f4       	brcc	.+30     	; 0x598 <__stack+0x99>
 57a:	26 ff       	sbrs	r18, 6
 57c:	06 c0       	rjmp	.+12     	; 0x58a <__stack+0x8b>
 57e:	fa e0       	ldi	r31, 0x0A	; 10
 580:	5f 9e       	mul	r5, r31
 582:	30 0d       	add	r19, r0
 584:	11 24       	eor	r1, r1
 586:	53 2e       	mov	r5, r19
 588:	13 c0       	rjmp	.+38     	; 0x5b0 <__stack+0xb1>
 58a:	8a e0       	ldi	r24, 0x0A	; 10
 58c:	38 9e       	mul	r3, r24
 58e:	30 0d       	add	r19, r0
 590:	11 24       	eor	r1, r1
 592:	33 2e       	mov	r3, r19
 594:	20 62       	ori	r18, 0x20	; 32
 596:	0c c0       	rjmp	.+24     	; 0x5b0 <__stack+0xb1>
 598:	8e 32       	cpi	r24, 0x2E	; 46
 59a:	21 f4       	brne	.+8      	; 0x5a4 <__stack+0xa5>
 59c:	26 fd       	sbrc	r18, 6
 59e:	6b c1       	rjmp	.+726    	; 0x876 <__stack+0x377>
 5a0:	20 64       	ori	r18, 0x40	; 64
 5a2:	06 c0       	rjmp	.+12     	; 0x5b0 <__stack+0xb1>
 5a4:	8c 36       	cpi	r24, 0x6C	; 108
 5a6:	11 f4       	brne	.+4      	; 0x5ac <__stack+0xad>
 5a8:	20 68       	ori	r18, 0x80	; 128
 5aa:	02 c0       	rjmp	.+4      	; 0x5b0 <__stack+0xb1>
 5ac:	88 36       	cpi	r24, 0x68	; 104
 5ae:	41 f4       	brne	.+16     	; 0x5c0 <__stack+0xc1>
 5b0:	f6 01       	movw	r30, r12
 5b2:	93 fd       	sbrc	r25, 3
 5b4:	85 91       	lpm	r24, Z+
 5b6:	93 ff       	sbrs	r25, 3
 5b8:	81 91       	ld	r24, Z+
 5ba:	6f 01       	movw	r12, r30
 5bc:	81 11       	cpse	r24, r1
 5be:	c1 cf       	rjmp	.-126    	; 0x542 <__stack+0x43>
 5c0:	98 2f       	mov	r25, r24
 5c2:	9f 7d       	andi	r25, 0xDF	; 223
 5c4:	95 54       	subi	r25, 0x45	; 69
 5c6:	93 30       	cpi	r25, 0x03	; 3
 5c8:	28 f4       	brcc	.+10     	; 0x5d4 <__stack+0xd5>
 5ca:	0c 5f       	subi	r16, 0xFC	; 252
 5cc:	1f 4f       	sbci	r17, 0xFF	; 255
 5ce:	ff e3       	ldi	r31, 0x3F	; 63
 5d0:	f9 83       	std	Y+1, r31	; 0x01
 5d2:	0d c0       	rjmp	.+26     	; 0x5ee <__stack+0xef>
 5d4:	83 36       	cpi	r24, 0x63	; 99
 5d6:	31 f0       	breq	.+12     	; 0x5e4 <__stack+0xe5>
 5d8:	83 37       	cpi	r24, 0x73	; 115
 5da:	71 f0       	breq	.+28     	; 0x5f8 <__stack+0xf9>
 5dc:	83 35       	cpi	r24, 0x53	; 83
 5de:	09 f0       	breq	.+2      	; 0x5e2 <__stack+0xe3>
 5e0:	5b c0       	rjmp	.+182    	; 0x698 <__stack+0x199>
 5e2:	22 c0       	rjmp	.+68     	; 0x628 <__stack+0x129>
 5e4:	f8 01       	movw	r30, r16
 5e6:	80 81       	ld	r24, Z
 5e8:	89 83       	std	Y+1, r24	; 0x01
 5ea:	0e 5f       	subi	r16, 0xFE	; 254
 5ec:	1f 4f       	sbci	r17, 0xFF	; 255
 5ee:	44 24       	eor	r4, r4
 5f0:	43 94       	inc	r4
 5f2:	51 2c       	mov	r5, r1
 5f4:	54 01       	movw	r10, r8
 5f6:	15 c0       	rjmp	.+42     	; 0x622 <__stack+0x123>
 5f8:	38 01       	movw	r6, r16
 5fa:	f2 e0       	ldi	r31, 0x02	; 2
 5fc:	6f 0e       	add	r6, r31
 5fe:	71 1c       	adc	r7, r1
 600:	f8 01       	movw	r30, r16
 602:	a0 80       	ld	r10, Z
 604:	b1 80       	ldd	r11, Z+1	; 0x01
 606:	26 ff       	sbrs	r18, 6
 608:	03 c0       	rjmp	.+6      	; 0x610 <__stack+0x111>
 60a:	65 2d       	mov	r22, r5
 60c:	70 e0       	ldi	r23, 0x00	; 0
 60e:	02 c0       	rjmp	.+4      	; 0x614 <__stack+0x115>
 610:	6f ef       	ldi	r22, 0xFF	; 255
 612:	7f ef       	ldi	r23, 0xFF	; 255
 614:	c5 01       	movw	r24, r10
 616:	2c 87       	std	Y+12, r18	; 0x0c
 618:	0e 94 9a 05 	call	0xb34	; 0xb34 <strnlen>
 61c:	2c 01       	movw	r4, r24
 61e:	83 01       	movw	r16, r6
 620:	2c 85       	ldd	r18, Y+12	; 0x0c
 622:	2f 77       	andi	r18, 0x7F	; 127
 624:	22 2e       	mov	r2, r18
 626:	17 c0       	rjmp	.+46     	; 0x656 <__stack+0x157>
 628:	38 01       	movw	r6, r16
 62a:	f2 e0       	ldi	r31, 0x02	; 2
 62c:	6f 0e       	add	r6, r31
 62e:	71 1c       	adc	r7, r1
 630:	f8 01       	movw	r30, r16
 632:	a0 80       	ld	r10, Z
 634:	b1 80       	ldd	r11, Z+1	; 0x01
 636:	26 ff       	sbrs	r18, 6
 638:	03 c0       	rjmp	.+6      	; 0x640 <__stack+0x141>
 63a:	65 2d       	mov	r22, r5
 63c:	70 e0       	ldi	r23, 0x00	; 0
 63e:	02 c0       	rjmp	.+4      	; 0x644 <__stack+0x145>
 640:	6f ef       	ldi	r22, 0xFF	; 255
 642:	7f ef       	ldi	r23, 0xFF	; 255
 644:	c5 01       	movw	r24, r10
 646:	2c 87       	std	Y+12, r18	; 0x0c
 648:	0e 94 88 05 	call	0xb10	; 0xb10 <strnlen_P>
 64c:	2c 01       	movw	r4, r24
 64e:	2c 85       	ldd	r18, Y+12	; 0x0c
 650:	20 68       	ori	r18, 0x80	; 128
 652:	22 2e       	mov	r2, r18
 654:	83 01       	movw	r16, r6
 656:	23 fc       	sbrc	r2, 3
 658:	1b c0       	rjmp	.+54     	; 0x690 <__stack+0x191>
 65a:	83 2d       	mov	r24, r3
 65c:	90 e0       	ldi	r25, 0x00	; 0
 65e:	48 16       	cp	r4, r24
 660:	59 06       	cpc	r5, r25
 662:	b0 f4       	brcc	.+44     	; 0x690 <__stack+0x191>
 664:	b7 01       	movw	r22, r14
 666:	80 e2       	ldi	r24, 0x20	; 32
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	0e 94 a5 05 	call	0xb4a	; 0xb4a <fputc>
 66e:	3a 94       	dec	r3
 670:	f4 cf       	rjmp	.-24     	; 0x65a <__stack+0x15b>
 672:	f5 01       	movw	r30, r10
 674:	27 fc       	sbrc	r2, 7
 676:	85 91       	lpm	r24, Z+
 678:	27 fe       	sbrs	r2, 7
 67a:	81 91       	ld	r24, Z+
 67c:	5f 01       	movw	r10, r30
 67e:	b7 01       	movw	r22, r14
 680:	90 e0       	ldi	r25, 0x00	; 0
 682:	0e 94 a5 05 	call	0xb4a	; 0xb4a <fputc>
 686:	31 10       	cpse	r3, r1
 688:	3a 94       	dec	r3
 68a:	f1 e0       	ldi	r31, 0x01	; 1
 68c:	4f 1a       	sub	r4, r31
 68e:	51 08       	sbc	r5, r1
 690:	41 14       	cp	r4, r1
 692:	51 04       	cpc	r5, r1
 694:	71 f7       	brne	.-36     	; 0x672 <__stack+0x173>
 696:	e5 c0       	rjmp	.+458    	; 0x862 <__stack+0x363>
 698:	84 36       	cpi	r24, 0x64	; 100
 69a:	11 f0       	breq	.+4      	; 0x6a0 <__stack+0x1a1>
 69c:	89 36       	cpi	r24, 0x69	; 105
 69e:	39 f5       	brne	.+78     	; 0x6ee <__stack+0x1ef>
 6a0:	f8 01       	movw	r30, r16
 6a2:	27 ff       	sbrs	r18, 7
 6a4:	07 c0       	rjmp	.+14     	; 0x6b4 <__stack+0x1b5>
 6a6:	60 81       	ld	r22, Z
 6a8:	71 81       	ldd	r23, Z+1	; 0x01
 6aa:	82 81       	ldd	r24, Z+2	; 0x02
 6ac:	93 81       	ldd	r25, Z+3	; 0x03
 6ae:	0c 5f       	subi	r16, 0xFC	; 252
 6b0:	1f 4f       	sbci	r17, 0xFF	; 255
 6b2:	08 c0       	rjmp	.+16     	; 0x6c4 <__stack+0x1c5>
 6b4:	60 81       	ld	r22, Z
 6b6:	71 81       	ldd	r23, Z+1	; 0x01
 6b8:	88 27       	eor	r24, r24
 6ba:	77 fd       	sbrc	r23, 7
 6bc:	80 95       	com	r24
 6be:	98 2f       	mov	r25, r24
 6c0:	0e 5f       	subi	r16, 0xFE	; 254
 6c2:	1f 4f       	sbci	r17, 0xFF	; 255
 6c4:	2f 76       	andi	r18, 0x6F	; 111
 6c6:	b2 2e       	mov	r11, r18
 6c8:	97 ff       	sbrs	r25, 7
 6ca:	09 c0       	rjmp	.+18     	; 0x6de <__stack+0x1df>
 6cc:	90 95       	com	r25
 6ce:	80 95       	com	r24
 6d0:	70 95       	com	r23
 6d2:	61 95       	neg	r22
 6d4:	7f 4f       	sbci	r23, 0xFF	; 255
 6d6:	8f 4f       	sbci	r24, 0xFF	; 255
 6d8:	9f 4f       	sbci	r25, 0xFF	; 255
 6da:	20 68       	ori	r18, 0x80	; 128
 6dc:	b2 2e       	mov	r11, r18
 6de:	2a e0       	ldi	r18, 0x0A	; 10
 6e0:	30 e0       	ldi	r19, 0x00	; 0
 6e2:	a4 01       	movw	r20, r8
 6e4:	0e 94 d7 05 	call	0xbae	; 0xbae <__ultoa_invert>
 6e8:	a8 2e       	mov	r10, r24
 6ea:	a8 18       	sub	r10, r8
 6ec:	44 c0       	rjmp	.+136    	; 0x776 <__stack+0x277>
 6ee:	85 37       	cpi	r24, 0x75	; 117
 6f0:	29 f4       	brne	.+10     	; 0x6fc <__stack+0x1fd>
 6f2:	2f 7e       	andi	r18, 0xEF	; 239
 6f4:	b2 2e       	mov	r11, r18
 6f6:	2a e0       	ldi	r18, 0x0A	; 10
 6f8:	30 e0       	ldi	r19, 0x00	; 0
 6fa:	25 c0       	rjmp	.+74     	; 0x746 <__stack+0x247>
 6fc:	f2 2f       	mov	r31, r18
 6fe:	f9 7f       	andi	r31, 0xF9	; 249
 700:	bf 2e       	mov	r11, r31
 702:	8f 36       	cpi	r24, 0x6F	; 111
 704:	c1 f0       	breq	.+48     	; 0x736 <__stack+0x237>
 706:	18 f4       	brcc	.+6      	; 0x70e <__stack+0x20f>
 708:	88 35       	cpi	r24, 0x58	; 88
 70a:	79 f0       	breq	.+30     	; 0x72a <__stack+0x22b>
 70c:	b4 c0       	rjmp	.+360    	; 0x876 <__stack+0x377>
 70e:	80 37       	cpi	r24, 0x70	; 112
 710:	19 f0       	breq	.+6      	; 0x718 <__stack+0x219>
 712:	88 37       	cpi	r24, 0x78	; 120
 714:	21 f0       	breq	.+8      	; 0x71e <__stack+0x21f>
 716:	af c0       	rjmp	.+350    	; 0x876 <__stack+0x377>
 718:	2f 2f       	mov	r18, r31
 71a:	20 61       	ori	r18, 0x10	; 16
 71c:	b2 2e       	mov	r11, r18
 71e:	b4 fe       	sbrs	r11, 4
 720:	0d c0       	rjmp	.+26     	; 0x73c <__stack+0x23d>
 722:	8b 2d       	mov	r24, r11
 724:	84 60       	ori	r24, 0x04	; 4
 726:	b8 2e       	mov	r11, r24
 728:	09 c0       	rjmp	.+18     	; 0x73c <__stack+0x23d>
 72a:	24 ff       	sbrs	r18, 4
 72c:	0a c0       	rjmp	.+20     	; 0x742 <__stack+0x243>
 72e:	9f 2f       	mov	r25, r31
 730:	96 60       	ori	r25, 0x06	; 6
 732:	b9 2e       	mov	r11, r25
 734:	06 c0       	rjmp	.+12     	; 0x742 <__stack+0x243>
 736:	28 e0       	ldi	r18, 0x08	; 8
 738:	30 e0       	ldi	r19, 0x00	; 0
 73a:	05 c0       	rjmp	.+10     	; 0x746 <__stack+0x247>
 73c:	20 e1       	ldi	r18, 0x10	; 16
 73e:	30 e0       	ldi	r19, 0x00	; 0
 740:	02 c0       	rjmp	.+4      	; 0x746 <__stack+0x247>
 742:	20 e1       	ldi	r18, 0x10	; 16
 744:	32 e0       	ldi	r19, 0x02	; 2
 746:	f8 01       	movw	r30, r16
 748:	b7 fe       	sbrs	r11, 7
 74a:	07 c0       	rjmp	.+14     	; 0x75a <__stack+0x25b>
 74c:	60 81       	ld	r22, Z
 74e:	71 81       	ldd	r23, Z+1	; 0x01
 750:	82 81       	ldd	r24, Z+2	; 0x02
 752:	93 81       	ldd	r25, Z+3	; 0x03
 754:	0c 5f       	subi	r16, 0xFC	; 252
 756:	1f 4f       	sbci	r17, 0xFF	; 255
 758:	06 c0       	rjmp	.+12     	; 0x766 <__stack+0x267>
 75a:	60 81       	ld	r22, Z
 75c:	71 81       	ldd	r23, Z+1	; 0x01
 75e:	80 e0       	ldi	r24, 0x00	; 0
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	0e 5f       	subi	r16, 0xFE	; 254
 764:	1f 4f       	sbci	r17, 0xFF	; 255
 766:	a4 01       	movw	r20, r8
 768:	0e 94 d7 05 	call	0xbae	; 0xbae <__ultoa_invert>
 76c:	a8 2e       	mov	r10, r24
 76e:	a8 18       	sub	r10, r8
 770:	fb 2d       	mov	r31, r11
 772:	ff 77       	andi	r31, 0x7F	; 127
 774:	bf 2e       	mov	r11, r31
 776:	b6 fe       	sbrs	r11, 6
 778:	0b c0       	rjmp	.+22     	; 0x790 <__stack+0x291>
 77a:	2b 2d       	mov	r18, r11
 77c:	2e 7f       	andi	r18, 0xFE	; 254
 77e:	a5 14       	cp	r10, r5
 780:	50 f4       	brcc	.+20     	; 0x796 <__stack+0x297>
 782:	b4 fe       	sbrs	r11, 4
 784:	0a c0       	rjmp	.+20     	; 0x79a <__stack+0x29b>
 786:	b2 fc       	sbrc	r11, 2
 788:	08 c0       	rjmp	.+16     	; 0x79a <__stack+0x29b>
 78a:	2b 2d       	mov	r18, r11
 78c:	2e 7e       	andi	r18, 0xEE	; 238
 78e:	05 c0       	rjmp	.+10     	; 0x79a <__stack+0x29b>
 790:	7a 2c       	mov	r7, r10
 792:	2b 2d       	mov	r18, r11
 794:	03 c0       	rjmp	.+6      	; 0x79c <__stack+0x29d>
 796:	7a 2c       	mov	r7, r10
 798:	01 c0       	rjmp	.+2      	; 0x79c <__stack+0x29d>
 79a:	75 2c       	mov	r7, r5
 79c:	24 ff       	sbrs	r18, 4
 79e:	0d c0       	rjmp	.+26     	; 0x7ba <__stack+0x2bb>
 7a0:	fe 01       	movw	r30, r28
 7a2:	ea 0d       	add	r30, r10
 7a4:	f1 1d       	adc	r31, r1
 7a6:	80 81       	ld	r24, Z
 7a8:	80 33       	cpi	r24, 0x30	; 48
 7aa:	11 f4       	brne	.+4      	; 0x7b0 <__stack+0x2b1>
 7ac:	29 7e       	andi	r18, 0xE9	; 233
 7ae:	09 c0       	rjmp	.+18     	; 0x7c2 <__stack+0x2c3>
 7b0:	22 ff       	sbrs	r18, 2
 7b2:	06 c0       	rjmp	.+12     	; 0x7c0 <__stack+0x2c1>
 7b4:	73 94       	inc	r7
 7b6:	73 94       	inc	r7
 7b8:	04 c0       	rjmp	.+8      	; 0x7c2 <__stack+0x2c3>
 7ba:	82 2f       	mov	r24, r18
 7bc:	86 78       	andi	r24, 0x86	; 134
 7be:	09 f0       	breq	.+2      	; 0x7c2 <__stack+0x2c3>
 7c0:	73 94       	inc	r7
 7c2:	23 fd       	sbrc	r18, 3
 7c4:	13 c0       	rjmp	.+38     	; 0x7ec <__stack+0x2ed>
 7c6:	20 ff       	sbrs	r18, 0
 7c8:	06 c0       	rjmp	.+12     	; 0x7d6 <__stack+0x2d7>
 7ca:	5a 2c       	mov	r5, r10
 7cc:	73 14       	cp	r7, r3
 7ce:	18 f4       	brcc	.+6      	; 0x7d6 <__stack+0x2d7>
 7d0:	53 0c       	add	r5, r3
 7d2:	57 18       	sub	r5, r7
 7d4:	73 2c       	mov	r7, r3
 7d6:	73 14       	cp	r7, r3
 7d8:	68 f4       	brcc	.+26     	; 0x7f4 <__stack+0x2f5>
 7da:	b7 01       	movw	r22, r14
 7dc:	80 e2       	ldi	r24, 0x20	; 32
 7de:	90 e0       	ldi	r25, 0x00	; 0
 7e0:	2c 87       	std	Y+12, r18	; 0x0c
 7e2:	0e 94 a5 05 	call	0xb4a	; 0xb4a <fputc>
 7e6:	73 94       	inc	r7
 7e8:	2c 85       	ldd	r18, Y+12	; 0x0c
 7ea:	f5 cf       	rjmp	.-22     	; 0x7d6 <__stack+0x2d7>
 7ec:	73 14       	cp	r7, r3
 7ee:	10 f4       	brcc	.+4      	; 0x7f4 <__stack+0x2f5>
 7f0:	37 18       	sub	r3, r7
 7f2:	01 c0       	rjmp	.+2      	; 0x7f6 <__stack+0x2f7>
 7f4:	31 2c       	mov	r3, r1
 7f6:	24 ff       	sbrs	r18, 4
 7f8:	12 c0       	rjmp	.+36     	; 0x81e <__stack+0x31f>
 7fa:	b7 01       	movw	r22, r14
 7fc:	80 e3       	ldi	r24, 0x30	; 48
 7fe:	90 e0       	ldi	r25, 0x00	; 0
 800:	2c 87       	std	Y+12, r18	; 0x0c
 802:	0e 94 a5 05 	call	0xb4a	; 0xb4a <fputc>
 806:	2c 85       	ldd	r18, Y+12	; 0x0c
 808:	22 ff       	sbrs	r18, 2
 80a:	17 c0       	rjmp	.+46     	; 0x83a <__stack+0x33b>
 80c:	21 ff       	sbrs	r18, 1
 80e:	03 c0       	rjmp	.+6      	; 0x816 <__stack+0x317>
 810:	88 e5       	ldi	r24, 0x58	; 88
 812:	90 e0       	ldi	r25, 0x00	; 0
 814:	02 c0       	rjmp	.+4      	; 0x81a <__stack+0x31b>
 816:	88 e7       	ldi	r24, 0x78	; 120
 818:	90 e0       	ldi	r25, 0x00	; 0
 81a:	b7 01       	movw	r22, r14
 81c:	0c c0       	rjmp	.+24     	; 0x836 <__stack+0x337>
 81e:	82 2f       	mov	r24, r18
 820:	86 78       	andi	r24, 0x86	; 134
 822:	59 f0       	breq	.+22     	; 0x83a <__stack+0x33b>
 824:	21 fd       	sbrc	r18, 1
 826:	02 c0       	rjmp	.+4      	; 0x82c <__stack+0x32d>
 828:	80 e2       	ldi	r24, 0x20	; 32
 82a:	01 c0       	rjmp	.+2      	; 0x82e <__stack+0x32f>
 82c:	8b e2       	ldi	r24, 0x2B	; 43
 82e:	27 fd       	sbrc	r18, 7
 830:	8d e2       	ldi	r24, 0x2D	; 45
 832:	b7 01       	movw	r22, r14
 834:	90 e0       	ldi	r25, 0x00	; 0
 836:	0e 94 a5 05 	call	0xb4a	; 0xb4a <fputc>
 83a:	a5 14       	cp	r10, r5
 83c:	38 f4       	brcc	.+14     	; 0x84c <__stack+0x34d>
 83e:	b7 01       	movw	r22, r14
 840:	80 e3       	ldi	r24, 0x30	; 48
 842:	90 e0       	ldi	r25, 0x00	; 0
 844:	0e 94 a5 05 	call	0xb4a	; 0xb4a <fputc>
 848:	5a 94       	dec	r5
 84a:	f7 cf       	rjmp	.-18     	; 0x83a <__stack+0x33b>
 84c:	aa 94       	dec	r10
 84e:	f4 01       	movw	r30, r8
 850:	ea 0d       	add	r30, r10
 852:	f1 1d       	adc	r31, r1
 854:	80 81       	ld	r24, Z
 856:	b7 01       	movw	r22, r14
 858:	90 e0       	ldi	r25, 0x00	; 0
 85a:	0e 94 a5 05 	call	0xb4a	; 0xb4a <fputc>
 85e:	a1 10       	cpse	r10, r1
 860:	f5 cf       	rjmp	.-22     	; 0x84c <__stack+0x34d>
 862:	33 20       	and	r3, r3
 864:	09 f4       	brne	.+2      	; 0x868 <__stack+0x369>
 866:	51 ce       	rjmp	.-862    	; 0x50a <__stack+0xb>
 868:	b7 01       	movw	r22, r14
 86a:	80 e2       	ldi	r24, 0x20	; 32
 86c:	90 e0       	ldi	r25, 0x00	; 0
 86e:	0e 94 a5 05 	call	0xb4a	; 0xb4a <fputc>
 872:	3a 94       	dec	r3
 874:	f6 cf       	rjmp	.-20     	; 0x862 <__stack+0x363>
 876:	f7 01       	movw	r30, r14
 878:	86 81       	ldd	r24, Z+6	; 0x06
 87a:	97 81       	ldd	r25, Z+7	; 0x07
 87c:	02 c0       	rjmp	.+4      	; 0x882 <__stack+0x383>
 87e:	8f ef       	ldi	r24, 0xFF	; 255
 880:	9f ef       	ldi	r25, 0xFF	; 255
 882:	2c 96       	adiw	r28, 0x0c	; 12
 884:	e2 e1       	ldi	r30, 0x12	; 18
 886:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <__epilogue_restores__>

0000088a <calloc>:
 88a:	0f 93       	push	r16
 88c:	1f 93       	push	r17
 88e:	cf 93       	push	r28
 890:	df 93       	push	r29
 892:	86 9f       	mul	r24, r22
 894:	80 01       	movw	r16, r0
 896:	87 9f       	mul	r24, r23
 898:	10 0d       	add	r17, r0
 89a:	96 9f       	mul	r25, r22
 89c:	10 0d       	add	r17, r0
 89e:	11 24       	eor	r1, r1
 8a0:	c8 01       	movw	r24, r16
 8a2:	0e 94 61 04 	call	0x8c2	; 0x8c2 <malloc>
 8a6:	ec 01       	movw	r28, r24
 8a8:	00 97       	sbiw	r24, 0x00	; 0
 8aa:	29 f0       	breq	.+10     	; 0x8b6 <calloc+0x2c>
 8ac:	a8 01       	movw	r20, r16
 8ae:	60 e0       	ldi	r22, 0x00	; 0
 8b0:	70 e0       	ldi	r23, 0x00	; 0
 8b2:	0e 94 93 05 	call	0xb26	; 0xb26 <memset>
 8b6:	ce 01       	movw	r24, r28
 8b8:	df 91       	pop	r29
 8ba:	cf 91       	pop	r28
 8bc:	1f 91       	pop	r17
 8be:	0f 91       	pop	r16
 8c0:	08 95       	ret

000008c2 <malloc>:
 8c2:	cf 93       	push	r28
 8c4:	df 93       	push	r29
 8c6:	82 30       	cpi	r24, 0x02	; 2
 8c8:	91 05       	cpc	r25, r1
 8ca:	10 f4       	brcc	.+4      	; 0x8d0 <malloc+0xe>
 8cc:	82 e0       	ldi	r24, 0x02	; 2
 8ce:	90 e0       	ldi	r25, 0x00	; 0
 8d0:	e0 91 2a 02 	lds	r30, 0x022A
 8d4:	f0 91 2b 02 	lds	r31, 0x022B
 8d8:	20 e0       	ldi	r18, 0x00	; 0
 8da:	30 e0       	ldi	r19, 0x00	; 0
 8dc:	a0 e0       	ldi	r26, 0x00	; 0
 8de:	b0 e0       	ldi	r27, 0x00	; 0
 8e0:	30 97       	sbiw	r30, 0x00	; 0
 8e2:	39 f1       	breq	.+78     	; 0x932 <malloc+0x70>
 8e4:	40 81       	ld	r20, Z
 8e6:	51 81       	ldd	r21, Z+1	; 0x01
 8e8:	48 17       	cp	r20, r24
 8ea:	59 07       	cpc	r21, r25
 8ec:	b8 f0       	brcs	.+46     	; 0x91c <malloc+0x5a>
 8ee:	48 17       	cp	r20, r24
 8f0:	59 07       	cpc	r21, r25
 8f2:	71 f4       	brne	.+28     	; 0x910 <malloc+0x4e>
 8f4:	82 81       	ldd	r24, Z+2	; 0x02
 8f6:	93 81       	ldd	r25, Z+3	; 0x03
 8f8:	10 97       	sbiw	r26, 0x00	; 0
 8fa:	29 f0       	breq	.+10     	; 0x906 <malloc+0x44>
 8fc:	13 96       	adiw	r26, 0x03	; 3
 8fe:	9c 93       	st	X, r25
 900:	8e 93       	st	-X, r24
 902:	12 97       	sbiw	r26, 0x02	; 2
 904:	2c c0       	rjmp	.+88     	; 0x95e <malloc+0x9c>
 906:	90 93 2b 02 	sts	0x022B, r25
 90a:	80 93 2a 02 	sts	0x022A, r24
 90e:	27 c0       	rjmp	.+78     	; 0x95e <malloc+0x9c>
 910:	21 15       	cp	r18, r1
 912:	31 05       	cpc	r19, r1
 914:	31 f0       	breq	.+12     	; 0x922 <malloc+0x60>
 916:	42 17       	cp	r20, r18
 918:	53 07       	cpc	r21, r19
 91a:	18 f0       	brcs	.+6      	; 0x922 <malloc+0x60>
 91c:	a9 01       	movw	r20, r18
 91e:	db 01       	movw	r26, r22
 920:	01 c0       	rjmp	.+2      	; 0x924 <malloc+0x62>
 922:	ef 01       	movw	r28, r30
 924:	9a 01       	movw	r18, r20
 926:	bd 01       	movw	r22, r26
 928:	df 01       	movw	r26, r30
 92a:	02 80       	ldd	r0, Z+2	; 0x02
 92c:	f3 81       	ldd	r31, Z+3	; 0x03
 92e:	e0 2d       	mov	r30, r0
 930:	d7 cf       	rjmp	.-82     	; 0x8e0 <malloc+0x1e>
 932:	21 15       	cp	r18, r1
 934:	31 05       	cpc	r19, r1
 936:	f9 f0       	breq	.+62     	; 0x976 <malloc+0xb4>
 938:	28 1b       	sub	r18, r24
 93a:	39 0b       	sbc	r19, r25
 93c:	24 30       	cpi	r18, 0x04	; 4
 93e:	31 05       	cpc	r19, r1
 940:	80 f4       	brcc	.+32     	; 0x962 <malloc+0xa0>
 942:	8a 81       	ldd	r24, Y+2	; 0x02
 944:	9b 81       	ldd	r25, Y+3	; 0x03
 946:	61 15       	cp	r22, r1
 948:	71 05       	cpc	r23, r1
 94a:	21 f0       	breq	.+8      	; 0x954 <malloc+0x92>
 94c:	fb 01       	movw	r30, r22
 94e:	93 83       	std	Z+3, r25	; 0x03
 950:	82 83       	std	Z+2, r24	; 0x02
 952:	04 c0       	rjmp	.+8      	; 0x95c <malloc+0x9a>
 954:	90 93 2b 02 	sts	0x022B, r25
 958:	80 93 2a 02 	sts	0x022A, r24
 95c:	fe 01       	movw	r30, r28
 95e:	32 96       	adiw	r30, 0x02	; 2
 960:	44 c0       	rjmp	.+136    	; 0x9ea <malloc+0x128>
 962:	fe 01       	movw	r30, r28
 964:	e2 0f       	add	r30, r18
 966:	f3 1f       	adc	r31, r19
 968:	81 93       	st	Z+, r24
 96a:	91 93       	st	Z+, r25
 96c:	22 50       	subi	r18, 0x02	; 2
 96e:	31 09       	sbc	r19, r1
 970:	39 83       	std	Y+1, r19	; 0x01
 972:	28 83       	st	Y, r18
 974:	3a c0       	rjmp	.+116    	; 0x9ea <malloc+0x128>
 976:	20 91 28 02 	lds	r18, 0x0228
 97a:	30 91 29 02 	lds	r19, 0x0229
 97e:	23 2b       	or	r18, r19
 980:	41 f4       	brne	.+16     	; 0x992 <malloc+0xd0>
 982:	20 91 06 01 	lds	r18, 0x0106
 986:	30 91 07 01 	lds	r19, 0x0107
 98a:	30 93 29 02 	sts	0x0229, r19
 98e:	20 93 28 02 	sts	0x0228, r18
 992:	20 91 04 01 	lds	r18, 0x0104
 996:	30 91 05 01 	lds	r19, 0x0105
 99a:	21 15       	cp	r18, r1
 99c:	31 05       	cpc	r19, r1
 99e:	41 f4       	brne	.+16     	; 0x9b0 <malloc+0xee>
 9a0:	2d b7       	in	r18, 0x3d	; 61
 9a2:	3e b7       	in	r19, 0x3e	; 62
 9a4:	40 91 08 01 	lds	r20, 0x0108
 9a8:	50 91 09 01 	lds	r21, 0x0109
 9ac:	24 1b       	sub	r18, r20
 9ae:	35 0b       	sbc	r19, r21
 9b0:	e0 91 28 02 	lds	r30, 0x0228
 9b4:	f0 91 29 02 	lds	r31, 0x0229
 9b8:	e2 17       	cp	r30, r18
 9ba:	f3 07       	cpc	r31, r19
 9bc:	a0 f4       	brcc	.+40     	; 0x9e6 <malloc+0x124>
 9be:	2e 1b       	sub	r18, r30
 9c0:	3f 0b       	sbc	r19, r31
 9c2:	28 17       	cp	r18, r24
 9c4:	39 07       	cpc	r19, r25
 9c6:	78 f0       	brcs	.+30     	; 0x9e6 <malloc+0x124>
 9c8:	ac 01       	movw	r20, r24
 9ca:	4e 5f       	subi	r20, 0xFE	; 254
 9cc:	5f 4f       	sbci	r21, 0xFF	; 255
 9ce:	24 17       	cp	r18, r20
 9d0:	35 07       	cpc	r19, r21
 9d2:	48 f0       	brcs	.+18     	; 0x9e6 <malloc+0x124>
 9d4:	4e 0f       	add	r20, r30
 9d6:	5f 1f       	adc	r21, r31
 9d8:	50 93 29 02 	sts	0x0229, r21
 9dc:	40 93 28 02 	sts	0x0228, r20
 9e0:	81 93       	st	Z+, r24
 9e2:	91 93       	st	Z+, r25
 9e4:	02 c0       	rjmp	.+4      	; 0x9ea <malloc+0x128>
 9e6:	e0 e0       	ldi	r30, 0x00	; 0
 9e8:	f0 e0       	ldi	r31, 0x00	; 0
 9ea:	cf 01       	movw	r24, r30
 9ec:	df 91       	pop	r29
 9ee:	cf 91       	pop	r28
 9f0:	08 95       	ret

000009f2 <free>:
 9f2:	cf 93       	push	r28
 9f4:	df 93       	push	r29
 9f6:	00 97       	sbiw	r24, 0x00	; 0
 9f8:	09 f4       	brne	.+2      	; 0x9fc <free+0xa>
 9fa:	87 c0       	rjmp	.+270    	; 0xb0a <free+0x118>
 9fc:	fc 01       	movw	r30, r24
 9fe:	32 97       	sbiw	r30, 0x02	; 2
 a00:	13 82       	std	Z+3, r1	; 0x03
 a02:	12 82       	std	Z+2, r1	; 0x02
 a04:	c0 91 2a 02 	lds	r28, 0x022A
 a08:	d0 91 2b 02 	lds	r29, 0x022B
 a0c:	20 97       	sbiw	r28, 0x00	; 0
 a0e:	81 f4       	brne	.+32     	; 0xa30 <free+0x3e>
 a10:	20 81       	ld	r18, Z
 a12:	31 81       	ldd	r19, Z+1	; 0x01
 a14:	28 0f       	add	r18, r24
 a16:	39 1f       	adc	r19, r25
 a18:	80 91 28 02 	lds	r24, 0x0228
 a1c:	90 91 29 02 	lds	r25, 0x0229
 a20:	82 17       	cp	r24, r18
 a22:	93 07       	cpc	r25, r19
 a24:	79 f5       	brne	.+94     	; 0xa84 <free+0x92>
 a26:	f0 93 29 02 	sts	0x0229, r31
 a2a:	e0 93 28 02 	sts	0x0228, r30
 a2e:	6d c0       	rjmp	.+218    	; 0xb0a <free+0x118>
 a30:	de 01       	movw	r26, r28
 a32:	20 e0       	ldi	r18, 0x00	; 0
 a34:	30 e0       	ldi	r19, 0x00	; 0
 a36:	ae 17       	cp	r26, r30
 a38:	bf 07       	cpc	r27, r31
 a3a:	50 f4       	brcc	.+20     	; 0xa50 <free+0x5e>
 a3c:	12 96       	adiw	r26, 0x02	; 2
 a3e:	4d 91       	ld	r20, X+
 a40:	5c 91       	ld	r21, X
 a42:	13 97       	sbiw	r26, 0x03	; 3
 a44:	9d 01       	movw	r18, r26
 a46:	41 15       	cp	r20, r1
 a48:	51 05       	cpc	r21, r1
 a4a:	09 f1       	breq	.+66     	; 0xa8e <free+0x9c>
 a4c:	da 01       	movw	r26, r20
 a4e:	f3 cf       	rjmp	.-26     	; 0xa36 <free+0x44>
 a50:	b3 83       	std	Z+3, r27	; 0x03
 a52:	a2 83       	std	Z+2, r26	; 0x02
 a54:	40 81       	ld	r20, Z
 a56:	51 81       	ldd	r21, Z+1	; 0x01
 a58:	84 0f       	add	r24, r20
 a5a:	95 1f       	adc	r25, r21
 a5c:	8a 17       	cp	r24, r26
 a5e:	9b 07       	cpc	r25, r27
 a60:	71 f4       	brne	.+28     	; 0xa7e <free+0x8c>
 a62:	8d 91       	ld	r24, X+
 a64:	9c 91       	ld	r25, X
 a66:	11 97       	sbiw	r26, 0x01	; 1
 a68:	84 0f       	add	r24, r20
 a6a:	95 1f       	adc	r25, r21
 a6c:	02 96       	adiw	r24, 0x02	; 2
 a6e:	91 83       	std	Z+1, r25	; 0x01
 a70:	80 83       	st	Z, r24
 a72:	12 96       	adiw	r26, 0x02	; 2
 a74:	8d 91       	ld	r24, X+
 a76:	9c 91       	ld	r25, X
 a78:	13 97       	sbiw	r26, 0x03	; 3
 a7a:	93 83       	std	Z+3, r25	; 0x03
 a7c:	82 83       	std	Z+2, r24	; 0x02
 a7e:	21 15       	cp	r18, r1
 a80:	31 05       	cpc	r19, r1
 a82:	29 f4       	brne	.+10     	; 0xa8e <free+0x9c>
 a84:	f0 93 2b 02 	sts	0x022B, r31
 a88:	e0 93 2a 02 	sts	0x022A, r30
 a8c:	3e c0       	rjmp	.+124    	; 0xb0a <free+0x118>
 a8e:	d9 01       	movw	r26, r18
 a90:	13 96       	adiw	r26, 0x03	; 3
 a92:	fc 93       	st	X, r31
 a94:	ee 93       	st	-X, r30
 a96:	12 97       	sbiw	r26, 0x02	; 2
 a98:	4d 91       	ld	r20, X+
 a9a:	5d 91       	ld	r21, X+
 a9c:	a4 0f       	add	r26, r20
 a9e:	b5 1f       	adc	r27, r21
 aa0:	ea 17       	cp	r30, r26
 aa2:	fb 07       	cpc	r31, r27
 aa4:	79 f4       	brne	.+30     	; 0xac4 <free+0xd2>
 aa6:	80 81       	ld	r24, Z
 aa8:	91 81       	ldd	r25, Z+1	; 0x01
 aaa:	84 0f       	add	r24, r20
 aac:	95 1f       	adc	r25, r21
 aae:	02 96       	adiw	r24, 0x02	; 2
 ab0:	d9 01       	movw	r26, r18
 ab2:	11 96       	adiw	r26, 0x01	; 1
 ab4:	9c 93       	st	X, r25
 ab6:	8e 93       	st	-X, r24
 ab8:	82 81       	ldd	r24, Z+2	; 0x02
 aba:	93 81       	ldd	r25, Z+3	; 0x03
 abc:	13 96       	adiw	r26, 0x03	; 3
 abe:	9c 93       	st	X, r25
 ac0:	8e 93       	st	-X, r24
 ac2:	12 97       	sbiw	r26, 0x02	; 2
 ac4:	e0 e0       	ldi	r30, 0x00	; 0
 ac6:	f0 e0       	ldi	r31, 0x00	; 0
 ac8:	8a 81       	ldd	r24, Y+2	; 0x02
 aca:	9b 81       	ldd	r25, Y+3	; 0x03
 acc:	00 97       	sbiw	r24, 0x00	; 0
 ace:	19 f0       	breq	.+6      	; 0xad6 <free+0xe4>
 ad0:	fe 01       	movw	r30, r28
 ad2:	ec 01       	movw	r28, r24
 ad4:	f9 cf       	rjmp	.-14     	; 0xac8 <free+0xd6>
 ad6:	ce 01       	movw	r24, r28
 ad8:	02 96       	adiw	r24, 0x02	; 2
 ada:	28 81       	ld	r18, Y
 adc:	39 81       	ldd	r19, Y+1	; 0x01
 ade:	82 0f       	add	r24, r18
 ae0:	93 1f       	adc	r25, r19
 ae2:	20 91 28 02 	lds	r18, 0x0228
 ae6:	30 91 29 02 	lds	r19, 0x0229
 aea:	28 17       	cp	r18, r24
 aec:	39 07       	cpc	r19, r25
 aee:	69 f4       	brne	.+26     	; 0xb0a <free+0x118>
 af0:	30 97       	sbiw	r30, 0x00	; 0
 af2:	29 f4       	brne	.+10     	; 0xafe <free+0x10c>
 af4:	10 92 2b 02 	sts	0x022B, r1
 af8:	10 92 2a 02 	sts	0x022A, r1
 afc:	02 c0       	rjmp	.+4      	; 0xb02 <free+0x110>
 afe:	13 82       	std	Z+3, r1	; 0x03
 b00:	12 82       	std	Z+2, r1	; 0x02
 b02:	d0 93 29 02 	sts	0x0229, r29
 b06:	c0 93 28 02 	sts	0x0228, r28
 b0a:	df 91       	pop	r29
 b0c:	cf 91       	pop	r28
 b0e:	08 95       	ret

00000b10 <strnlen_P>:
 b10:	fc 01       	movw	r30, r24
 b12:	05 90       	lpm	r0, Z+
 b14:	61 50       	subi	r22, 0x01	; 1
 b16:	70 40       	sbci	r23, 0x00	; 0
 b18:	01 10       	cpse	r0, r1
 b1a:	d8 f7       	brcc	.-10     	; 0xb12 <strnlen_P+0x2>
 b1c:	80 95       	com	r24
 b1e:	90 95       	com	r25
 b20:	8e 0f       	add	r24, r30
 b22:	9f 1f       	adc	r25, r31
 b24:	08 95       	ret

00000b26 <memset>:
 b26:	dc 01       	movw	r26, r24
 b28:	01 c0       	rjmp	.+2      	; 0xb2c <memset+0x6>
 b2a:	6d 93       	st	X+, r22
 b2c:	41 50       	subi	r20, 0x01	; 1
 b2e:	50 40       	sbci	r21, 0x00	; 0
 b30:	e0 f7       	brcc	.-8      	; 0xb2a <memset+0x4>
 b32:	08 95       	ret

00000b34 <strnlen>:
 b34:	fc 01       	movw	r30, r24
 b36:	61 50       	subi	r22, 0x01	; 1
 b38:	70 40       	sbci	r23, 0x00	; 0
 b3a:	01 90       	ld	r0, Z+
 b3c:	01 10       	cpse	r0, r1
 b3e:	d8 f7       	brcc	.-10     	; 0xb36 <strnlen+0x2>
 b40:	80 95       	com	r24
 b42:	90 95       	com	r25
 b44:	8e 0f       	add	r24, r30
 b46:	9f 1f       	adc	r25, r31
 b48:	08 95       	ret

00000b4a <fputc>:
 b4a:	0f 93       	push	r16
 b4c:	1f 93       	push	r17
 b4e:	cf 93       	push	r28
 b50:	df 93       	push	r29
 b52:	18 2f       	mov	r17, r24
 b54:	09 2f       	mov	r16, r25
 b56:	eb 01       	movw	r28, r22
 b58:	8b 81       	ldd	r24, Y+3	; 0x03
 b5a:	81 fd       	sbrc	r24, 1
 b5c:	03 c0       	rjmp	.+6      	; 0xb64 <fputc+0x1a>
 b5e:	8f ef       	ldi	r24, 0xFF	; 255
 b60:	9f ef       	ldi	r25, 0xFF	; 255
 b62:	20 c0       	rjmp	.+64     	; 0xba4 <fputc+0x5a>
 b64:	82 ff       	sbrs	r24, 2
 b66:	10 c0       	rjmp	.+32     	; 0xb88 <fputc+0x3e>
 b68:	4e 81       	ldd	r20, Y+6	; 0x06
 b6a:	5f 81       	ldd	r21, Y+7	; 0x07
 b6c:	2c 81       	ldd	r18, Y+4	; 0x04
 b6e:	3d 81       	ldd	r19, Y+5	; 0x05
 b70:	42 17       	cp	r20, r18
 b72:	53 07       	cpc	r21, r19
 b74:	7c f4       	brge	.+30     	; 0xb94 <fputc+0x4a>
 b76:	e8 81       	ld	r30, Y
 b78:	f9 81       	ldd	r31, Y+1	; 0x01
 b7a:	9f 01       	movw	r18, r30
 b7c:	2f 5f       	subi	r18, 0xFF	; 255
 b7e:	3f 4f       	sbci	r19, 0xFF	; 255
 b80:	39 83       	std	Y+1, r19	; 0x01
 b82:	28 83       	st	Y, r18
 b84:	10 83       	st	Z, r17
 b86:	06 c0       	rjmp	.+12     	; 0xb94 <fputc+0x4a>
 b88:	e8 85       	ldd	r30, Y+8	; 0x08
 b8a:	f9 85       	ldd	r31, Y+9	; 0x09
 b8c:	81 2f       	mov	r24, r17
 b8e:	09 95       	icall
 b90:	89 2b       	or	r24, r25
 b92:	29 f7       	brne	.-54     	; 0xb5e <fputc+0x14>
 b94:	2e 81       	ldd	r18, Y+6	; 0x06
 b96:	3f 81       	ldd	r19, Y+7	; 0x07
 b98:	2f 5f       	subi	r18, 0xFF	; 255
 b9a:	3f 4f       	sbci	r19, 0xFF	; 255
 b9c:	3f 83       	std	Y+7, r19	; 0x07
 b9e:	2e 83       	std	Y+6, r18	; 0x06
 ba0:	81 2f       	mov	r24, r17
 ba2:	90 2f       	mov	r25, r16
 ba4:	df 91       	pop	r29
 ba6:	cf 91       	pop	r28
 ba8:	1f 91       	pop	r17
 baa:	0f 91       	pop	r16
 bac:	08 95       	ret

00000bae <__ultoa_invert>:
 bae:	fa 01       	movw	r30, r20
 bb0:	aa 27       	eor	r26, r26
 bb2:	28 30       	cpi	r18, 0x08	; 8
 bb4:	51 f1       	breq	.+84     	; 0xc0a <__ultoa_invert+0x5c>
 bb6:	20 31       	cpi	r18, 0x10	; 16
 bb8:	81 f1       	breq	.+96     	; 0xc1a <__ultoa_invert+0x6c>
 bba:	e8 94       	clt
 bbc:	6f 93       	push	r22
 bbe:	6e 7f       	andi	r22, 0xFE	; 254
 bc0:	6e 5f       	subi	r22, 0xFE	; 254
 bc2:	7f 4f       	sbci	r23, 0xFF	; 255
 bc4:	8f 4f       	sbci	r24, 0xFF	; 255
 bc6:	9f 4f       	sbci	r25, 0xFF	; 255
 bc8:	af 4f       	sbci	r26, 0xFF	; 255
 bca:	b1 e0       	ldi	r27, 0x01	; 1
 bcc:	3e d0       	rcall	.+124    	; 0xc4a <__ultoa_invert+0x9c>
 bce:	b4 e0       	ldi	r27, 0x04	; 4
 bd0:	3c d0       	rcall	.+120    	; 0xc4a <__ultoa_invert+0x9c>
 bd2:	67 0f       	add	r22, r23
 bd4:	78 1f       	adc	r23, r24
 bd6:	89 1f       	adc	r24, r25
 bd8:	9a 1f       	adc	r25, r26
 bda:	a1 1d       	adc	r26, r1
 bdc:	68 0f       	add	r22, r24
 bde:	79 1f       	adc	r23, r25
 be0:	8a 1f       	adc	r24, r26
 be2:	91 1d       	adc	r25, r1
 be4:	a1 1d       	adc	r26, r1
 be6:	6a 0f       	add	r22, r26
 be8:	71 1d       	adc	r23, r1
 bea:	81 1d       	adc	r24, r1
 bec:	91 1d       	adc	r25, r1
 bee:	a1 1d       	adc	r26, r1
 bf0:	20 d0       	rcall	.+64     	; 0xc32 <__ultoa_invert+0x84>
 bf2:	09 f4       	brne	.+2      	; 0xbf6 <__ultoa_invert+0x48>
 bf4:	68 94       	set
 bf6:	3f 91       	pop	r19
 bf8:	2a e0       	ldi	r18, 0x0A	; 10
 bfa:	26 9f       	mul	r18, r22
 bfc:	11 24       	eor	r1, r1
 bfe:	30 19       	sub	r19, r0
 c00:	30 5d       	subi	r19, 0xD0	; 208
 c02:	31 93       	st	Z+, r19
 c04:	de f6       	brtc	.-74     	; 0xbbc <__ultoa_invert+0xe>
 c06:	cf 01       	movw	r24, r30
 c08:	08 95       	ret
 c0a:	46 2f       	mov	r20, r22
 c0c:	47 70       	andi	r20, 0x07	; 7
 c0e:	40 5d       	subi	r20, 0xD0	; 208
 c10:	41 93       	st	Z+, r20
 c12:	b3 e0       	ldi	r27, 0x03	; 3
 c14:	0f d0       	rcall	.+30     	; 0xc34 <__ultoa_invert+0x86>
 c16:	c9 f7       	brne	.-14     	; 0xc0a <__ultoa_invert+0x5c>
 c18:	f6 cf       	rjmp	.-20     	; 0xc06 <__ultoa_invert+0x58>
 c1a:	46 2f       	mov	r20, r22
 c1c:	4f 70       	andi	r20, 0x0F	; 15
 c1e:	40 5d       	subi	r20, 0xD0	; 208
 c20:	4a 33       	cpi	r20, 0x3A	; 58
 c22:	18 f0       	brcs	.+6      	; 0xc2a <__ultoa_invert+0x7c>
 c24:	49 5d       	subi	r20, 0xD9	; 217
 c26:	31 fd       	sbrc	r19, 1
 c28:	40 52       	subi	r20, 0x20	; 32
 c2a:	41 93       	st	Z+, r20
 c2c:	02 d0       	rcall	.+4      	; 0xc32 <__ultoa_invert+0x84>
 c2e:	a9 f7       	brne	.-22     	; 0xc1a <__ultoa_invert+0x6c>
 c30:	ea cf       	rjmp	.-44     	; 0xc06 <__ultoa_invert+0x58>
 c32:	b4 e0       	ldi	r27, 0x04	; 4
 c34:	a6 95       	lsr	r26
 c36:	97 95       	ror	r25
 c38:	87 95       	ror	r24
 c3a:	77 95       	ror	r23
 c3c:	67 95       	ror	r22
 c3e:	ba 95       	dec	r27
 c40:	c9 f7       	brne	.-14     	; 0xc34 <__ultoa_invert+0x86>
 c42:	00 97       	sbiw	r24, 0x00	; 0
 c44:	61 05       	cpc	r22, r1
 c46:	71 05       	cpc	r23, r1
 c48:	08 95       	ret
 c4a:	9b 01       	movw	r18, r22
 c4c:	ac 01       	movw	r20, r24
 c4e:	0a 2e       	mov	r0, r26
 c50:	06 94       	lsr	r0
 c52:	57 95       	ror	r21
 c54:	47 95       	ror	r20
 c56:	37 95       	ror	r19
 c58:	27 95       	ror	r18
 c5a:	ba 95       	dec	r27
 c5c:	c9 f7       	brne	.-14     	; 0xc50 <__ultoa_invert+0xa2>
 c5e:	62 0f       	add	r22, r18
 c60:	73 1f       	adc	r23, r19
 c62:	84 1f       	adc	r24, r20
 c64:	95 1f       	adc	r25, r21
 c66:	a0 1d       	adc	r26, r0
 c68:	08 95       	ret

00000c6a <__muluhisi3>:
 c6a:	0e 94 7f 06 	call	0xcfe	; 0xcfe <__umulhisi3>
 c6e:	a5 9f       	mul	r26, r21
 c70:	90 0d       	add	r25, r0
 c72:	b4 9f       	mul	r27, r20
 c74:	90 0d       	add	r25, r0
 c76:	a4 9f       	mul	r26, r20
 c78:	80 0d       	add	r24, r0
 c7a:	91 1d       	adc	r25, r1
 c7c:	11 24       	eor	r1, r1
 c7e:	08 95       	ret

00000c80 <__mulshisi3>:
 c80:	b7 ff       	sbrs	r27, 7
 c82:	0c 94 35 06 	jmp	0xc6a	; 0xc6a <__muluhisi3>

00000c86 <__mulohisi3>:
 c86:	0e 94 35 06 	call	0xc6a	; 0xc6a <__muluhisi3>
 c8a:	82 1b       	sub	r24, r18
 c8c:	93 0b       	sbc	r25, r19
 c8e:	08 95       	ret

00000c90 <__prologue_saves__>:
 c90:	2f 92       	push	r2
 c92:	3f 92       	push	r3
 c94:	4f 92       	push	r4
 c96:	5f 92       	push	r5
 c98:	6f 92       	push	r6
 c9a:	7f 92       	push	r7
 c9c:	8f 92       	push	r8
 c9e:	9f 92       	push	r9
 ca0:	af 92       	push	r10
 ca2:	bf 92       	push	r11
 ca4:	cf 92       	push	r12
 ca6:	df 92       	push	r13
 ca8:	ef 92       	push	r14
 caa:	ff 92       	push	r15
 cac:	0f 93       	push	r16
 cae:	1f 93       	push	r17
 cb0:	cf 93       	push	r28
 cb2:	df 93       	push	r29
 cb4:	cd b7       	in	r28, 0x3d	; 61
 cb6:	de b7       	in	r29, 0x3e	; 62
 cb8:	ca 1b       	sub	r28, r26
 cba:	db 0b       	sbc	r29, r27
 cbc:	0f b6       	in	r0, 0x3f	; 63
 cbe:	f8 94       	cli
 cc0:	de bf       	out	0x3e, r29	; 62
 cc2:	0f be       	out	0x3f, r0	; 63
 cc4:	cd bf       	out	0x3d, r28	; 61
 cc6:	09 94       	ijmp

00000cc8 <__epilogue_restores__>:
 cc8:	2a 88       	ldd	r2, Y+18	; 0x12
 cca:	39 88       	ldd	r3, Y+17	; 0x11
 ccc:	48 88       	ldd	r4, Y+16	; 0x10
 cce:	5f 84       	ldd	r5, Y+15	; 0x0f
 cd0:	6e 84       	ldd	r6, Y+14	; 0x0e
 cd2:	7d 84       	ldd	r7, Y+13	; 0x0d
 cd4:	8c 84       	ldd	r8, Y+12	; 0x0c
 cd6:	9b 84       	ldd	r9, Y+11	; 0x0b
 cd8:	aa 84       	ldd	r10, Y+10	; 0x0a
 cda:	b9 84       	ldd	r11, Y+9	; 0x09
 cdc:	c8 84       	ldd	r12, Y+8	; 0x08
 cde:	df 80       	ldd	r13, Y+7	; 0x07
 ce0:	ee 80       	ldd	r14, Y+6	; 0x06
 ce2:	fd 80       	ldd	r15, Y+5	; 0x05
 ce4:	0c 81       	ldd	r16, Y+4	; 0x04
 ce6:	1b 81       	ldd	r17, Y+3	; 0x03
 ce8:	aa 81       	ldd	r26, Y+2	; 0x02
 cea:	b9 81       	ldd	r27, Y+1	; 0x01
 cec:	ce 0f       	add	r28, r30
 cee:	d1 1d       	adc	r29, r1
 cf0:	0f b6       	in	r0, 0x3f	; 63
 cf2:	f8 94       	cli
 cf4:	de bf       	out	0x3e, r29	; 62
 cf6:	0f be       	out	0x3f, r0	; 63
 cf8:	cd bf       	out	0x3d, r28	; 61
 cfa:	ed 01       	movw	r28, r26
 cfc:	08 95       	ret

00000cfe <__umulhisi3>:
 cfe:	a2 9f       	mul	r26, r18
 d00:	b0 01       	movw	r22, r0
 d02:	b3 9f       	mul	r27, r19
 d04:	c0 01       	movw	r24, r0
 d06:	a3 9f       	mul	r26, r19
 d08:	70 0d       	add	r23, r0
 d0a:	81 1d       	adc	r24, r1
 d0c:	11 24       	eor	r1, r1
 d0e:	91 1d       	adc	r25, r1
 d10:	b2 9f       	mul	r27, r18
 d12:	70 0d       	add	r23, r0
 d14:	81 1d       	adc	r24, r1
 d16:	11 24       	eor	r1, r1
 d18:	91 1d       	adc	r25, r1
 d1a:	08 95       	ret

00000d1c <_exit>:
 d1c:	f8 94       	cli

00000d1e <__stop_program>:
 d1e:	ff cf       	rjmp	.-2      	; 0xd1e <__stop_program>

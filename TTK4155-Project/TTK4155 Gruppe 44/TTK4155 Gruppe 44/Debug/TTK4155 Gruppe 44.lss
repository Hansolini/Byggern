
TTK4155 Gruppe 44.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b2  00800100  00000f2e  00000fc2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f2e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  008001b2  008001b2  00001074  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001074  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000d0  00000000  00000000  000010d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000747  00000000  00000000  000011a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000433  00000000  00000000  000018e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004ac  00000000  00000000  00001d1a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000248  00000000  00000000  000021c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000272  00000000  00000000  00002410  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000613  00000000  00000000  00002682  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  00002c95  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ee e2       	ldi	r30, 0x2E	; 46
  84:	ff e0       	ldi	r31, 0x0F	; 15
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a2 3b       	cpi	r26, 0xB2	; 178
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a2 eb       	ldi	r26, 0xB2	; 178
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a8 3c       	cpi	r26, 0xC8	; 200
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 9d 01 	call	0x33a	; 0x33a <main>
  a6:	0c 94 95 07 	jmp	0xf2a	; 0xf2a <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_init>:
{
	adcConversionRunning = 0;
}*/

void ADC_init(){
	clear_bit(DDRE, PE0); //Set DDR to input for interrupt flag
  ae:	30 98       	cbi	0x06, 0	; 6
  b0:	08 95       	ret

000000b2 <ADC_read>:
}
uint8_t ADC_read(char channel)
{
	volatile char *ext_adc = (char *) 0x1200; 
	if (channel == 'x')
  b2:	88 37       	cpi	r24, 0x78	; 120
  b4:	21 f4       	brne	.+8      	; 0xbe <ADC_read+0xc>
	{
		*ext_adc = 0b0100;
  b6:	84 e0       	ldi	r24, 0x04	; 4
  b8:	80 93 00 12 	sts	0x1200, r24
  bc:	11 c0       	rjmp	.+34     	; 0xe0 <ADC_read+0x2e>
	}
	
	else if (channel == 'y')
  be:	89 37       	cpi	r24, 0x79	; 121
  c0:	21 f4       	brne	.+8      	; 0xca <ADC_read+0x18>
	{
		*ext_adc = 0b0101;
  c2:	85 e0       	ldi	r24, 0x05	; 5
  c4:	80 93 00 12 	sts	0x1200, r24
  c8:	0b c0       	rjmp	.+22     	; 0xe0 <ADC_read+0x2e>
	}
	
	else if (channel == 'l')
  ca:	8c 36       	cpi	r24, 0x6C	; 108
  cc:	21 f4       	brne	.+8      	; 0xd6 <ADC_read+0x24>
	{
		*ext_adc = 0b0110;
  ce:	86 e0       	ldi	r24, 0x06	; 6
  d0:	80 93 00 12 	sts	0x1200, r24
  d4:	05 c0       	rjmp	.+10     	; 0xe0 <ADC_read+0x2e>
	}
	
	else if (channel == 'r')
  d6:	82 37       	cpi	r24, 0x72	; 114
  d8:	19 f4       	brne	.+6      	; 0xe0 <ADC_read+0x2e>
	{
		*ext_adc = 0b0111;
  da:	87 e0       	ldi	r24, 0x07	; 7
  dc:	80 93 00 12 	sts	0x1200, r24
	}
	while(test_bit(PINE, PE0));
  e0:	28 99       	sbic	0x05, 0	; 5
  e2:	fe cf       	rjmp	.-4      	; 0xe0 <ADC_read+0x2e>
	return (uint8_t) *ext_adc;
  e4:	80 91 00 12 	lds	r24, 0x1200
  e8:	08 95       	ret

000000ea <JOY_calibrate>:
	printf("Calibrating...\n");
	JOY_calibrate();
	printf("Calibrated.");
}

void JOY_calibrate(){
  ea:	cf 92       	push	r12
  ec:	df 92       	push	r13
  ee:	ef 92       	push	r14
  f0:	ff 92       	push	r15
  f2:	0f 93       	push	r16
  f4:	1f 93       	push	r17
  f6:	cf 93       	push	r28
  f8:	df 93       	push	r29
	//_delay_ms(100);
	xmean = ADC_read('x');
  fa:	88 e7       	ldi	r24, 0x78	; 120
  fc:	0e 94 59 00 	call	0xb2	; 0xb2 <ADC_read>
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	90 93 b9 01 	sts	0x01B9, r25
 106:	80 93 b8 01 	sts	0x01B8, r24
	ymean = ADC_read('y');
 10a:	89 e7       	ldi	r24, 0x79	; 121
 10c:	0e 94 59 00 	call	0xb2	; 0xb2 <ADC_read>
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	90 93 bd 01 	sts	0x01BD, r25
 116:	80 93 bc 01 	sts	0x01BC, r24
	printf("%d", test_bit(PINB, PB2));
 11a:	86 b3       	in	r24, 0x16	; 22
 11c:	84 70       	andi	r24, 0x04	; 4
 11e:	1f 92       	push	r1
 120:	8f 93       	push	r24
 122:	8a e0       	ldi	r24, 0x0A	; 10
 124:	91 e0       	ldi	r25, 0x01	; 1
 126:	9f 93       	push	r25
 128:	8f 93       	push	r24
 12a:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
	while (test_bit(PINB, PB2))
 12e:	0f 90       	pop	r0
 130:	0f 90       	pop	r0
 132:	0f 90       	pop	r0
 134:	0f 90       	pop	r0
	{
		int x = ADC_read('x');
		int y = ADC_read('y');
		if (x > xmax){
			xmax = x;
			printf("%d \n", xmax);
 136:	0f 2e       	mov	r0, r31
 138:	fd e0       	ldi	r31, 0x0D	; 13
 13a:	ef 2e       	mov	r14, r31
 13c:	f1 e0       	ldi	r31, 0x01	; 1
 13e:	ff 2e       	mov	r15, r31
 140:	f0 2d       	mov	r31, r0
void JOY_calibrate(){
	//_delay_ms(100);
	xmean = ADC_read('x');
	ymean = ADC_read('y');
	printf("%d", test_bit(PINB, PB2));
	while (test_bit(PINB, PB2))
 142:	60 c0       	rjmp	.+192    	; 0x204 <JOY_calibrate+0x11a>
	{
		int x = ADC_read('x');
 144:	88 e7       	ldi	r24, 0x78	; 120
 146:	0e 94 59 00 	call	0xb2	; 0xb2 <ADC_read>
 14a:	d8 2e       	mov	r13, r24
 14c:	c8 2f       	mov	r28, r24
 14e:	d0 e0       	ldi	r29, 0x00	; 0
		int y = ADC_read('y');
 150:	89 e7       	ldi	r24, 0x79	; 121
 152:	0e 94 59 00 	call	0xb2	; 0xb2 <ADC_read>
 156:	c8 2e       	mov	r12, r24
 158:	08 2f       	mov	r16, r24
 15a:	10 e0       	ldi	r17, 0x00	; 0
		if (x > xmax){
 15c:	20 91 b4 01 	lds	r18, 0x01B4
 160:	30 91 b5 01 	lds	r19, 0x01B5
 164:	2c 17       	cp	r18, r28
 166:	3d 07       	cpc	r19, r29
 168:	74 f4       	brge	.+28     	; 0x186 <JOY_calibrate+0x9c>
			xmax = x;
 16a:	d0 93 b5 01 	sts	0x01B5, r29
 16e:	c0 93 b4 01 	sts	0x01B4, r28
			printf("%d \n", xmax);
 172:	1f 92       	push	r1
 174:	df 92       	push	r13
 176:	ff 92       	push	r15
 178:	ef 92       	push	r14
 17a:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
 17e:	0f 90       	pop	r0
 180:	0f 90       	pop	r0
 182:	0f 90       	pop	r0
 184:	0f 90       	pop	r0
		}
		if (y > ymax){
 186:	20 91 b2 01 	lds	r18, 0x01B2
 18a:	30 91 b3 01 	lds	r19, 0x01B3
 18e:	20 17       	cp	r18, r16
 190:	31 07       	cpc	r19, r17
 192:	74 f4       	brge	.+28     	; 0x1b0 <JOY_calibrate+0xc6>
			ymax = y;
 194:	10 93 b3 01 	sts	0x01B3, r17
 198:	00 93 b2 01 	sts	0x01B2, r16
			printf("%d \n", ymax);
 19c:	1f 92       	push	r1
 19e:	cf 92       	push	r12
 1a0:	ff 92       	push	r15
 1a2:	ef 92       	push	r14
 1a4:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
 1a8:	0f 90       	pop	r0
 1aa:	0f 90       	pop	r0
 1ac:	0f 90       	pop	r0
 1ae:	0f 90       	pop	r0
		}
		if (x < xmin){
 1b0:	20 91 08 01 	lds	r18, 0x0108
 1b4:	30 91 09 01 	lds	r19, 0x0109
 1b8:	c2 17       	cp	r28, r18
 1ba:	d3 07       	cpc	r29, r19
 1bc:	74 f4       	brge	.+28     	; 0x1da <JOY_calibrate+0xf0>
			xmin = x;
 1be:	d0 93 09 01 	sts	0x0109, r29
 1c2:	c0 93 08 01 	sts	0x0108, r28
			printf("%d \n", xmin);
 1c6:	1f 92       	push	r1
 1c8:	df 92       	push	r13
 1ca:	ff 92       	push	r15
 1cc:	ef 92       	push	r14
 1ce:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
 1d2:	0f 90       	pop	r0
 1d4:	0f 90       	pop	r0
 1d6:	0f 90       	pop	r0
 1d8:	0f 90       	pop	r0
		}
		if (y < ymin){
 1da:	80 91 06 01 	lds	r24, 0x0106
 1de:	90 91 07 01 	lds	r25, 0x0107
 1e2:	08 17       	cp	r16, r24
 1e4:	19 07       	cpc	r17, r25
 1e6:	74 f4       	brge	.+28     	; 0x204 <JOY_calibrate+0x11a>
			ymin = y;
 1e8:	10 93 07 01 	sts	0x0107, r17
 1ec:	00 93 06 01 	sts	0x0106, r16
			printf("%d \n", ymin);
 1f0:	1f 93       	push	r17
 1f2:	0f 93       	push	r16
 1f4:	ff 92       	push	r15
 1f6:	ef 92       	push	r14
 1f8:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
 1fc:	0f 90       	pop	r0
 1fe:	0f 90       	pop	r0
 200:	0f 90       	pop	r0
 202:	0f 90       	pop	r0
void JOY_calibrate(){
	//_delay_ms(100);
	xmean = ADC_read('x');
	ymean = ADC_read('y');
	printf("%d", test_bit(PINB, PB2));
	while (test_bit(PINB, PB2))
 204:	b2 99       	sbic	0x16, 2	; 22
 206:	9e cf       	rjmp	.-196    	; 0x144 <JOY_calibrate+0x5a>
			ymin = y;
			printf("%d \n", ymin);
		}
	}

}
 208:	df 91       	pop	r29
 20a:	cf 91       	pop	r28
 20c:	1f 91       	pop	r17
 20e:	0f 91       	pop	r16
 210:	ff 90       	pop	r15
 212:	ef 90       	pop	r14
 214:	df 90       	pop	r13
 216:	cf 90       	pop	r12
 218:	08 95       	ret

0000021a <JOY_init>:
int xmin = 255;
int ymax = 0;
int ymin = 255;

void JOY_init(){
	clear_bit(DDRB,PB2); //Set joystick button pin to input
 21a:	ba 98       	cbi	0x17, 2	; 23
	set_bit(PORTB,PB2);
 21c:	c2 9a       	sbi	0x18, 2	; 24
	printf("Calibrating...\n");
 21e:	82 e1       	ldi	r24, 0x12	; 18
 220:	91 e0       	ldi	r25, 0x01	; 1
 222:	0e 94 6f 03 	call	0x6de	; 0x6de <puts>
	JOY_calibrate();
 226:	0e 94 75 00 	call	0xea	; 0xea <JOY_calibrate>
	printf("Calibrated.");
 22a:	81 e2       	ldi	r24, 0x21	; 33
 22c:	91 e0       	ldi	r25, 0x01	; 1
 22e:	9f 93       	push	r25
 230:	8f 93       	push	r24
 232:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
 236:	0f 90       	pop	r0
 238:	0f 90       	pop	r0
 23a:	08 95       	ret

0000023c <JOY_getPosition>:
void JOY_button(int button){
	
}

Position JOY_getPosition(){
	x = (ADC_read('x'));
 23c:	88 e7       	ldi	r24, 0x78	; 120
 23e:	0e 94 59 00 	call	0xb2	; 0xb2 <ADC_read>
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	90 93 b7 01 	sts	0x01B7, r25
 248:	80 93 b6 01 	sts	0x01B6, r24
	y = (ADC_read('y'));
 24c:	89 e7       	ldi	r24, 0x79	; 121
 24e:	0e 94 59 00 	call	0xb2	; 0xb2 <ADC_read>
 252:	e8 2f       	mov	r30, r24
 254:	f0 e0       	ldi	r31, 0x00	; 0
	if (x > xmean){
 256:	80 91 b6 01 	lds	r24, 0x01B6
 25a:	90 91 b7 01 	lds	r25, 0x01B7
 25e:	20 91 b8 01 	lds	r18, 0x01B8
 262:	30 91 b9 01 	lds	r19, 0x01B9
 266:	28 17       	cp	r18, r24
 268:	39 07       	cpc	r19, r25
 26a:	b4 f4       	brge	.+44     	; 0x298 <JOY_getPosition+0x5c>
		x = ((x - xmean) * 100) / (xmax - xmean);
 26c:	ac 01       	movw	r20, r24
 26e:	42 1b       	sub	r20, r18
 270:	53 0b       	sbc	r21, r19
 272:	64 e6       	ldi	r22, 0x64	; 100
 274:	64 9f       	mul	r22, r20
 276:	c0 01       	movw	r24, r0
 278:	65 9f       	mul	r22, r21
 27a:	90 0d       	add	r25, r0
 27c:	11 24       	eor	r1, r1
 27e:	60 91 b4 01 	lds	r22, 0x01B4
 282:	70 91 b5 01 	lds	r23, 0x01B5
 286:	62 1b       	sub	r22, r18
 288:	73 0b       	sbc	r23, r19
 28a:	0e 94 a0 02 	call	0x540	; 0x540 <__divmodhi4>
 28e:	70 93 b7 01 	sts	0x01B7, r23
 292:	60 93 b6 01 	sts	0x01B6, r22
 296:	16 c0       	rjmp	.+44     	; 0x2c4 <JOY_getPosition+0x88>
	}
	else{
		x = ((x - xmean) * 100) / (xmean - xmin);
 298:	ac 01       	movw	r20, r24
 29a:	42 1b       	sub	r20, r18
 29c:	53 0b       	sbc	r21, r19
 29e:	64 e6       	ldi	r22, 0x64	; 100
 2a0:	64 9f       	mul	r22, r20
 2a2:	c0 01       	movw	r24, r0
 2a4:	65 9f       	mul	r22, r21
 2a6:	90 0d       	add	r25, r0
 2a8:	11 24       	eor	r1, r1
 2aa:	40 91 08 01 	lds	r20, 0x0108
 2ae:	50 91 09 01 	lds	r21, 0x0109
 2b2:	b9 01       	movw	r22, r18
 2b4:	64 1b       	sub	r22, r20
 2b6:	75 0b       	sbc	r23, r21
 2b8:	0e 94 a0 02 	call	0x540	; 0x540 <__divmodhi4>
 2bc:	70 93 b7 01 	sts	0x01B7, r23
 2c0:	60 93 b6 01 	sts	0x01B6, r22
	}
	if (y > ymean){
 2c4:	60 91 bc 01 	lds	r22, 0x01BC
 2c8:	70 91 bd 01 	lds	r23, 0x01BD
 2cc:	6e 17       	cp	r22, r30
 2ce:	7f 07       	cpc	r23, r31
 2d0:	bc f4       	brge	.+46     	; 0x300 <JOY_getPosition+0xc4>
		y = ((y - ymean) * 100) / (ymax - ymean);
 2d2:	e6 1b       	sub	r30, r22
 2d4:	f7 0b       	sbc	r31, r23
 2d6:	24 e6       	ldi	r18, 0x64	; 100
 2d8:	2e 9f       	mul	r18, r30
 2da:	c0 01       	movw	r24, r0
 2dc:	2f 9f       	mul	r18, r31
 2de:	90 0d       	add	r25, r0
 2e0:	11 24       	eor	r1, r1
 2e2:	20 91 b2 01 	lds	r18, 0x01B2
 2e6:	30 91 b3 01 	lds	r19, 0x01B3
 2ea:	a9 01       	movw	r20, r18
 2ec:	46 1b       	sub	r20, r22
 2ee:	57 0b       	sbc	r21, r23
 2f0:	ba 01       	movw	r22, r20
 2f2:	0e 94 a0 02 	call	0x540	; 0x540 <__divmodhi4>
 2f6:	70 93 bb 01 	sts	0x01BB, r23
 2fa:	60 93 ba 01 	sts	0x01BA, r22
 2fe:	14 c0       	rjmp	.+40     	; 0x328 <JOY_getPosition+0xec>
	}
	else{
		y = ((y - ymean)  * 100) / (ymean - ymin);
 300:	e6 1b       	sub	r30, r22
 302:	f7 0b       	sbc	r31, r23
 304:	24 e6       	ldi	r18, 0x64	; 100
 306:	2e 9f       	mul	r18, r30
 308:	c0 01       	movw	r24, r0
 30a:	2f 9f       	mul	r18, r31
 30c:	90 0d       	add	r25, r0
 30e:	11 24       	eor	r1, r1
 310:	20 91 06 01 	lds	r18, 0x0106
 314:	30 91 07 01 	lds	r19, 0x0107
 318:	62 1b       	sub	r22, r18
 31a:	73 0b       	sbc	r23, r19
 31c:	0e 94 a0 02 	call	0x540	; 0x540 <__divmodhi4>
 320:	70 93 bb 01 	sts	0x01BB, r23
 324:	60 93 ba 01 	sts	0x01BA, r22
	}
	Position pos = {x,y};
	return pos;
 328:	60 91 b6 01 	lds	r22, 0x01B6
 32c:	70 91 b7 01 	lds	r23, 0x01B7
 330:	80 91 ba 01 	lds	r24, 0x01BA
 334:	90 91 bb 01 	lds	r25, 0x01BB
}
 338:	08 95       	ret

0000033a <main>:
int main(void)
{
	//1 output, 0 input
	//enable external memory
	
	MCUCR |= (1<<SRE);
 33a:	85 b7       	in	r24, 0x35	; 53
 33c:	80 68       	ori	r24, 0x80	; 128
 33e:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<<XMM2);
 340:	80 b7       	in	r24, 0x30	; 48
 342:	80 62       	ori	r24, 0x20	; 32
 344:	80 bf       	out	0x30, r24	; 48
	
	
	uart_init(9600);
 346:	80 e8       	ldi	r24, 0x80	; 128
 348:	95 e2       	ldi	r25, 0x25	; 37
 34a:	0e 94 6f 02 	call	0x4de	; 0x4de <uart_init>
	ADC_init();
 34e:	0e 94 57 00 	call	0xae	; 0xae <ADC_init>
	touchModule_init();
 352:	0e 94 62 02 	call	0x4c4	; 0x4c4 <touchModule_init>
	JOY_init();
 356:	0e 94 0d 01 	call	0x21a	; 0x21a <JOY_init>
	
	while (1)
	{
		
		printf("x = ");
 35a:	0f 2e       	mov	r0, r31
 35c:	fd e2       	ldi	r31, 0x2D	; 45
 35e:	af 2e       	mov	r10, r31
 360:	f1 e0       	ldi	r31, 0x01	; 1
 362:	bf 2e       	mov	r11, r31
 364:	f0 2d       	mov	r31, r0
		printf("%d", ADC_read('x'));
 366:	ca e0       	ldi	r28, 0x0A	; 10
 368:	d1 e0       	ldi	r29, 0x01	; 1
		
		printf(",  y = ");
 36a:	0f 2e       	mov	r0, r31
 36c:	f2 e3       	ldi	r31, 0x32	; 50
 36e:	cf 2e       	mov	r12, r31
 370:	f1 e0       	ldi	r31, 0x01	; 1
 372:	df 2e       	mov	r13, r31
 374:	f0 2d       	mov	r31, r0
		printf("%d", ADC_read('y'));
		
		printf(",  Left slider = ");
 376:	0f 2e       	mov	r0, r31
 378:	fa e3       	ldi	r31, 0x3A	; 58
 37a:	ef 2e       	mov	r14, r31
 37c:	f1 e0       	ldi	r31, 0x01	; 1
 37e:	ff 2e       	mov	r15, r31
 380:	f0 2d       	mov	r31, r0
		printf("%d",ADC_read('l'));

		printf(",  Right slider = ");
 382:	0c e4       	ldi	r16, 0x4C	; 76
 384:	11 e0       	ldi	r17, 0x01	; 1
		printf("%d", ADC_read('r'));
			
		
		printf(",  Left button= ");
 386:	0f 2e       	mov	r0, r31
 388:	ff e5       	ldi	r31, 0x5F	; 95
 38a:	8f 2e       	mov	r8, r31
 38c:	f1 e0       	ldi	r31, 0x01	; 1
 38e:	9f 2e       	mov	r9, r31
 390:	f0 2d       	mov	r31, r0
		printf("%d", test_bit(PINB, PB1));
		
		printf(",  Right button= ");
 392:	0f 2e       	mov	r0, r31
 394:	f0 e7       	ldi	r31, 0x70	; 112
 396:	6f 2e       	mov	r6, r31
 398:	f1 e0       	ldi	r31, 0x01	; 1
 39a:	7f 2e       	mov	r7, r31
 39c:	f0 2d       	mov	r31, r0
		printf("%d", test_bit(PINB, PB0));
		
		printf(",  Middle button= ");
 39e:	0f 2e       	mov	r0, r31
 3a0:	f2 e8       	ldi	r31, 0x82	; 130
 3a2:	4f 2e       	mov	r4, r31
 3a4:	f1 e0       	ldi	r31, 0x01	; 1
 3a6:	5f 2e       	mov	r5, r31
 3a8:	f0 2d       	mov	r31, r0
		printf("%d", test_bit(PINB, PB2));
		
		printf(",  X struct= ");
 3aa:	0f 2e       	mov	r0, r31
 3ac:	f5 e9       	ldi	r31, 0x95	; 149
 3ae:	2f 2e       	mov	r2, r31
 3b0:	f1 e0       	ldi	r31, 0x01	; 1
 3b2:	3f 2e       	mov	r3, r31
 3b4:	f0 2d       	mov	r31, r0
	JOY_init();
	
	while (1)
	{
		
		printf("x = ");
 3b6:	bf 92       	push	r11
 3b8:	af 92       	push	r10
 3ba:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
		printf("%d", ADC_read('x'));
 3be:	88 e7       	ldi	r24, 0x78	; 120
 3c0:	0e 94 59 00 	call	0xb2	; 0xb2 <ADC_read>
 3c4:	1f 92       	push	r1
 3c6:	8f 93       	push	r24
 3c8:	df 93       	push	r29
 3ca:	cf 93       	push	r28
 3cc:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
		
		printf(",  y = ");
 3d0:	df 92       	push	r13
 3d2:	cf 92       	push	r12
 3d4:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
		printf("%d", ADC_read('y'));
 3d8:	89 e7       	ldi	r24, 0x79	; 121
 3da:	0e 94 59 00 	call	0xb2	; 0xb2 <ADC_read>
 3de:	1f 92       	push	r1
 3e0:	8f 93       	push	r24
 3e2:	df 93       	push	r29
 3e4:	cf 93       	push	r28
 3e6:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
		
		printf(",  Left slider = ");
 3ea:	ff 92       	push	r15
 3ec:	ef 92       	push	r14
 3ee:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
		printf("%d",ADC_read('l'));
 3f2:	8c e6       	ldi	r24, 0x6C	; 108
 3f4:	0e 94 59 00 	call	0xb2	; 0xb2 <ADC_read>
 3f8:	1f 92       	push	r1
 3fa:	8f 93       	push	r24
 3fc:	df 93       	push	r29
 3fe:	cf 93       	push	r28
 400:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>

		printf(",  Right slider = ");
 404:	1f 93       	push	r17
 406:	0f 93       	push	r16
 408:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
		printf("%d", ADC_read('r'));
 40c:	82 e7       	ldi	r24, 0x72	; 114
 40e:	0e 94 59 00 	call	0xb2	; 0xb2 <ADC_read>
 412:	1f 92       	push	r1
 414:	8f 93       	push	r24
 416:	df 93       	push	r29
 418:	cf 93       	push	r28
 41a:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
			
		
		printf(",  Left button= ");
 41e:	9f 92       	push	r9
 420:	8f 92       	push	r8
 422:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
		printf("%d", test_bit(PINB, PB1));
 426:	86 b3       	in	r24, 0x16	; 22
 428:	82 70       	andi	r24, 0x02	; 2
 42a:	1f 92       	push	r1
 42c:	8f 93       	push	r24
 42e:	df 93       	push	r29
 430:	cf 93       	push	r28
 432:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
		
		printf(",  Right button= ");
 436:	7f 92       	push	r7
 438:	6f 92       	push	r6
 43a:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
		printf("%d", test_bit(PINB, PB0));
 43e:	86 b3       	in	r24, 0x16	; 22
 440:	ad b7       	in	r26, 0x3d	; 61
 442:	be b7       	in	r27, 0x3e	; 62
 444:	90 96       	adiw	r26, 0x20	; 32
 446:	0f b6       	in	r0, 0x3f	; 63
 448:	f8 94       	cli
 44a:	be bf       	out	0x3e, r27	; 62
 44c:	0f be       	out	0x3f, r0	; 63
 44e:	ad bf       	out	0x3d, r26	; 61
 450:	81 70       	andi	r24, 0x01	; 1
 452:	1f 92       	push	r1
 454:	8f 93       	push	r24
 456:	df 93       	push	r29
 458:	cf 93       	push	r28
 45a:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
		
		printf(",  Middle button= ");
 45e:	5f 92       	push	r5
 460:	4f 92       	push	r4
 462:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
		printf("%d", test_bit(PINB, PB2));
 466:	86 b3       	in	r24, 0x16	; 22
 468:	84 70       	andi	r24, 0x04	; 4
 46a:	1f 92       	push	r1
 46c:	8f 93       	push	r24
 46e:	df 93       	push	r29
 470:	cf 93       	push	r28
 472:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
		
		printf(",  X struct= ");
 476:	3f 92       	push	r3
 478:	2f 92       	push	r2
 47a:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
		printf("%d", JOY_getPosition().x);
 47e:	0e 94 1e 01 	call	0x23c	; 0x23c <JOY_getPosition>
 482:	7f 93       	push	r23
 484:	6f 93       	push	r22
 486:	df 93       	push	r29
 488:	cf 93       	push	r28
 48a:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
		
		printf(",  Y struct= ");
 48e:	a3 ea       	ldi	r26, 0xA3	; 163
 490:	b1 e0       	ldi	r27, 0x01	; 1
 492:	bf 93       	push	r27
 494:	af 93       	push	r26
 496:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
		printf("%d", JOY_getPosition().y);
 49a:	0e 94 1e 01 	call	0x23c	; 0x23c <JOY_getPosition>
 49e:	9f 93       	push	r25
 4a0:	8f 93       	push	r24
 4a2:	df 93       	push	r29
 4a4:	cf 93       	push	r28
 4a6:	0e 94 54 03 	call	0x6a8	; 0x6a8 <printf>
		printf("\n");
 4aa:	8a e0       	ldi	r24, 0x0A	; 10
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	0e 94 68 03 	call	0x6d0	; 0x6d0 <putchar>
 4b2:	ad b7       	in	r26, 0x3d	; 61
 4b4:	be b7       	in	r27, 0x3e	; 62
 4b6:	56 96       	adiw	r26, 0x16	; 22
 4b8:	0f b6       	in	r0, 0x3f	; 63
 4ba:	f8 94       	cli
 4bc:	be bf       	out	0x3e, r27	; 62
 4be:	0f be       	out	0x3f, r0	; 63
 4c0:	ad bf       	out	0x3d, r26	; 61
 4c2:	79 cf       	rjmp	.-270    	; 0x3b6 <main+0x7c>

000004c4 <touchModule_init>:
#include <avr/io.h>
#include "utils.h"


void touchModule_init(){
	clear_bit(DDRB, PB0); //Set DDR to input for button
 4c4:	b8 98       	cbi	0x17, 0	; 23
	clear_bit(DDRB, PB1); //Set DDR to input for button
 4c6:	b9 98       	cbi	0x17, 1	; 23
 4c8:	08 95       	ret

000004ca <uart_putchar>:
#include <avr/io.h>
#include <stdio.h>

int uart_putchar(char c){
	//Wait for empty transmit buffer
	while (!( UCSR0A & (1<<UDRE0)));
 4ca:	5d 9b       	sbis	0x0b, 5	; 11
 4cc:	fe cf       	rjmp	.-4      	; 0x4ca <uart_putchar>
	//Put data into buffer, sends the data
	UDR0 = c;
 4ce:	8c b9       	out	0x0c, r24	; 12
	return 1;
}
 4d0:	81 e0       	ldi	r24, 0x01	; 1
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	08 95       	ret

000004d6 <uart_getchar>:

unsigned char uart_getchar(){
	while (!( UCSR0A & (1<<RXC0)));
 4d6:	5f 9b       	sbis	0x0b, 7	; 11
 4d8:	fe cf       	rjmp	.-4      	; 0x4d6 <uart_getchar>
	return UDR0;
 4da:	8c b1       	in	r24, 0x0c	; 12
}
 4dc:	08 95       	ret

000004de <uart_init>:

int uart_init(int baudRate){
 4de:	cf 93       	push	r28
 4e0:	df 93       	push	r29
	int UBRR = ((long)4915200/((long)16*baudRate) - 1);
 4e2:	aa 27       	eor	r26, r26
 4e4:	97 fd       	sbrc	r25, 7
 4e6:	a0 95       	com	r26
 4e8:	ba 2f       	mov	r27, r26
 4ea:	88 0f       	add	r24, r24
 4ec:	99 1f       	adc	r25, r25
 4ee:	aa 1f       	adc	r26, r26
 4f0:	bb 1f       	adc	r27, r27
 4f2:	88 0f       	add	r24, r24
 4f4:	99 1f       	adc	r25, r25
 4f6:	aa 1f       	adc	r26, r26
 4f8:	bb 1f       	adc	r27, r27
 4fa:	9c 01       	movw	r18, r24
 4fc:	ad 01       	movw	r20, r26
 4fe:	22 0f       	add	r18, r18
 500:	33 1f       	adc	r19, r19
 502:	44 1f       	adc	r20, r20
 504:	55 1f       	adc	r21, r21
 506:	22 0f       	add	r18, r18
 508:	33 1f       	adc	r19, r19
 50a:	44 1f       	adc	r20, r20
 50c:	55 1f       	adc	r21, r21
 50e:	60 e0       	ldi	r22, 0x00	; 0
 510:	70 e0       	ldi	r23, 0x00	; 0
 512:	8b e4       	ldi	r24, 0x4B	; 75
 514:	90 e0       	ldi	r25, 0x00	; 0
 516:	0e 94 b4 02 	call	0x568	; 0x568 <__divmodsi4>
 51a:	e9 01       	movw	r28, r18
 51c:	21 97       	sbiw	r28, 0x01	; 1
	//Enable printf
	fdevopen(uart_putchar, uart_getchar);
 51e:	6b e6       	ldi	r22, 0x6B	; 107
 520:	72 e0       	ldi	r23, 0x02	; 2
 522:	85 e6       	ldi	r24, 0x65	; 101
 524:	92 e0       	ldi	r25, 0x02	; 2
 526:	0e 94 09 03 	call	0x612	; 0x612 <fdevopen>
	//Setting
	UBRR0L = UBRR;
 52a:	c9 b9       	out	0x09, r28	; 9
    UBRR0H = (UBRR>>8);
 52c:	d0 bd       	out	0x20, r29	; 32
    //Enable receiver and transmitter 
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 52e:	88 e1       	ldi	r24, 0x18	; 24
 530:	8a b9       	out	0x0a, r24	; 10
    //Set frame format: 8data, 2stop bit  
    UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
 532:	8e e8       	ldi	r24, 0x8E	; 142
 534:	80 bd       	out	0x20, r24	; 32
    return 1;
}
 536:	81 e0       	ldi	r24, 0x01	; 1
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	df 91       	pop	r29
 53c:	cf 91       	pop	r28
 53e:	08 95       	ret

00000540 <__divmodhi4>:
 540:	97 fb       	bst	r25, 7
 542:	07 2e       	mov	r0, r23
 544:	16 f4       	brtc	.+4      	; 0x54a <__divmodhi4+0xa>
 546:	00 94       	com	r0
 548:	07 d0       	rcall	.+14     	; 0x558 <__divmodhi4_neg1>
 54a:	77 fd       	sbrc	r23, 7
 54c:	09 d0       	rcall	.+18     	; 0x560 <__divmodhi4_neg2>
 54e:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <__udivmodhi4>
 552:	07 fc       	sbrc	r0, 7
 554:	05 d0       	rcall	.+10     	; 0x560 <__divmodhi4_neg2>
 556:	3e f4       	brtc	.+14     	; 0x566 <__divmodhi4_exit>

00000558 <__divmodhi4_neg1>:
 558:	90 95       	com	r25
 55a:	81 95       	neg	r24
 55c:	9f 4f       	sbci	r25, 0xFF	; 255
 55e:	08 95       	ret

00000560 <__divmodhi4_neg2>:
 560:	70 95       	com	r23
 562:	61 95       	neg	r22
 564:	7f 4f       	sbci	r23, 0xFF	; 255

00000566 <__divmodhi4_exit>:
 566:	08 95       	ret

00000568 <__divmodsi4>:
 568:	05 2e       	mov	r0, r21
 56a:	97 fb       	bst	r25, 7
 56c:	1e f4       	brtc	.+6      	; 0x574 <__divmodsi4+0xc>
 56e:	00 94       	com	r0
 570:	0e 94 cb 02 	call	0x596	; 0x596 <__negsi2>
 574:	57 fd       	sbrc	r21, 7
 576:	07 d0       	rcall	.+14     	; 0x586 <__divmodsi4_neg2>
 578:	0e 94 e7 02 	call	0x5ce	; 0x5ce <__udivmodsi4>
 57c:	07 fc       	sbrc	r0, 7
 57e:	03 d0       	rcall	.+6      	; 0x586 <__divmodsi4_neg2>
 580:	4e f4       	brtc	.+18     	; 0x594 <__divmodsi4_exit>
 582:	0c 94 cb 02 	jmp	0x596	; 0x596 <__negsi2>

00000586 <__divmodsi4_neg2>:
 586:	50 95       	com	r21
 588:	40 95       	com	r20
 58a:	30 95       	com	r19
 58c:	21 95       	neg	r18
 58e:	3f 4f       	sbci	r19, 0xFF	; 255
 590:	4f 4f       	sbci	r20, 0xFF	; 255
 592:	5f 4f       	sbci	r21, 0xFF	; 255

00000594 <__divmodsi4_exit>:
 594:	08 95       	ret

00000596 <__negsi2>:
 596:	90 95       	com	r25
 598:	80 95       	com	r24
 59a:	70 95       	com	r23
 59c:	61 95       	neg	r22
 59e:	7f 4f       	sbci	r23, 0xFF	; 255
 5a0:	8f 4f       	sbci	r24, 0xFF	; 255
 5a2:	9f 4f       	sbci	r25, 0xFF	; 255
 5a4:	08 95       	ret

000005a6 <__udivmodhi4>:
 5a6:	aa 1b       	sub	r26, r26
 5a8:	bb 1b       	sub	r27, r27
 5aa:	51 e1       	ldi	r21, 0x11	; 17
 5ac:	07 c0       	rjmp	.+14     	; 0x5bc <__udivmodhi4_ep>

000005ae <__udivmodhi4_loop>:
 5ae:	aa 1f       	adc	r26, r26
 5b0:	bb 1f       	adc	r27, r27
 5b2:	a6 17       	cp	r26, r22
 5b4:	b7 07       	cpc	r27, r23
 5b6:	10 f0       	brcs	.+4      	; 0x5bc <__udivmodhi4_ep>
 5b8:	a6 1b       	sub	r26, r22
 5ba:	b7 0b       	sbc	r27, r23

000005bc <__udivmodhi4_ep>:
 5bc:	88 1f       	adc	r24, r24
 5be:	99 1f       	adc	r25, r25
 5c0:	5a 95       	dec	r21
 5c2:	a9 f7       	brne	.-22     	; 0x5ae <__udivmodhi4_loop>
 5c4:	80 95       	com	r24
 5c6:	90 95       	com	r25
 5c8:	bc 01       	movw	r22, r24
 5ca:	cd 01       	movw	r24, r26
 5cc:	08 95       	ret

000005ce <__udivmodsi4>:
 5ce:	a1 e2       	ldi	r26, 0x21	; 33
 5d0:	1a 2e       	mov	r1, r26
 5d2:	aa 1b       	sub	r26, r26
 5d4:	bb 1b       	sub	r27, r27
 5d6:	fd 01       	movw	r30, r26
 5d8:	0d c0       	rjmp	.+26     	; 0x5f4 <__udivmodsi4_ep>

000005da <__udivmodsi4_loop>:
 5da:	aa 1f       	adc	r26, r26
 5dc:	bb 1f       	adc	r27, r27
 5de:	ee 1f       	adc	r30, r30
 5e0:	ff 1f       	adc	r31, r31
 5e2:	a2 17       	cp	r26, r18
 5e4:	b3 07       	cpc	r27, r19
 5e6:	e4 07       	cpc	r30, r20
 5e8:	f5 07       	cpc	r31, r21
 5ea:	20 f0       	brcs	.+8      	; 0x5f4 <__udivmodsi4_ep>
 5ec:	a2 1b       	sub	r26, r18
 5ee:	b3 0b       	sbc	r27, r19
 5f0:	e4 0b       	sbc	r30, r20
 5f2:	f5 0b       	sbc	r31, r21

000005f4 <__udivmodsi4_ep>:
 5f4:	66 1f       	adc	r22, r22
 5f6:	77 1f       	adc	r23, r23
 5f8:	88 1f       	adc	r24, r24
 5fa:	99 1f       	adc	r25, r25
 5fc:	1a 94       	dec	r1
 5fe:	69 f7       	brne	.-38     	; 0x5da <__udivmodsi4_loop>
 600:	60 95       	com	r22
 602:	70 95       	com	r23
 604:	80 95       	com	r24
 606:	90 95       	com	r25
 608:	9b 01       	movw	r18, r22
 60a:	ac 01       	movw	r20, r24
 60c:	bd 01       	movw	r22, r26
 60e:	cf 01       	movw	r24, r30
 610:	08 95       	ret

00000612 <fdevopen>:
 612:	0f 93       	push	r16
 614:	1f 93       	push	r17
 616:	cf 93       	push	r28
 618:	df 93       	push	r29
 61a:	ec 01       	movw	r28, r24
 61c:	8b 01       	movw	r16, r22
 61e:	00 97       	sbiw	r24, 0x00	; 0
 620:	31 f4       	brne	.+12     	; 0x62e <fdevopen+0x1c>
 622:	61 15       	cp	r22, r1
 624:	71 05       	cpc	r23, r1
 626:	19 f4       	brne	.+6      	; 0x62e <fdevopen+0x1c>
 628:	80 e0       	ldi	r24, 0x00	; 0
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	38 c0       	rjmp	.+112    	; 0x69e <fdevopen+0x8c>
 62e:	6e e0       	ldi	r22, 0x0E	; 14
 630:	70 e0       	ldi	r23, 0x00	; 0
 632:	81 e0       	ldi	r24, 0x01	; 1
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	0e 94 6e 05 	call	0xadc	; 0xadc <calloc>
 63a:	fc 01       	movw	r30, r24
 63c:	00 97       	sbiw	r24, 0x00	; 0
 63e:	a1 f3       	breq	.-24     	; 0x628 <fdevopen+0x16>
 640:	80 e8       	ldi	r24, 0x80	; 128
 642:	83 83       	std	Z+3, r24	; 0x03
 644:	01 15       	cp	r16, r1
 646:	11 05       	cpc	r17, r1
 648:	71 f0       	breq	.+28     	; 0x666 <fdevopen+0x54>
 64a:	13 87       	std	Z+11, r17	; 0x0b
 64c:	02 87       	std	Z+10, r16	; 0x0a
 64e:	81 e8       	ldi	r24, 0x81	; 129
 650:	83 83       	std	Z+3, r24	; 0x03
 652:	80 91 be 01 	lds	r24, 0x01BE
 656:	90 91 bf 01 	lds	r25, 0x01BF
 65a:	89 2b       	or	r24, r25
 65c:	21 f4       	brne	.+8      	; 0x666 <fdevopen+0x54>
 65e:	f0 93 bf 01 	sts	0x01BF, r31
 662:	e0 93 be 01 	sts	0x01BE, r30
 666:	20 97       	sbiw	r28, 0x00	; 0
 668:	c9 f0       	breq	.+50     	; 0x69c <fdevopen+0x8a>
 66a:	d1 87       	std	Z+9, r29	; 0x09
 66c:	c0 87       	std	Z+8, r28	; 0x08
 66e:	83 81       	ldd	r24, Z+3	; 0x03
 670:	82 60       	ori	r24, 0x02	; 2
 672:	83 83       	std	Z+3, r24	; 0x03
 674:	80 91 c0 01 	lds	r24, 0x01C0
 678:	90 91 c1 01 	lds	r25, 0x01C1
 67c:	89 2b       	or	r24, r25
 67e:	71 f4       	brne	.+28     	; 0x69c <fdevopen+0x8a>
 680:	f0 93 c1 01 	sts	0x01C1, r31
 684:	e0 93 c0 01 	sts	0x01C0, r30
 688:	80 91 c2 01 	lds	r24, 0x01C2
 68c:	90 91 c3 01 	lds	r25, 0x01C3
 690:	89 2b       	or	r24, r25
 692:	21 f4       	brne	.+8      	; 0x69c <fdevopen+0x8a>
 694:	f0 93 c3 01 	sts	0x01C3, r31
 698:	e0 93 c2 01 	sts	0x01C2, r30
 69c:	cf 01       	movw	r24, r30
 69e:	df 91       	pop	r29
 6a0:	cf 91       	pop	r28
 6a2:	1f 91       	pop	r17
 6a4:	0f 91       	pop	r16
 6a6:	08 95       	ret

000006a8 <printf>:
 6a8:	a0 e0       	ldi	r26, 0x00	; 0
 6aa:	b0 e0       	ldi	r27, 0x00	; 0
 6ac:	ea e5       	ldi	r30, 0x5A	; 90
 6ae:	f3 e0       	ldi	r31, 0x03	; 3
 6b0:	0c 94 6e 07 	jmp	0xedc	; 0xedc <__prologue_saves__+0x20>
 6b4:	fe 01       	movw	r30, r28
 6b6:	35 96       	adiw	r30, 0x05	; 5
 6b8:	61 91       	ld	r22, Z+
 6ba:	71 91       	ld	r23, Z+
 6bc:	af 01       	movw	r20, r30
 6be:	80 91 c0 01 	lds	r24, 0x01C0
 6c2:	90 91 c1 01 	lds	r25, 0x01C1
 6c6:	0e 94 9c 03 	call	0x738	; 0x738 <vfprintf>
 6ca:	e2 e0       	ldi	r30, 0x02	; 2
 6cc:	0c 94 8a 07 	jmp	0xf14	; 0xf14 <__epilogue_restores__+0x20>

000006d0 <putchar>:
 6d0:	60 91 c0 01 	lds	r22, 0x01C0
 6d4:	70 91 c1 01 	lds	r23, 0x01C1
 6d8:	0e 94 ce 06 	call	0xd9c	; 0xd9c <fputc>
 6dc:	08 95       	ret

000006de <puts>:
 6de:	0f 93       	push	r16
 6e0:	1f 93       	push	r17
 6e2:	cf 93       	push	r28
 6e4:	df 93       	push	r29
 6e6:	e0 91 c0 01 	lds	r30, 0x01C0
 6ea:	f0 91 c1 01 	lds	r31, 0x01C1
 6ee:	23 81       	ldd	r18, Z+3	; 0x03
 6f0:	21 ff       	sbrs	r18, 1
 6f2:	1b c0       	rjmp	.+54     	; 0x72a <puts+0x4c>
 6f4:	ec 01       	movw	r28, r24
 6f6:	00 e0       	ldi	r16, 0x00	; 0
 6f8:	10 e0       	ldi	r17, 0x00	; 0
 6fa:	89 91       	ld	r24, Y+
 6fc:	60 91 c0 01 	lds	r22, 0x01C0
 700:	70 91 c1 01 	lds	r23, 0x01C1
 704:	db 01       	movw	r26, r22
 706:	18 96       	adiw	r26, 0x08	; 8
 708:	ed 91       	ld	r30, X+
 70a:	fc 91       	ld	r31, X
 70c:	19 97       	sbiw	r26, 0x09	; 9
 70e:	88 23       	and	r24, r24
 710:	31 f0       	breq	.+12     	; 0x71e <puts+0x40>
 712:	09 95       	icall
 714:	89 2b       	or	r24, r25
 716:	89 f3       	breq	.-30     	; 0x6fa <puts+0x1c>
 718:	0f ef       	ldi	r16, 0xFF	; 255
 71a:	1f ef       	ldi	r17, 0xFF	; 255
 71c:	ee cf       	rjmp	.-36     	; 0x6fa <puts+0x1c>
 71e:	8a e0       	ldi	r24, 0x0A	; 10
 720:	09 95       	icall
 722:	89 2b       	or	r24, r25
 724:	11 f4       	brne	.+4      	; 0x72a <puts+0x4c>
 726:	c8 01       	movw	r24, r16
 728:	02 c0       	rjmp	.+4      	; 0x72e <puts+0x50>
 72a:	8f ef       	ldi	r24, 0xFF	; 255
 72c:	9f ef       	ldi	r25, 0xFF	; 255
 72e:	df 91       	pop	r29
 730:	cf 91       	pop	r28
 732:	1f 91       	pop	r17
 734:	0f 91       	pop	r16
 736:	08 95       	ret

00000738 <vfprintf>:
 738:	ac e0       	ldi	r26, 0x0C	; 12
 73a:	b0 e0       	ldi	r27, 0x00	; 0
 73c:	e2 ea       	ldi	r30, 0xA2	; 162
 73e:	f3 e0       	ldi	r31, 0x03	; 3
 740:	0c 94 5e 07 	jmp	0xebc	; 0xebc <__prologue_saves__>
 744:	7c 01       	movw	r14, r24
 746:	6b 01       	movw	r12, r22
 748:	8a 01       	movw	r16, r20
 74a:	fc 01       	movw	r30, r24
 74c:	17 82       	std	Z+7, r1	; 0x07
 74e:	16 82       	std	Z+6, r1	; 0x06
 750:	83 81       	ldd	r24, Z+3	; 0x03
 752:	81 ff       	sbrs	r24, 1
 754:	bd c1       	rjmp	.+890    	; 0xad0 <vfprintf+0x398>
 756:	ce 01       	movw	r24, r28
 758:	01 96       	adiw	r24, 0x01	; 1
 75a:	4c 01       	movw	r8, r24
 75c:	f7 01       	movw	r30, r14
 75e:	93 81       	ldd	r25, Z+3	; 0x03
 760:	f6 01       	movw	r30, r12
 762:	93 fd       	sbrc	r25, 3
 764:	85 91       	lpm	r24, Z+
 766:	93 ff       	sbrs	r25, 3
 768:	81 91       	ld	r24, Z+
 76a:	6f 01       	movw	r12, r30
 76c:	88 23       	and	r24, r24
 76e:	09 f4       	brne	.+2      	; 0x772 <vfprintf+0x3a>
 770:	ab c1       	rjmp	.+854    	; 0xac8 <vfprintf+0x390>
 772:	85 32       	cpi	r24, 0x25	; 37
 774:	39 f4       	brne	.+14     	; 0x784 <vfprintf+0x4c>
 776:	93 fd       	sbrc	r25, 3
 778:	85 91       	lpm	r24, Z+
 77a:	93 ff       	sbrs	r25, 3
 77c:	81 91       	ld	r24, Z+
 77e:	6f 01       	movw	r12, r30
 780:	85 32       	cpi	r24, 0x25	; 37
 782:	29 f4       	brne	.+10     	; 0x78e <vfprintf+0x56>
 784:	b7 01       	movw	r22, r14
 786:	90 e0       	ldi	r25, 0x00	; 0
 788:	0e 94 ce 06 	call	0xd9c	; 0xd9c <fputc>
 78c:	e7 cf       	rjmp	.-50     	; 0x75c <vfprintf+0x24>
 78e:	51 2c       	mov	r5, r1
 790:	31 2c       	mov	r3, r1
 792:	20 e0       	ldi	r18, 0x00	; 0
 794:	20 32       	cpi	r18, 0x20	; 32
 796:	a0 f4       	brcc	.+40     	; 0x7c0 <vfprintf+0x88>
 798:	8b 32       	cpi	r24, 0x2B	; 43
 79a:	69 f0       	breq	.+26     	; 0x7b6 <vfprintf+0x7e>
 79c:	30 f4       	brcc	.+12     	; 0x7aa <vfprintf+0x72>
 79e:	80 32       	cpi	r24, 0x20	; 32
 7a0:	59 f0       	breq	.+22     	; 0x7b8 <vfprintf+0x80>
 7a2:	83 32       	cpi	r24, 0x23	; 35
 7a4:	69 f4       	brne	.+26     	; 0x7c0 <vfprintf+0x88>
 7a6:	20 61       	ori	r18, 0x10	; 16
 7a8:	2c c0       	rjmp	.+88     	; 0x802 <vfprintf+0xca>
 7aa:	8d 32       	cpi	r24, 0x2D	; 45
 7ac:	39 f0       	breq	.+14     	; 0x7bc <vfprintf+0x84>
 7ae:	80 33       	cpi	r24, 0x30	; 48
 7b0:	39 f4       	brne	.+14     	; 0x7c0 <vfprintf+0x88>
 7b2:	21 60       	ori	r18, 0x01	; 1
 7b4:	26 c0       	rjmp	.+76     	; 0x802 <vfprintf+0xca>
 7b6:	22 60       	ori	r18, 0x02	; 2
 7b8:	24 60       	ori	r18, 0x04	; 4
 7ba:	23 c0       	rjmp	.+70     	; 0x802 <vfprintf+0xca>
 7bc:	28 60       	ori	r18, 0x08	; 8
 7be:	21 c0       	rjmp	.+66     	; 0x802 <vfprintf+0xca>
 7c0:	27 fd       	sbrc	r18, 7
 7c2:	27 c0       	rjmp	.+78     	; 0x812 <vfprintf+0xda>
 7c4:	30 ed       	ldi	r19, 0xD0	; 208
 7c6:	38 0f       	add	r19, r24
 7c8:	3a 30       	cpi	r19, 0x0A	; 10
 7ca:	78 f4       	brcc	.+30     	; 0x7ea <vfprintf+0xb2>
 7cc:	26 ff       	sbrs	r18, 6
 7ce:	06 c0       	rjmp	.+12     	; 0x7dc <vfprintf+0xa4>
 7d0:	fa e0       	ldi	r31, 0x0A	; 10
 7d2:	5f 9e       	mul	r5, r31
 7d4:	30 0d       	add	r19, r0
 7d6:	11 24       	eor	r1, r1
 7d8:	53 2e       	mov	r5, r19
 7da:	13 c0       	rjmp	.+38     	; 0x802 <vfprintf+0xca>
 7dc:	8a e0       	ldi	r24, 0x0A	; 10
 7de:	38 9e       	mul	r3, r24
 7e0:	30 0d       	add	r19, r0
 7e2:	11 24       	eor	r1, r1
 7e4:	33 2e       	mov	r3, r19
 7e6:	20 62       	ori	r18, 0x20	; 32
 7e8:	0c c0       	rjmp	.+24     	; 0x802 <vfprintf+0xca>
 7ea:	8e 32       	cpi	r24, 0x2E	; 46
 7ec:	21 f4       	brne	.+8      	; 0x7f6 <vfprintf+0xbe>
 7ee:	26 fd       	sbrc	r18, 6
 7f0:	6b c1       	rjmp	.+726    	; 0xac8 <vfprintf+0x390>
 7f2:	20 64       	ori	r18, 0x40	; 64
 7f4:	06 c0       	rjmp	.+12     	; 0x802 <vfprintf+0xca>
 7f6:	8c 36       	cpi	r24, 0x6C	; 108
 7f8:	11 f4       	brne	.+4      	; 0x7fe <vfprintf+0xc6>
 7fa:	20 68       	ori	r18, 0x80	; 128
 7fc:	02 c0       	rjmp	.+4      	; 0x802 <vfprintf+0xca>
 7fe:	88 36       	cpi	r24, 0x68	; 104
 800:	41 f4       	brne	.+16     	; 0x812 <vfprintf+0xda>
 802:	f6 01       	movw	r30, r12
 804:	93 fd       	sbrc	r25, 3
 806:	85 91       	lpm	r24, Z+
 808:	93 ff       	sbrs	r25, 3
 80a:	81 91       	ld	r24, Z+
 80c:	6f 01       	movw	r12, r30
 80e:	81 11       	cpse	r24, r1
 810:	c1 cf       	rjmp	.-126    	; 0x794 <vfprintf+0x5c>
 812:	98 2f       	mov	r25, r24
 814:	9f 7d       	andi	r25, 0xDF	; 223
 816:	95 54       	subi	r25, 0x45	; 69
 818:	93 30       	cpi	r25, 0x03	; 3
 81a:	28 f4       	brcc	.+10     	; 0x826 <vfprintf+0xee>
 81c:	0c 5f       	subi	r16, 0xFC	; 252
 81e:	1f 4f       	sbci	r17, 0xFF	; 255
 820:	ff e3       	ldi	r31, 0x3F	; 63
 822:	f9 83       	std	Y+1, r31	; 0x01
 824:	0d c0       	rjmp	.+26     	; 0x840 <vfprintf+0x108>
 826:	83 36       	cpi	r24, 0x63	; 99
 828:	31 f0       	breq	.+12     	; 0x836 <vfprintf+0xfe>
 82a:	83 37       	cpi	r24, 0x73	; 115
 82c:	71 f0       	breq	.+28     	; 0x84a <vfprintf+0x112>
 82e:	83 35       	cpi	r24, 0x53	; 83
 830:	09 f0       	breq	.+2      	; 0x834 <vfprintf+0xfc>
 832:	5b c0       	rjmp	.+182    	; 0x8ea <vfprintf+0x1b2>
 834:	22 c0       	rjmp	.+68     	; 0x87a <vfprintf+0x142>
 836:	f8 01       	movw	r30, r16
 838:	80 81       	ld	r24, Z
 83a:	89 83       	std	Y+1, r24	; 0x01
 83c:	0e 5f       	subi	r16, 0xFE	; 254
 83e:	1f 4f       	sbci	r17, 0xFF	; 255
 840:	44 24       	eor	r4, r4
 842:	43 94       	inc	r4
 844:	51 2c       	mov	r5, r1
 846:	54 01       	movw	r10, r8
 848:	15 c0       	rjmp	.+42     	; 0x874 <vfprintf+0x13c>
 84a:	38 01       	movw	r6, r16
 84c:	f2 e0       	ldi	r31, 0x02	; 2
 84e:	6f 0e       	add	r6, r31
 850:	71 1c       	adc	r7, r1
 852:	f8 01       	movw	r30, r16
 854:	a0 80       	ld	r10, Z
 856:	b1 80       	ldd	r11, Z+1	; 0x01
 858:	26 ff       	sbrs	r18, 6
 85a:	03 c0       	rjmp	.+6      	; 0x862 <vfprintf+0x12a>
 85c:	65 2d       	mov	r22, r5
 85e:	70 e0       	ldi	r23, 0x00	; 0
 860:	02 c0       	rjmp	.+4      	; 0x866 <vfprintf+0x12e>
 862:	6f ef       	ldi	r22, 0xFF	; 255
 864:	7f ef       	ldi	r23, 0xFF	; 255
 866:	c5 01       	movw	r24, r10
 868:	2c 87       	std	Y+12, r18	; 0x0c
 86a:	0e 94 c3 06 	call	0xd86	; 0xd86 <strnlen>
 86e:	2c 01       	movw	r4, r24
 870:	83 01       	movw	r16, r6
 872:	2c 85       	ldd	r18, Y+12	; 0x0c
 874:	2f 77       	andi	r18, 0x7F	; 127
 876:	22 2e       	mov	r2, r18
 878:	17 c0       	rjmp	.+46     	; 0x8a8 <vfprintf+0x170>
 87a:	38 01       	movw	r6, r16
 87c:	f2 e0       	ldi	r31, 0x02	; 2
 87e:	6f 0e       	add	r6, r31
 880:	71 1c       	adc	r7, r1
 882:	f8 01       	movw	r30, r16
 884:	a0 80       	ld	r10, Z
 886:	b1 80       	ldd	r11, Z+1	; 0x01
 888:	26 ff       	sbrs	r18, 6
 88a:	03 c0       	rjmp	.+6      	; 0x892 <vfprintf+0x15a>
 88c:	65 2d       	mov	r22, r5
 88e:	70 e0       	ldi	r23, 0x00	; 0
 890:	02 c0       	rjmp	.+4      	; 0x896 <vfprintf+0x15e>
 892:	6f ef       	ldi	r22, 0xFF	; 255
 894:	7f ef       	ldi	r23, 0xFF	; 255
 896:	c5 01       	movw	r24, r10
 898:	2c 87       	std	Y+12, r18	; 0x0c
 89a:	0e 94 b1 06 	call	0xd62	; 0xd62 <strnlen_P>
 89e:	2c 01       	movw	r4, r24
 8a0:	2c 85       	ldd	r18, Y+12	; 0x0c
 8a2:	20 68       	ori	r18, 0x80	; 128
 8a4:	22 2e       	mov	r2, r18
 8a6:	83 01       	movw	r16, r6
 8a8:	23 fc       	sbrc	r2, 3
 8aa:	1b c0       	rjmp	.+54     	; 0x8e2 <vfprintf+0x1aa>
 8ac:	83 2d       	mov	r24, r3
 8ae:	90 e0       	ldi	r25, 0x00	; 0
 8b0:	48 16       	cp	r4, r24
 8b2:	59 06       	cpc	r5, r25
 8b4:	b0 f4       	brcc	.+44     	; 0x8e2 <vfprintf+0x1aa>
 8b6:	b7 01       	movw	r22, r14
 8b8:	80 e2       	ldi	r24, 0x20	; 32
 8ba:	90 e0       	ldi	r25, 0x00	; 0
 8bc:	0e 94 ce 06 	call	0xd9c	; 0xd9c <fputc>
 8c0:	3a 94       	dec	r3
 8c2:	f4 cf       	rjmp	.-24     	; 0x8ac <vfprintf+0x174>
 8c4:	f5 01       	movw	r30, r10
 8c6:	27 fc       	sbrc	r2, 7
 8c8:	85 91       	lpm	r24, Z+
 8ca:	27 fe       	sbrs	r2, 7
 8cc:	81 91       	ld	r24, Z+
 8ce:	5f 01       	movw	r10, r30
 8d0:	b7 01       	movw	r22, r14
 8d2:	90 e0       	ldi	r25, 0x00	; 0
 8d4:	0e 94 ce 06 	call	0xd9c	; 0xd9c <fputc>
 8d8:	31 10       	cpse	r3, r1
 8da:	3a 94       	dec	r3
 8dc:	f1 e0       	ldi	r31, 0x01	; 1
 8de:	4f 1a       	sub	r4, r31
 8e0:	51 08       	sbc	r5, r1
 8e2:	41 14       	cp	r4, r1
 8e4:	51 04       	cpc	r5, r1
 8e6:	71 f7       	brne	.-36     	; 0x8c4 <vfprintf+0x18c>
 8e8:	e5 c0       	rjmp	.+458    	; 0xab4 <vfprintf+0x37c>
 8ea:	84 36       	cpi	r24, 0x64	; 100
 8ec:	11 f0       	breq	.+4      	; 0x8f2 <vfprintf+0x1ba>
 8ee:	89 36       	cpi	r24, 0x69	; 105
 8f0:	39 f5       	brne	.+78     	; 0x940 <vfprintf+0x208>
 8f2:	f8 01       	movw	r30, r16
 8f4:	27 ff       	sbrs	r18, 7
 8f6:	07 c0       	rjmp	.+14     	; 0x906 <vfprintf+0x1ce>
 8f8:	60 81       	ld	r22, Z
 8fa:	71 81       	ldd	r23, Z+1	; 0x01
 8fc:	82 81       	ldd	r24, Z+2	; 0x02
 8fe:	93 81       	ldd	r25, Z+3	; 0x03
 900:	0c 5f       	subi	r16, 0xFC	; 252
 902:	1f 4f       	sbci	r17, 0xFF	; 255
 904:	08 c0       	rjmp	.+16     	; 0x916 <vfprintf+0x1de>
 906:	60 81       	ld	r22, Z
 908:	71 81       	ldd	r23, Z+1	; 0x01
 90a:	88 27       	eor	r24, r24
 90c:	77 fd       	sbrc	r23, 7
 90e:	80 95       	com	r24
 910:	98 2f       	mov	r25, r24
 912:	0e 5f       	subi	r16, 0xFE	; 254
 914:	1f 4f       	sbci	r17, 0xFF	; 255
 916:	2f 76       	andi	r18, 0x6F	; 111
 918:	b2 2e       	mov	r11, r18
 91a:	97 ff       	sbrs	r25, 7
 91c:	09 c0       	rjmp	.+18     	; 0x930 <vfprintf+0x1f8>
 91e:	90 95       	com	r25
 920:	80 95       	com	r24
 922:	70 95       	com	r23
 924:	61 95       	neg	r22
 926:	7f 4f       	sbci	r23, 0xFF	; 255
 928:	8f 4f       	sbci	r24, 0xFF	; 255
 92a:	9f 4f       	sbci	r25, 0xFF	; 255
 92c:	20 68       	ori	r18, 0x80	; 128
 92e:	b2 2e       	mov	r11, r18
 930:	2a e0       	ldi	r18, 0x0A	; 10
 932:	30 e0       	ldi	r19, 0x00	; 0
 934:	a4 01       	movw	r20, r8
 936:	0e 94 00 07 	call	0xe00	; 0xe00 <__ultoa_invert>
 93a:	a8 2e       	mov	r10, r24
 93c:	a8 18       	sub	r10, r8
 93e:	44 c0       	rjmp	.+136    	; 0x9c8 <vfprintf+0x290>
 940:	85 37       	cpi	r24, 0x75	; 117
 942:	29 f4       	brne	.+10     	; 0x94e <vfprintf+0x216>
 944:	2f 7e       	andi	r18, 0xEF	; 239
 946:	b2 2e       	mov	r11, r18
 948:	2a e0       	ldi	r18, 0x0A	; 10
 94a:	30 e0       	ldi	r19, 0x00	; 0
 94c:	25 c0       	rjmp	.+74     	; 0x998 <vfprintf+0x260>
 94e:	f2 2f       	mov	r31, r18
 950:	f9 7f       	andi	r31, 0xF9	; 249
 952:	bf 2e       	mov	r11, r31
 954:	8f 36       	cpi	r24, 0x6F	; 111
 956:	c1 f0       	breq	.+48     	; 0x988 <vfprintf+0x250>
 958:	18 f4       	brcc	.+6      	; 0x960 <vfprintf+0x228>
 95a:	88 35       	cpi	r24, 0x58	; 88
 95c:	79 f0       	breq	.+30     	; 0x97c <vfprintf+0x244>
 95e:	b4 c0       	rjmp	.+360    	; 0xac8 <vfprintf+0x390>
 960:	80 37       	cpi	r24, 0x70	; 112
 962:	19 f0       	breq	.+6      	; 0x96a <vfprintf+0x232>
 964:	88 37       	cpi	r24, 0x78	; 120
 966:	21 f0       	breq	.+8      	; 0x970 <vfprintf+0x238>
 968:	af c0       	rjmp	.+350    	; 0xac8 <vfprintf+0x390>
 96a:	2f 2f       	mov	r18, r31
 96c:	20 61       	ori	r18, 0x10	; 16
 96e:	b2 2e       	mov	r11, r18
 970:	b4 fe       	sbrs	r11, 4
 972:	0d c0       	rjmp	.+26     	; 0x98e <vfprintf+0x256>
 974:	8b 2d       	mov	r24, r11
 976:	84 60       	ori	r24, 0x04	; 4
 978:	b8 2e       	mov	r11, r24
 97a:	09 c0       	rjmp	.+18     	; 0x98e <vfprintf+0x256>
 97c:	24 ff       	sbrs	r18, 4
 97e:	0a c0       	rjmp	.+20     	; 0x994 <vfprintf+0x25c>
 980:	9f 2f       	mov	r25, r31
 982:	96 60       	ori	r25, 0x06	; 6
 984:	b9 2e       	mov	r11, r25
 986:	06 c0       	rjmp	.+12     	; 0x994 <vfprintf+0x25c>
 988:	28 e0       	ldi	r18, 0x08	; 8
 98a:	30 e0       	ldi	r19, 0x00	; 0
 98c:	05 c0       	rjmp	.+10     	; 0x998 <vfprintf+0x260>
 98e:	20 e1       	ldi	r18, 0x10	; 16
 990:	30 e0       	ldi	r19, 0x00	; 0
 992:	02 c0       	rjmp	.+4      	; 0x998 <vfprintf+0x260>
 994:	20 e1       	ldi	r18, 0x10	; 16
 996:	32 e0       	ldi	r19, 0x02	; 2
 998:	f8 01       	movw	r30, r16
 99a:	b7 fe       	sbrs	r11, 7
 99c:	07 c0       	rjmp	.+14     	; 0x9ac <vfprintf+0x274>
 99e:	60 81       	ld	r22, Z
 9a0:	71 81       	ldd	r23, Z+1	; 0x01
 9a2:	82 81       	ldd	r24, Z+2	; 0x02
 9a4:	93 81       	ldd	r25, Z+3	; 0x03
 9a6:	0c 5f       	subi	r16, 0xFC	; 252
 9a8:	1f 4f       	sbci	r17, 0xFF	; 255
 9aa:	06 c0       	rjmp	.+12     	; 0x9b8 <vfprintf+0x280>
 9ac:	60 81       	ld	r22, Z
 9ae:	71 81       	ldd	r23, Z+1	; 0x01
 9b0:	80 e0       	ldi	r24, 0x00	; 0
 9b2:	90 e0       	ldi	r25, 0x00	; 0
 9b4:	0e 5f       	subi	r16, 0xFE	; 254
 9b6:	1f 4f       	sbci	r17, 0xFF	; 255
 9b8:	a4 01       	movw	r20, r8
 9ba:	0e 94 00 07 	call	0xe00	; 0xe00 <__ultoa_invert>
 9be:	a8 2e       	mov	r10, r24
 9c0:	a8 18       	sub	r10, r8
 9c2:	fb 2d       	mov	r31, r11
 9c4:	ff 77       	andi	r31, 0x7F	; 127
 9c6:	bf 2e       	mov	r11, r31
 9c8:	b6 fe       	sbrs	r11, 6
 9ca:	0b c0       	rjmp	.+22     	; 0x9e2 <vfprintf+0x2aa>
 9cc:	2b 2d       	mov	r18, r11
 9ce:	2e 7f       	andi	r18, 0xFE	; 254
 9d0:	a5 14       	cp	r10, r5
 9d2:	50 f4       	brcc	.+20     	; 0x9e8 <vfprintf+0x2b0>
 9d4:	b4 fe       	sbrs	r11, 4
 9d6:	0a c0       	rjmp	.+20     	; 0x9ec <vfprintf+0x2b4>
 9d8:	b2 fc       	sbrc	r11, 2
 9da:	08 c0       	rjmp	.+16     	; 0x9ec <vfprintf+0x2b4>
 9dc:	2b 2d       	mov	r18, r11
 9de:	2e 7e       	andi	r18, 0xEE	; 238
 9e0:	05 c0       	rjmp	.+10     	; 0x9ec <vfprintf+0x2b4>
 9e2:	7a 2c       	mov	r7, r10
 9e4:	2b 2d       	mov	r18, r11
 9e6:	03 c0       	rjmp	.+6      	; 0x9ee <vfprintf+0x2b6>
 9e8:	7a 2c       	mov	r7, r10
 9ea:	01 c0       	rjmp	.+2      	; 0x9ee <vfprintf+0x2b6>
 9ec:	75 2c       	mov	r7, r5
 9ee:	24 ff       	sbrs	r18, 4
 9f0:	0d c0       	rjmp	.+26     	; 0xa0c <vfprintf+0x2d4>
 9f2:	fe 01       	movw	r30, r28
 9f4:	ea 0d       	add	r30, r10
 9f6:	f1 1d       	adc	r31, r1
 9f8:	80 81       	ld	r24, Z
 9fa:	80 33       	cpi	r24, 0x30	; 48
 9fc:	11 f4       	brne	.+4      	; 0xa02 <vfprintf+0x2ca>
 9fe:	29 7e       	andi	r18, 0xE9	; 233
 a00:	09 c0       	rjmp	.+18     	; 0xa14 <vfprintf+0x2dc>
 a02:	22 ff       	sbrs	r18, 2
 a04:	06 c0       	rjmp	.+12     	; 0xa12 <vfprintf+0x2da>
 a06:	73 94       	inc	r7
 a08:	73 94       	inc	r7
 a0a:	04 c0       	rjmp	.+8      	; 0xa14 <vfprintf+0x2dc>
 a0c:	82 2f       	mov	r24, r18
 a0e:	86 78       	andi	r24, 0x86	; 134
 a10:	09 f0       	breq	.+2      	; 0xa14 <vfprintf+0x2dc>
 a12:	73 94       	inc	r7
 a14:	23 fd       	sbrc	r18, 3
 a16:	13 c0       	rjmp	.+38     	; 0xa3e <vfprintf+0x306>
 a18:	20 ff       	sbrs	r18, 0
 a1a:	06 c0       	rjmp	.+12     	; 0xa28 <vfprintf+0x2f0>
 a1c:	5a 2c       	mov	r5, r10
 a1e:	73 14       	cp	r7, r3
 a20:	18 f4       	brcc	.+6      	; 0xa28 <vfprintf+0x2f0>
 a22:	53 0c       	add	r5, r3
 a24:	57 18       	sub	r5, r7
 a26:	73 2c       	mov	r7, r3
 a28:	73 14       	cp	r7, r3
 a2a:	68 f4       	brcc	.+26     	; 0xa46 <vfprintf+0x30e>
 a2c:	b7 01       	movw	r22, r14
 a2e:	80 e2       	ldi	r24, 0x20	; 32
 a30:	90 e0       	ldi	r25, 0x00	; 0
 a32:	2c 87       	std	Y+12, r18	; 0x0c
 a34:	0e 94 ce 06 	call	0xd9c	; 0xd9c <fputc>
 a38:	73 94       	inc	r7
 a3a:	2c 85       	ldd	r18, Y+12	; 0x0c
 a3c:	f5 cf       	rjmp	.-22     	; 0xa28 <vfprintf+0x2f0>
 a3e:	73 14       	cp	r7, r3
 a40:	10 f4       	brcc	.+4      	; 0xa46 <vfprintf+0x30e>
 a42:	37 18       	sub	r3, r7
 a44:	01 c0       	rjmp	.+2      	; 0xa48 <vfprintf+0x310>
 a46:	31 2c       	mov	r3, r1
 a48:	24 ff       	sbrs	r18, 4
 a4a:	12 c0       	rjmp	.+36     	; 0xa70 <vfprintf+0x338>
 a4c:	b7 01       	movw	r22, r14
 a4e:	80 e3       	ldi	r24, 0x30	; 48
 a50:	90 e0       	ldi	r25, 0x00	; 0
 a52:	2c 87       	std	Y+12, r18	; 0x0c
 a54:	0e 94 ce 06 	call	0xd9c	; 0xd9c <fputc>
 a58:	2c 85       	ldd	r18, Y+12	; 0x0c
 a5a:	22 ff       	sbrs	r18, 2
 a5c:	17 c0       	rjmp	.+46     	; 0xa8c <vfprintf+0x354>
 a5e:	21 ff       	sbrs	r18, 1
 a60:	03 c0       	rjmp	.+6      	; 0xa68 <vfprintf+0x330>
 a62:	88 e5       	ldi	r24, 0x58	; 88
 a64:	90 e0       	ldi	r25, 0x00	; 0
 a66:	02 c0       	rjmp	.+4      	; 0xa6c <vfprintf+0x334>
 a68:	88 e7       	ldi	r24, 0x78	; 120
 a6a:	90 e0       	ldi	r25, 0x00	; 0
 a6c:	b7 01       	movw	r22, r14
 a6e:	0c c0       	rjmp	.+24     	; 0xa88 <vfprintf+0x350>
 a70:	82 2f       	mov	r24, r18
 a72:	86 78       	andi	r24, 0x86	; 134
 a74:	59 f0       	breq	.+22     	; 0xa8c <vfprintf+0x354>
 a76:	21 fd       	sbrc	r18, 1
 a78:	02 c0       	rjmp	.+4      	; 0xa7e <vfprintf+0x346>
 a7a:	80 e2       	ldi	r24, 0x20	; 32
 a7c:	01 c0       	rjmp	.+2      	; 0xa80 <vfprintf+0x348>
 a7e:	8b e2       	ldi	r24, 0x2B	; 43
 a80:	27 fd       	sbrc	r18, 7
 a82:	8d e2       	ldi	r24, 0x2D	; 45
 a84:	b7 01       	movw	r22, r14
 a86:	90 e0       	ldi	r25, 0x00	; 0
 a88:	0e 94 ce 06 	call	0xd9c	; 0xd9c <fputc>
 a8c:	a5 14       	cp	r10, r5
 a8e:	38 f4       	brcc	.+14     	; 0xa9e <vfprintf+0x366>
 a90:	b7 01       	movw	r22, r14
 a92:	80 e3       	ldi	r24, 0x30	; 48
 a94:	90 e0       	ldi	r25, 0x00	; 0
 a96:	0e 94 ce 06 	call	0xd9c	; 0xd9c <fputc>
 a9a:	5a 94       	dec	r5
 a9c:	f7 cf       	rjmp	.-18     	; 0xa8c <vfprintf+0x354>
 a9e:	aa 94       	dec	r10
 aa0:	f4 01       	movw	r30, r8
 aa2:	ea 0d       	add	r30, r10
 aa4:	f1 1d       	adc	r31, r1
 aa6:	80 81       	ld	r24, Z
 aa8:	b7 01       	movw	r22, r14
 aaa:	90 e0       	ldi	r25, 0x00	; 0
 aac:	0e 94 ce 06 	call	0xd9c	; 0xd9c <fputc>
 ab0:	a1 10       	cpse	r10, r1
 ab2:	f5 cf       	rjmp	.-22     	; 0xa9e <vfprintf+0x366>
 ab4:	33 20       	and	r3, r3
 ab6:	09 f4       	brne	.+2      	; 0xaba <vfprintf+0x382>
 ab8:	51 ce       	rjmp	.-862    	; 0x75c <vfprintf+0x24>
 aba:	b7 01       	movw	r22, r14
 abc:	80 e2       	ldi	r24, 0x20	; 32
 abe:	90 e0       	ldi	r25, 0x00	; 0
 ac0:	0e 94 ce 06 	call	0xd9c	; 0xd9c <fputc>
 ac4:	3a 94       	dec	r3
 ac6:	f6 cf       	rjmp	.-20     	; 0xab4 <vfprintf+0x37c>
 ac8:	f7 01       	movw	r30, r14
 aca:	86 81       	ldd	r24, Z+6	; 0x06
 acc:	97 81       	ldd	r25, Z+7	; 0x07
 ace:	02 c0       	rjmp	.+4      	; 0xad4 <vfprintf+0x39c>
 ad0:	8f ef       	ldi	r24, 0xFF	; 255
 ad2:	9f ef       	ldi	r25, 0xFF	; 255
 ad4:	2c 96       	adiw	r28, 0x0c	; 12
 ad6:	e2 e1       	ldi	r30, 0x12	; 18
 ad8:	0c 94 7a 07 	jmp	0xef4	; 0xef4 <__epilogue_restores__>

00000adc <calloc>:
 adc:	0f 93       	push	r16
 ade:	1f 93       	push	r17
 ae0:	cf 93       	push	r28
 ae2:	df 93       	push	r29
 ae4:	86 9f       	mul	r24, r22
 ae6:	80 01       	movw	r16, r0
 ae8:	87 9f       	mul	r24, r23
 aea:	10 0d       	add	r17, r0
 aec:	96 9f       	mul	r25, r22
 aee:	10 0d       	add	r17, r0
 af0:	11 24       	eor	r1, r1
 af2:	c8 01       	movw	r24, r16
 af4:	0e 94 8a 05 	call	0xb14	; 0xb14 <malloc>
 af8:	ec 01       	movw	r28, r24
 afa:	00 97       	sbiw	r24, 0x00	; 0
 afc:	29 f0       	breq	.+10     	; 0xb08 <calloc+0x2c>
 afe:	a8 01       	movw	r20, r16
 b00:	60 e0       	ldi	r22, 0x00	; 0
 b02:	70 e0       	ldi	r23, 0x00	; 0
 b04:	0e 94 bc 06 	call	0xd78	; 0xd78 <memset>
 b08:	ce 01       	movw	r24, r28
 b0a:	df 91       	pop	r29
 b0c:	cf 91       	pop	r28
 b0e:	1f 91       	pop	r17
 b10:	0f 91       	pop	r16
 b12:	08 95       	ret

00000b14 <malloc>:
 b14:	cf 93       	push	r28
 b16:	df 93       	push	r29
 b18:	82 30       	cpi	r24, 0x02	; 2
 b1a:	91 05       	cpc	r25, r1
 b1c:	10 f4       	brcc	.+4      	; 0xb22 <malloc+0xe>
 b1e:	82 e0       	ldi	r24, 0x02	; 2
 b20:	90 e0       	ldi	r25, 0x00	; 0
 b22:	e0 91 c6 01 	lds	r30, 0x01C6
 b26:	f0 91 c7 01 	lds	r31, 0x01C7
 b2a:	20 e0       	ldi	r18, 0x00	; 0
 b2c:	30 e0       	ldi	r19, 0x00	; 0
 b2e:	a0 e0       	ldi	r26, 0x00	; 0
 b30:	b0 e0       	ldi	r27, 0x00	; 0
 b32:	30 97       	sbiw	r30, 0x00	; 0
 b34:	39 f1       	breq	.+78     	; 0xb84 <malloc+0x70>
 b36:	40 81       	ld	r20, Z
 b38:	51 81       	ldd	r21, Z+1	; 0x01
 b3a:	48 17       	cp	r20, r24
 b3c:	59 07       	cpc	r21, r25
 b3e:	b8 f0       	brcs	.+46     	; 0xb6e <malloc+0x5a>
 b40:	48 17       	cp	r20, r24
 b42:	59 07       	cpc	r21, r25
 b44:	71 f4       	brne	.+28     	; 0xb62 <malloc+0x4e>
 b46:	82 81       	ldd	r24, Z+2	; 0x02
 b48:	93 81       	ldd	r25, Z+3	; 0x03
 b4a:	10 97       	sbiw	r26, 0x00	; 0
 b4c:	29 f0       	breq	.+10     	; 0xb58 <malloc+0x44>
 b4e:	13 96       	adiw	r26, 0x03	; 3
 b50:	9c 93       	st	X, r25
 b52:	8e 93       	st	-X, r24
 b54:	12 97       	sbiw	r26, 0x02	; 2
 b56:	2c c0       	rjmp	.+88     	; 0xbb0 <malloc+0x9c>
 b58:	90 93 c7 01 	sts	0x01C7, r25
 b5c:	80 93 c6 01 	sts	0x01C6, r24
 b60:	27 c0       	rjmp	.+78     	; 0xbb0 <malloc+0x9c>
 b62:	21 15       	cp	r18, r1
 b64:	31 05       	cpc	r19, r1
 b66:	31 f0       	breq	.+12     	; 0xb74 <malloc+0x60>
 b68:	42 17       	cp	r20, r18
 b6a:	53 07       	cpc	r21, r19
 b6c:	18 f0       	brcs	.+6      	; 0xb74 <malloc+0x60>
 b6e:	a9 01       	movw	r20, r18
 b70:	db 01       	movw	r26, r22
 b72:	01 c0       	rjmp	.+2      	; 0xb76 <malloc+0x62>
 b74:	ef 01       	movw	r28, r30
 b76:	9a 01       	movw	r18, r20
 b78:	bd 01       	movw	r22, r26
 b7a:	df 01       	movw	r26, r30
 b7c:	02 80       	ldd	r0, Z+2	; 0x02
 b7e:	f3 81       	ldd	r31, Z+3	; 0x03
 b80:	e0 2d       	mov	r30, r0
 b82:	d7 cf       	rjmp	.-82     	; 0xb32 <malloc+0x1e>
 b84:	21 15       	cp	r18, r1
 b86:	31 05       	cpc	r19, r1
 b88:	f9 f0       	breq	.+62     	; 0xbc8 <malloc+0xb4>
 b8a:	28 1b       	sub	r18, r24
 b8c:	39 0b       	sbc	r19, r25
 b8e:	24 30       	cpi	r18, 0x04	; 4
 b90:	31 05       	cpc	r19, r1
 b92:	80 f4       	brcc	.+32     	; 0xbb4 <malloc+0xa0>
 b94:	8a 81       	ldd	r24, Y+2	; 0x02
 b96:	9b 81       	ldd	r25, Y+3	; 0x03
 b98:	61 15       	cp	r22, r1
 b9a:	71 05       	cpc	r23, r1
 b9c:	21 f0       	breq	.+8      	; 0xba6 <malloc+0x92>
 b9e:	fb 01       	movw	r30, r22
 ba0:	93 83       	std	Z+3, r25	; 0x03
 ba2:	82 83       	std	Z+2, r24	; 0x02
 ba4:	04 c0       	rjmp	.+8      	; 0xbae <malloc+0x9a>
 ba6:	90 93 c7 01 	sts	0x01C7, r25
 baa:	80 93 c6 01 	sts	0x01C6, r24
 bae:	fe 01       	movw	r30, r28
 bb0:	32 96       	adiw	r30, 0x02	; 2
 bb2:	44 c0       	rjmp	.+136    	; 0xc3c <malloc+0x128>
 bb4:	fe 01       	movw	r30, r28
 bb6:	e2 0f       	add	r30, r18
 bb8:	f3 1f       	adc	r31, r19
 bba:	81 93       	st	Z+, r24
 bbc:	91 93       	st	Z+, r25
 bbe:	22 50       	subi	r18, 0x02	; 2
 bc0:	31 09       	sbc	r19, r1
 bc2:	39 83       	std	Y+1, r19	; 0x01
 bc4:	28 83       	st	Y, r18
 bc6:	3a c0       	rjmp	.+116    	; 0xc3c <malloc+0x128>
 bc8:	20 91 c4 01 	lds	r18, 0x01C4
 bcc:	30 91 c5 01 	lds	r19, 0x01C5
 bd0:	23 2b       	or	r18, r19
 bd2:	41 f4       	brne	.+16     	; 0xbe4 <malloc+0xd0>
 bd4:	20 91 02 01 	lds	r18, 0x0102
 bd8:	30 91 03 01 	lds	r19, 0x0103
 bdc:	30 93 c5 01 	sts	0x01C5, r19
 be0:	20 93 c4 01 	sts	0x01C4, r18
 be4:	20 91 00 01 	lds	r18, 0x0100
 be8:	30 91 01 01 	lds	r19, 0x0101
 bec:	21 15       	cp	r18, r1
 bee:	31 05       	cpc	r19, r1
 bf0:	41 f4       	brne	.+16     	; 0xc02 <malloc+0xee>
 bf2:	2d b7       	in	r18, 0x3d	; 61
 bf4:	3e b7       	in	r19, 0x3e	; 62
 bf6:	40 91 04 01 	lds	r20, 0x0104
 bfa:	50 91 05 01 	lds	r21, 0x0105
 bfe:	24 1b       	sub	r18, r20
 c00:	35 0b       	sbc	r19, r21
 c02:	e0 91 c4 01 	lds	r30, 0x01C4
 c06:	f0 91 c5 01 	lds	r31, 0x01C5
 c0a:	e2 17       	cp	r30, r18
 c0c:	f3 07       	cpc	r31, r19
 c0e:	a0 f4       	brcc	.+40     	; 0xc38 <malloc+0x124>
 c10:	2e 1b       	sub	r18, r30
 c12:	3f 0b       	sbc	r19, r31
 c14:	28 17       	cp	r18, r24
 c16:	39 07       	cpc	r19, r25
 c18:	78 f0       	brcs	.+30     	; 0xc38 <malloc+0x124>
 c1a:	ac 01       	movw	r20, r24
 c1c:	4e 5f       	subi	r20, 0xFE	; 254
 c1e:	5f 4f       	sbci	r21, 0xFF	; 255
 c20:	24 17       	cp	r18, r20
 c22:	35 07       	cpc	r19, r21
 c24:	48 f0       	brcs	.+18     	; 0xc38 <malloc+0x124>
 c26:	4e 0f       	add	r20, r30
 c28:	5f 1f       	adc	r21, r31
 c2a:	50 93 c5 01 	sts	0x01C5, r21
 c2e:	40 93 c4 01 	sts	0x01C4, r20
 c32:	81 93       	st	Z+, r24
 c34:	91 93       	st	Z+, r25
 c36:	02 c0       	rjmp	.+4      	; 0xc3c <malloc+0x128>
 c38:	e0 e0       	ldi	r30, 0x00	; 0
 c3a:	f0 e0       	ldi	r31, 0x00	; 0
 c3c:	cf 01       	movw	r24, r30
 c3e:	df 91       	pop	r29
 c40:	cf 91       	pop	r28
 c42:	08 95       	ret

00000c44 <free>:
 c44:	cf 93       	push	r28
 c46:	df 93       	push	r29
 c48:	00 97       	sbiw	r24, 0x00	; 0
 c4a:	09 f4       	brne	.+2      	; 0xc4e <free+0xa>
 c4c:	87 c0       	rjmp	.+270    	; 0xd5c <free+0x118>
 c4e:	fc 01       	movw	r30, r24
 c50:	32 97       	sbiw	r30, 0x02	; 2
 c52:	13 82       	std	Z+3, r1	; 0x03
 c54:	12 82       	std	Z+2, r1	; 0x02
 c56:	c0 91 c6 01 	lds	r28, 0x01C6
 c5a:	d0 91 c7 01 	lds	r29, 0x01C7
 c5e:	20 97       	sbiw	r28, 0x00	; 0
 c60:	81 f4       	brne	.+32     	; 0xc82 <free+0x3e>
 c62:	20 81       	ld	r18, Z
 c64:	31 81       	ldd	r19, Z+1	; 0x01
 c66:	28 0f       	add	r18, r24
 c68:	39 1f       	adc	r19, r25
 c6a:	80 91 c4 01 	lds	r24, 0x01C4
 c6e:	90 91 c5 01 	lds	r25, 0x01C5
 c72:	82 17       	cp	r24, r18
 c74:	93 07       	cpc	r25, r19
 c76:	79 f5       	brne	.+94     	; 0xcd6 <free+0x92>
 c78:	f0 93 c5 01 	sts	0x01C5, r31
 c7c:	e0 93 c4 01 	sts	0x01C4, r30
 c80:	6d c0       	rjmp	.+218    	; 0xd5c <free+0x118>
 c82:	de 01       	movw	r26, r28
 c84:	20 e0       	ldi	r18, 0x00	; 0
 c86:	30 e0       	ldi	r19, 0x00	; 0
 c88:	ae 17       	cp	r26, r30
 c8a:	bf 07       	cpc	r27, r31
 c8c:	50 f4       	brcc	.+20     	; 0xca2 <free+0x5e>
 c8e:	12 96       	adiw	r26, 0x02	; 2
 c90:	4d 91       	ld	r20, X+
 c92:	5c 91       	ld	r21, X
 c94:	13 97       	sbiw	r26, 0x03	; 3
 c96:	9d 01       	movw	r18, r26
 c98:	41 15       	cp	r20, r1
 c9a:	51 05       	cpc	r21, r1
 c9c:	09 f1       	breq	.+66     	; 0xce0 <free+0x9c>
 c9e:	da 01       	movw	r26, r20
 ca0:	f3 cf       	rjmp	.-26     	; 0xc88 <free+0x44>
 ca2:	b3 83       	std	Z+3, r27	; 0x03
 ca4:	a2 83       	std	Z+2, r26	; 0x02
 ca6:	40 81       	ld	r20, Z
 ca8:	51 81       	ldd	r21, Z+1	; 0x01
 caa:	84 0f       	add	r24, r20
 cac:	95 1f       	adc	r25, r21
 cae:	8a 17       	cp	r24, r26
 cb0:	9b 07       	cpc	r25, r27
 cb2:	71 f4       	brne	.+28     	; 0xcd0 <free+0x8c>
 cb4:	8d 91       	ld	r24, X+
 cb6:	9c 91       	ld	r25, X
 cb8:	11 97       	sbiw	r26, 0x01	; 1
 cba:	84 0f       	add	r24, r20
 cbc:	95 1f       	adc	r25, r21
 cbe:	02 96       	adiw	r24, 0x02	; 2
 cc0:	91 83       	std	Z+1, r25	; 0x01
 cc2:	80 83       	st	Z, r24
 cc4:	12 96       	adiw	r26, 0x02	; 2
 cc6:	8d 91       	ld	r24, X+
 cc8:	9c 91       	ld	r25, X
 cca:	13 97       	sbiw	r26, 0x03	; 3
 ccc:	93 83       	std	Z+3, r25	; 0x03
 cce:	82 83       	std	Z+2, r24	; 0x02
 cd0:	21 15       	cp	r18, r1
 cd2:	31 05       	cpc	r19, r1
 cd4:	29 f4       	brne	.+10     	; 0xce0 <free+0x9c>
 cd6:	f0 93 c7 01 	sts	0x01C7, r31
 cda:	e0 93 c6 01 	sts	0x01C6, r30
 cde:	3e c0       	rjmp	.+124    	; 0xd5c <free+0x118>
 ce0:	d9 01       	movw	r26, r18
 ce2:	13 96       	adiw	r26, 0x03	; 3
 ce4:	fc 93       	st	X, r31
 ce6:	ee 93       	st	-X, r30
 ce8:	12 97       	sbiw	r26, 0x02	; 2
 cea:	4d 91       	ld	r20, X+
 cec:	5d 91       	ld	r21, X+
 cee:	a4 0f       	add	r26, r20
 cf0:	b5 1f       	adc	r27, r21
 cf2:	ea 17       	cp	r30, r26
 cf4:	fb 07       	cpc	r31, r27
 cf6:	79 f4       	brne	.+30     	; 0xd16 <free+0xd2>
 cf8:	80 81       	ld	r24, Z
 cfa:	91 81       	ldd	r25, Z+1	; 0x01
 cfc:	84 0f       	add	r24, r20
 cfe:	95 1f       	adc	r25, r21
 d00:	02 96       	adiw	r24, 0x02	; 2
 d02:	d9 01       	movw	r26, r18
 d04:	11 96       	adiw	r26, 0x01	; 1
 d06:	9c 93       	st	X, r25
 d08:	8e 93       	st	-X, r24
 d0a:	82 81       	ldd	r24, Z+2	; 0x02
 d0c:	93 81       	ldd	r25, Z+3	; 0x03
 d0e:	13 96       	adiw	r26, 0x03	; 3
 d10:	9c 93       	st	X, r25
 d12:	8e 93       	st	-X, r24
 d14:	12 97       	sbiw	r26, 0x02	; 2
 d16:	e0 e0       	ldi	r30, 0x00	; 0
 d18:	f0 e0       	ldi	r31, 0x00	; 0
 d1a:	8a 81       	ldd	r24, Y+2	; 0x02
 d1c:	9b 81       	ldd	r25, Y+3	; 0x03
 d1e:	00 97       	sbiw	r24, 0x00	; 0
 d20:	19 f0       	breq	.+6      	; 0xd28 <free+0xe4>
 d22:	fe 01       	movw	r30, r28
 d24:	ec 01       	movw	r28, r24
 d26:	f9 cf       	rjmp	.-14     	; 0xd1a <free+0xd6>
 d28:	ce 01       	movw	r24, r28
 d2a:	02 96       	adiw	r24, 0x02	; 2
 d2c:	28 81       	ld	r18, Y
 d2e:	39 81       	ldd	r19, Y+1	; 0x01
 d30:	82 0f       	add	r24, r18
 d32:	93 1f       	adc	r25, r19
 d34:	20 91 c4 01 	lds	r18, 0x01C4
 d38:	30 91 c5 01 	lds	r19, 0x01C5
 d3c:	28 17       	cp	r18, r24
 d3e:	39 07       	cpc	r19, r25
 d40:	69 f4       	brne	.+26     	; 0xd5c <free+0x118>
 d42:	30 97       	sbiw	r30, 0x00	; 0
 d44:	29 f4       	brne	.+10     	; 0xd50 <free+0x10c>
 d46:	10 92 c7 01 	sts	0x01C7, r1
 d4a:	10 92 c6 01 	sts	0x01C6, r1
 d4e:	02 c0       	rjmp	.+4      	; 0xd54 <free+0x110>
 d50:	13 82       	std	Z+3, r1	; 0x03
 d52:	12 82       	std	Z+2, r1	; 0x02
 d54:	d0 93 c5 01 	sts	0x01C5, r29
 d58:	c0 93 c4 01 	sts	0x01C4, r28
 d5c:	df 91       	pop	r29
 d5e:	cf 91       	pop	r28
 d60:	08 95       	ret

00000d62 <strnlen_P>:
 d62:	fc 01       	movw	r30, r24
 d64:	05 90       	lpm	r0, Z+
 d66:	61 50       	subi	r22, 0x01	; 1
 d68:	70 40       	sbci	r23, 0x00	; 0
 d6a:	01 10       	cpse	r0, r1
 d6c:	d8 f7       	brcc	.-10     	; 0xd64 <strnlen_P+0x2>
 d6e:	80 95       	com	r24
 d70:	90 95       	com	r25
 d72:	8e 0f       	add	r24, r30
 d74:	9f 1f       	adc	r25, r31
 d76:	08 95       	ret

00000d78 <memset>:
 d78:	dc 01       	movw	r26, r24
 d7a:	01 c0       	rjmp	.+2      	; 0xd7e <memset+0x6>
 d7c:	6d 93       	st	X+, r22
 d7e:	41 50       	subi	r20, 0x01	; 1
 d80:	50 40       	sbci	r21, 0x00	; 0
 d82:	e0 f7       	brcc	.-8      	; 0xd7c <memset+0x4>
 d84:	08 95       	ret

00000d86 <strnlen>:
 d86:	fc 01       	movw	r30, r24
 d88:	61 50       	subi	r22, 0x01	; 1
 d8a:	70 40       	sbci	r23, 0x00	; 0
 d8c:	01 90       	ld	r0, Z+
 d8e:	01 10       	cpse	r0, r1
 d90:	d8 f7       	brcc	.-10     	; 0xd88 <strnlen+0x2>
 d92:	80 95       	com	r24
 d94:	90 95       	com	r25
 d96:	8e 0f       	add	r24, r30
 d98:	9f 1f       	adc	r25, r31
 d9a:	08 95       	ret

00000d9c <fputc>:
 d9c:	0f 93       	push	r16
 d9e:	1f 93       	push	r17
 da0:	cf 93       	push	r28
 da2:	df 93       	push	r29
 da4:	18 2f       	mov	r17, r24
 da6:	09 2f       	mov	r16, r25
 da8:	eb 01       	movw	r28, r22
 daa:	8b 81       	ldd	r24, Y+3	; 0x03
 dac:	81 fd       	sbrc	r24, 1
 dae:	03 c0       	rjmp	.+6      	; 0xdb6 <fputc+0x1a>
 db0:	8f ef       	ldi	r24, 0xFF	; 255
 db2:	9f ef       	ldi	r25, 0xFF	; 255
 db4:	20 c0       	rjmp	.+64     	; 0xdf6 <fputc+0x5a>
 db6:	82 ff       	sbrs	r24, 2
 db8:	10 c0       	rjmp	.+32     	; 0xdda <fputc+0x3e>
 dba:	4e 81       	ldd	r20, Y+6	; 0x06
 dbc:	5f 81       	ldd	r21, Y+7	; 0x07
 dbe:	2c 81       	ldd	r18, Y+4	; 0x04
 dc0:	3d 81       	ldd	r19, Y+5	; 0x05
 dc2:	42 17       	cp	r20, r18
 dc4:	53 07       	cpc	r21, r19
 dc6:	7c f4       	brge	.+30     	; 0xde6 <fputc+0x4a>
 dc8:	e8 81       	ld	r30, Y
 dca:	f9 81       	ldd	r31, Y+1	; 0x01
 dcc:	9f 01       	movw	r18, r30
 dce:	2f 5f       	subi	r18, 0xFF	; 255
 dd0:	3f 4f       	sbci	r19, 0xFF	; 255
 dd2:	39 83       	std	Y+1, r19	; 0x01
 dd4:	28 83       	st	Y, r18
 dd6:	10 83       	st	Z, r17
 dd8:	06 c0       	rjmp	.+12     	; 0xde6 <fputc+0x4a>
 dda:	e8 85       	ldd	r30, Y+8	; 0x08
 ddc:	f9 85       	ldd	r31, Y+9	; 0x09
 dde:	81 2f       	mov	r24, r17
 de0:	09 95       	icall
 de2:	89 2b       	or	r24, r25
 de4:	29 f7       	brne	.-54     	; 0xdb0 <fputc+0x14>
 de6:	2e 81       	ldd	r18, Y+6	; 0x06
 de8:	3f 81       	ldd	r19, Y+7	; 0x07
 dea:	2f 5f       	subi	r18, 0xFF	; 255
 dec:	3f 4f       	sbci	r19, 0xFF	; 255
 dee:	3f 83       	std	Y+7, r19	; 0x07
 df0:	2e 83       	std	Y+6, r18	; 0x06
 df2:	81 2f       	mov	r24, r17
 df4:	90 2f       	mov	r25, r16
 df6:	df 91       	pop	r29
 df8:	cf 91       	pop	r28
 dfa:	1f 91       	pop	r17
 dfc:	0f 91       	pop	r16
 dfe:	08 95       	ret

00000e00 <__ultoa_invert>:
 e00:	fa 01       	movw	r30, r20
 e02:	aa 27       	eor	r26, r26
 e04:	28 30       	cpi	r18, 0x08	; 8
 e06:	51 f1       	breq	.+84     	; 0xe5c <__ultoa_invert+0x5c>
 e08:	20 31       	cpi	r18, 0x10	; 16
 e0a:	81 f1       	breq	.+96     	; 0xe6c <__ultoa_invert+0x6c>
 e0c:	e8 94       	clt
 e0e:	6f 93       	push	r22
 e10:	6e 7f       	andi	r22, 0xFE	; 254
 e12:	6e 5f       	subi	r22, 0xFE	; 254
 e14:	7f 4f       	sbci	r23, 0xFF	; 255
 e16:	8f 4f       	sbci	r24, 0xFF	; 255
 e18:	9f 4f       	sbci	r25, 0xFF	; 255
 e1a:	af 4f       	sbci	r26, 0xFF	; 255
 e1c:	b1 e0       	ldi	r27, 0x01	; 1
 e1e:	3e d0       	rcall	.+124    	; 0xe9c <__ultoa_invert+0x9c>
 e20:	b4 e0       	ldi	r27, 0x04	; 4
 e22:	3c d0       	rcall	.+120    	; 0xe9c <__ultoa_invert+0x9c>
 e24:	67 0f       	add	r22, r23
 e26:	78 1f       	adc	r23, r24
 e28:	89 1f       	adc	r24, r25
 e2a:	9a 1f       	adc	r25, r26
 e2c:	a1 1d       	adc	r26, r1
 e2e:	68 0f       	add	r22, r24
 e30:	79 1f       	adc	r23, r25
 e32:	8a 1f       	adc	r24, r26
 e34:	91 1d       	adc	r25, r1
 e36:	a1 1d       	adc	r26, r1
 e38:	6a 0f       	add	r22, r26
 e3a:	71 1d       	adc	r23, r1
 e3c:	81 1d       	adc	r24, r1
 e3e:	91 1d       	adc	r25, r1
 e40:	a1 1d       	adc	r26, r1
 e42:	20 d0       	rcall	.+64     	; 0xe84 <__ultoa_invert+0x84>
 e44:	09 f4       	brne	.+2      	; 0xe48 <__ultoa_invert+0x48>
 e46:	68 94       	set
 e48:	3f 91       	pop	r19
 e4a:	2a e0       	ldi	r18, 0x0A	; 10
 e4c:	26 9f       	mul	r18, r22
 e4e:	11 24       	eor	r1, r1
 e50:	30 19       	sub	r19, r0
 e52:	30 5d       	subi	r19, 0xD0	; 208
 e54:	31 93       	st	Z+, r19
 e56:	de f6       	brtc	.-74     	; 0xe0e <__ultoa_invert+0xe>
 e58:	cf 01       	movw	r24, r30
 e5a:	08 95       	ret
 e5c:	46 2f       	mov	r20, r22
 e5e:	47 70       	andi	r20, 0x07	; 7
 e60:	40 5d       	subi	r20, 0xD0	; 208
 e62:	41 93       	st	Z+, r20
 e64:	b3 e0       	ldi	r27, 0x03	; 3
 e66:	0f d0       	rcall	.+30     	; 0xe86 <__ultoa_invert+0x86>
 e68:	c9 f7       	brne	.-14     	; 0xe5c <__ultoa_invert+0x5c>
 e6a:	f6 cf       	rjmp	.-20     	; 0xe58 <__ultoa_invert+0x58>
 e6c:	46 2f       	mov	r20, r22
 e6e:	4f 70       	andi	r20, 0x0F	; 15
 e70:	40 5d       	subi	r20, 0xD0	; 208
 e72:	4a 33       	cpi	r20, 0x3A	; 58
 e74:	18 f0       	brcs	.+6      	; 0xe7c <__ultoa_invert+0x7c>
 e76:	49 5d       	subi	r20, 0xD9	; 217
 e78:	31 fd       	sbrc	r19, 1
 e7a:	40 52       	subi	r20, 0x20	; 32
 e7c:	41 93       	st	Z+, r20
 e7e:	02 d0       	rcall	.+4      	; 0xe84 <__ultoa_invert+0x84>
 e80:	a9 f7       	brne	.-22     	; 0xe6c <__ultoa_invert+0x6c>
 e82:	ea cf       	rjmp	.-44     	; 0xe58 <__ultoa_invert+0x58>
 e84:	b4 e0       	ldi	r27, 0x04	; 4
 e86:	a6 95       	lsr	r26
 e88:	97 95       	ror	r25
 e8a:	87 95       	ror	r24
 e8c:	77 95       	ror	r23
 e8e:	67 95       	ror	r22
 e90:	ba 95       	dec	r27
 e92:	c9 f7       	brne	.-14     	; 0xe86 <__ultoa_invert+0x86>
 e94:	00 97       	sbiw	r24, 0x00	; 0
 e96:	61 05       	cpc	r22, r1
 e98:	71 05       	cpc	r23, r1
 e9a:	08 95       	ret
 e9c:	9b 01       	movw	r18, r22
 e9e:	ac 01       	movw	r20, r24
 ea0:	0a 2e       	mov	r0, r26
 ea2:	06 94       	lsr	r0
 ea4:	57 95       	ror	r21
 ea6:	47 95       	ror	r20
 ea8:	37 95       	ror	r19
 eaa:	27 95       	ror	r18
 eac:	ba 95       	dec	r27
 eae:	c9 f7       	brne	.-14     	; 0xea2 <__ultoa_invert+0xa2>
 eb0:	62 0f       	add	r22, r18
 eb2:	73 1f       	adc	r23, r19
 eb4:	84 1f       	adc	r24, r20
 eb6:	95 1f       	adc	r25, r21
 eb8:	a0 1d       	adc	r26, r0
 eba:	08 95       	ret

00000ebc <__prologue_saves__>:
 ebc:	2f 92       	push	r2
 ebe:	3f 92       	push	r3
 ec0:	4f 92       	push	r4
 ec2:	5f 92       	push	r5
 ec4:	6f 92       	push	r6
 ec6:	7f 92       	push	r7
 ec8:	8f 92       	push	r8
 eca:	9f 92       	push	r9
 ecc:	af 92       	push	r10
 ece:	bf 92       	push	r11
 ed0:	cf 92       	push	r12
 ed2:	df 92       	push	r13
 ed4:	ef 92       	push	r14
 ed6:	ff 92       	push	r15
 ed8:	0f 93       	push	r16
 eda:	1f 93       	push	r17
 edc:	cf 93       	push	r28
 ede:	df 93       	push	r29
 ee0:	cd b7       	in	r28, 0x3d	; 61
 ee2:	de b7       	in	r29, 0x3e	; 62
 ee4:	ca 1b       	sub	r28, r26
 ee6:	db 0b       	sbc	r29, r27
 ee8:	0f b6       	in	r0, 0x3f	; 63
 eea:	f8 94       	cli
 eec:	de bf       	out	0x3e, r29	; 62
 eee:	0f be       	out	0x3f, r0	; 63
 ef0:	cd bf       	out	0x3d, r28	; 61
 ef2:	09 94       	ijmp

00000ef4 <__epilogue_restores__>:
 ef4:	2a 88       	ldd	r2, Y+18	; 0x12
 ef6:	39 88       	ldd	r3, Y+17	; 0x11
 ef8:	48 88       	ldd	r4, Y+16	; 0x10
 efa:	5f 84       	ldd	r5, Y+15	; 0x0f
 efc:	6e 84       	ldd	r6, Y+14	; 0x0e
 efe:	7d 84       	ldd	r7, Y+13	; 0x0d
 f00:	8c 84       	ldd	r8, Y+12	; 0x0c
 f02:	9b 84       	ldd	r9, Y+11	; 0x0b
 f04:	aa 84       	ldd	r10, Y+10	; 0x0a
 f06:	b9 84       	ldd	r11, Y+9	; 0x09
 f08:	c8 84       	ldd	r12, Y+8	; 0x08
 f0a:	df 80       	ldd	r13, Y+7	; 0x07
 f0c:	ee 80       	ldd	r14, Y+6	; 0x06
 f0e:	fd 80       	ldd	r15, Y+5	; 0x05
 f10:	0c 81       	ldd	r16, Y+4	; 0x04
 f12:	1b 81       	ldd	r17, Y+3	; 0x03
 f14:	aa 81       	ldd	r26, Y+2	; 0x02
 f16:	b9 81       	ldd	r27, Y+1	; 0x01
 f18:	ce 0f       	add	r28, r30
 f1a:	d1 1d       	adc	r29, r1
 f1c:	0f b6       	in	r0, 0x3f	; 63
 f1e:	f8 94       	cli
 f20:	de bf       	out	0x3e, r29	; 62
 f22:	0f be       	out	0x3f, r0	; 63
 f24:	cd bf       	out	0x3d, r28	; 61
 f26:	ed 01       	movw	r28, r26
 f28:	08 95       	ret

00000f2a <_exit>:
 f2a:	f8 94       	cli

00000f2c <__stop_program>:
 f2c:	ff cf       	rjmp	.-2      	; 0xf2c <__stop_program>

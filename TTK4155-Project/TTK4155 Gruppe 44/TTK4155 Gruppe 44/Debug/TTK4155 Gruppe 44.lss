
TTK4155 Gruppe 44.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003c  00800100  000011ae  00001242  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011ae  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080013c  0080013c  0000127e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000127e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  000012da  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000040e  00000000  00000000  0000134a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000267  00000000  00000000  00001758  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000035e  00000000  00000000  000019bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000dc  00000000  00000000  00001d20  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000020a  00000000  00000000  00001dfc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000014c  00000000  00000000  00002006  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00002152  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
       4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
       8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
       c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	11 e0       	ldi	r17, 0x01	; 1
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	ee ea       	ldi	r30, 0xAE	; 174
      84:	f1 e1       	ldi	r31, 0x11	; 17
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	ac 33       	cpi	r26, 0x3C	; 60
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	21 e0       	ldi	r18, 0x01	; 1
      94:	ac e3       	ldi	r26, 0x3C	; 60
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	a6 34       	cpi	r26, 0x46	; 70
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	0e 94 91 01 	call	0x322	; 0x322 <main>
      a6:	0c 94 d5 08 	jmp	0x11aa	; 0x11aa <_exit>

000000aa <__bad_interrupt>:
      aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <ADC_read>:
	adcConversionRunning = 0;
}*/


uint8_t ADC_read(char channel)
{
      ae:	cf 93       	push	r28
      b0:	df 93       	push	r29
      b2:	cd b7       	in	r28, 0x3d	; 61
      b4:	de b7       	in	r29, 0x3e	; 62
      b6:	a3 97       	sbiw	r28, 0x23	; 35
      b8:	0f b6       	in	r0, 0x3f	; 63
      ba:	f8 94       	cli
      bc:	de bf       	out	0x3e, r29	; 62
      be:	0f be       	out	0x3f, r0	; 63
      c0:	cd bf       	out	0x3d, r28	; 61
      c2:	8b a3       	std	Y+35, r24	; 0x23
	//adcConversionRunning = 1;
	volatile char *ext_adc = (char *) 0x1200; 
      c4:	80 e0       	ldi	r24, 0x00	; 0
      c6:	92 e1       	ldi	r25, 0x12	; 18
      c8:	9a 83       	std	Y+2, r25	; 0x02
      ca:	89 83       	std	Y+1, r24	; 0x01
	if (channel == 'x')
      cc:	8b a1       	ldd	r24, Y+35	; 0x23
      ce:	88 37       	cpi	r24, 0x78	; 120
      d0:	31 f4       	brne	.+12     	; 0xde <ADC_read+0x30>
	{
		*ext_adc = 0b0100;
      d2:	89 81       	ldd	r24, Y+1	; 0x01
      d4:	9a 81       	ldd	r25, Y+2	; 0x02
      d6:	24 e0       	ldi	r18, 0x04	; 4
      d8:	fc 01       	movw	r30, r24
      da:	20 83       	st	Z, r18
      dc:	1b c0       	rjmp	.+54     	; 0x114 <ADC_read+0x66>
	}
	
	else if (channel == 'y')
      de:	8b a1       	ldd	r24, Y+35	; 0x23
      e0:	89 37       	cpi	r24, 0x79	; 121
      e2:	31 f4       	brne	.+12     	; 0xf0 <ADC_read+0x42>
	{
		*ext_adc = 0b0101;
      e4:	89 81       	ldd	r24, Y+1	; 0x01
      e6:	9a 81       	ldd	r25, Y+2	; 0x02
      e8:	25 e0       	ldi	r18, 0x05	; 5
      ea:	fc 01       	movw	r30, r24
      ec:	20 83       	st	Z, r18
      ee:	12 c0       	rjmp	.+36     	; 0x114 <ADC_read+0x66>
	}
	
	else if (channel == 'l')
      f0:	8b a1       	ldd	r24, Y+35	; 0x23
      f2:	8c 36       	cpi	r24, 0x6C	; 108
      f4:	31 f4       	brne	.+12     	; 0x102 <ADC_read+0x54>
	{
		*ext_adc = 0b0110;
      f6:	89 81       	ldd	r24, Y+1	; 0x01
      f8:	9a 81       	ldd	r25, Y+2	; 0x02
      fa:	26 e0       	ldi	r18, 0x06	; 6
      fc:	fc 01       	movw	r30, r24
      fe:	20 83       	st	Z, r18
     100:	09 c0       	rjmp	.+18     	; 0x114 <ADC_read+0x66>
	}
	
	else if (channel == 'r')
     102:	8b a1       	ldd	r24, Y+35	; 0x23
     104:	82 37       	cpi	r24, 0x72	; 114
     106:	31 f4       	brne	.+12     	; 0x114 <ADC_read+0x66>
	{
		*ext_adc = 0b0111;
     108:	89 81       	ldd	r24, Y+1	; 0x01
     10a:	9a 81       	ldd	r25, Y+2	; 0x02
     10c:	27 e0       	ldi	r18, 0x07	; 7
     10e:	fc 01       	movw	r30, r24
     110:	20 83       	st	Z, r18
	}
	
	while(test_bit(PORTE, PE0));
     112:	00 c0       	rjmp	.+0      	; 0x114 <ADC_read+0x66>
     114:	00 00       	nop
     116:	87 e2       	ldi	r24, 0x27	; 39
     118:	90 e0       	ldi	r25, 0x00	; 0
     11a:	fc 01       	movw	r30, r24
     11c:	80 81       	ld	r24, Z
     11e:	88 2f       	mov	r24, r24
     120:	90 e0       	ldi	r25, 0x00	; 0
     122:	81 70       	andi	r24, 0x01	; 1
     124:	99 27       	eor	r25, r25
     126:	00 97       	sbiw	r24, 0x00	; 0
     128:	b1 f7       	brne	.-20     	; 0x116 <ADC_read+0x68>
     12a:	80 e0       	ldi	r24, 0x00	; 0
     12c:	90 e0       	ldi	r25, 0x00	; 0
     12e:	a0 ea       	ldi	r26, 0xA0	; 160
     130:	b0 e4       	ldi	r27, 0x40	; 64
     132:	8b 83       	std	Y+3, r24	; 0x03
     134:	9c 83       	std	Y+4, r25	; 0x04
     136:	ad 83       	std	Y+5, r26	; 0x05
     138:	be 83       	std	Y+6, r27	; 0x06
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ; 
	__tmp = ((F_CPU) / 3e6) * __us;
     13a:	27 e1       	ldi	r18, 0x17	; 23
     13c:	37 eb       	ldi	r19, 0xB7	; 183
     13e:	41 ed       	ldi	r20, 0xD1	; 209
     140:	5f e3       	ldi	r21, 0x3F	; 63
     142:	6b 81       	ldd	r22, Y+3	; 0x03
     144:	7c 81       	ldd	r23, Y+4	; 0x04
     146:	8d 81       	ldd	r24, Y+5	; 0x05
     148:	9e 81       	ldd	r25, Y+6	; 0x06
     14a:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <__mulsf3>
     14e:	dc 01       	movw	r26, r24
     150:	cb 01       	movw	r24, r22
     152:	8f 83       	std	Y+7, r24	; 0x07
     154:	98 87       	std	Y+8, r25	; 0x08
     156:	a9 87       	std	Y+9, r26	; 0x09
     158:	ba 87       	std	Y+10, r27	; 0x0a
	__tmp2 = ((F_CPU) / 4e6) * __us;
     15a:	22 e5       	ldi	r18, 0x52	; 82
     15c:	39 e4       	ldi	r19, 0x49	; 73
     15e:	4d e9       	ldi	r20, 0x9D	; 157
     160:	5f e3       	ldi	r21, 0x3F	; 63
     162:	6b 81       	ldd	r22, Y+3	; 0x03
     164:	7c 81       	ldd	r23, Y+4	; 0x04
     166:	8d 81       	ldd	r24, Y+5	; 0x05
     168:	9e 81       	ldd	r25, Y+6	; 0x06
     16a:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <__mulsf3>
     16e:	dc 01       	movw	r26, r24
     170:	cb 01       	movw	r24, r22
     172:	8b 87       	std	Y+11, r24	; 0x0b
     174:	9c 87       	std	Y+12, r25	; 0x0c
     176:	ad 87       	std	Y+13, r26	; 0x0d
     178:	be 87       	std	Y+14, r27	; 0x0e
	if (__tmp < 1.0)
     17a:	20 e0       	ldi	r18, 0x00	; 0
     17c:	30 e0       	ldi	r19, 0x00	; 0
     17e:	40 e8       	ldi	r20, 0x80	; 128
     180:	5f e3       	ldi	r21, 0x3F	; 63
     182:	6f 81       	ldd	r22, Y+7	; 0x07
     184:	78 85       	ldd	r23, Y+8	; 0x08
     186:	89 85       	ldd	r24, Y+9	; 0x09
     188:	9a 85       	ldd	r25, Y+10	; 0x0a
     18a:	0e 94 c1 02 	call	0x582	; 0x582 <__cmpsf2>
     18e:	88 23       	and	r24, r24
     190:	1c f4       	brge	.+6      	; 0x198 <ADC_read+0xea>
		__ticks = 1;
     192:	81 e0       	ldi	r24, 0x01	; 1
     194:	8f 87       	std	Y+15, r24	; 0x0f
     196:	b2 c0       	rjmp	.+356    	; 0x2fc <ADC_read+0x24e>
	else if (__tmp2 > 65535)
     198:	20 e0       	ldi	r18, 0x00	; 0
     19a:	3f ef       	ldi	r19, 0xFF	; 255
     19c:	4f e7       	ldi	r20, 0x7F	; 127
     19e:	57 e4       	ldi	r21, 0x47	; 71
     1a0:	6b 85       	ldd	r22, Y+11	; 0x0b
     1a2:	7c 85       	ldd	r23, Y+12	; 0x0c
     1a4:	8d 85       	ldd	r24, Y+13	; 0x0d
     1a6:	9e 85       	ldd	r25, Y+14	; 0x0e
     1a8:	0e 94 ce 03 	call	0x79c	; 0x79c <__gesf2>
     1ac:	18 16       	cp	r1, r24
     1ae:	0c f0       	brlt	.+2      	; 0x1b2 <ADC_read+0x104>
     1b0:	7b c0       	rjmp	.+246    	; 0x2a8 <ADC_read+0x1fa>
	{
		_delay_ms(__us / 1000.0);
     1b2:	20 e0       	ldi	r18, 0x00	; 0
     1b4:	30 e0       	ldi	r19, 0x00	; 0
     1b6:	4a e7       	ldi	r20, 0x7A	; 122
     1b8:	54 e4       	ldi	r21, 0x44	; 68
     1ba:	6b 81       	ldd	r22, Y+3	; 0x03
     1bc:	7c 81       	ldd	r23, Y+4	; 0x04
     1be:	8d 81       	ldd	r24, Y+5	; 0x05
     1c0:	9e 81       	ldd	r25, Y+6	; 0x06
     1c2:	0e 94 c5 02 	call	0x58a	; 0x58a <__divsf3>
     1c6:	dc 01       	movw	r26, r24
     1c8:	cb 01       	movw	r24, r22
     1ca:	88 8b       	std	Y+16, r24	; 0x10
     1cc:	99 8b       	std	Y+17, r25	; 0x11
     1ce:	aa 8b       	std	Y+18, r26	; 0x12
     1d0:	bb 8b       	std	Y+19, r27	; 0x13

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     1d2:	2a e9       	ldi	r18, 0x9A	; 154
     1d4:	39 e9       	ldi	r19, 0x99	; 153
     1d6:	49 e9       	ldi	r20, 0x99	; 153
     1d8:	54 e4       	ldi	r21, 0x44	; 68
     1da:	68 89       	ldd	r22, Y+16	; 0x10
     1dc:	79 89       	ldd	r23, Y+17	; 0x11
     1de:	8a 89       	ldd	r24, Y+18	; 0x12
     1e0:	9b 89       	ldd	r25, Y+19	; 0x13
     1e2:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <__mulsf3>
     1e6:	dc 01       	movw	r26, r24
     1e8:	cb 01       	movw	r24, r22
     1ea:	8c 8b       	std	Y+20, r24	; 0x14
     1ec:	9d 8b       	std	Y+21, r25	; 0x15
     1ee:	ae 8b       	std	Y+22, r26	; 0x16
     1f0:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
     1f2:	20 e0       	ldi	r18, 0x00	; 0
     1f4:	30 e0       	ldi	r19, 0x00	; 0
     1f6:	40 e8       	ldi	r20, 0x80	; 128
     1f8:	5f e3       	ldi	r21, 0x3F	; 63
     1fa:	6c 89       	ldd	r22, Y+20	; 0x14
     1fc:	7d 89       	ldd	r23, Y+21	; 0x15
     1fe:	8e 89       	ldd	r24, Y+22	; 0x16
     200:	9f 89       	ldd	r25, Y+23	; 0x17
     202:	0e 94 c1 02 	call	0x582	; 0x582 <__cmpsf2>
     206:	88 23       	and	r24, r24
     208:	2c f4       	brge	.+10     	; 0x214 <ADC_read+0x166>
		__ticks = 1;
     20a:	81 e0       	ldi	r24, 0x01	; 1
     20c:	90 e0       	ldi	r25, 0x00	; 0
     20e:	99 8f       	std	Y+25, r25	; 0x19
     210:	88 8f       	std	Y+24, r24	; 0x18
     212:	3f c0       	rjmp	.+126    	; 0x292 <ADC_read+0x1e4>
	else if (__tmp > 65535)
     214:	20 e0       	ldi	r18, 0x00	; 0
     216:	3f ef       	ldi	r19, 0xFF	; 255
     218:	4f e7       	ldi	r20, 0x7F	; 127
     21a:	57 e4       	ldi	r21, 0x47	; 71
     21c:	6c 89       	ldd	r22, Y+20	; 0x14
     21e:	7d 89       	ldd	r23, Y+21	; 0x15
     220:	8e 89       	ldd	r24, Y+22	; 0x16
     222:	9f 89       	ldd	r25, Y+23	; 0x17
     224:	0e 94 ce 03 	call	0x79c	; 0x79c <__gesf2>
     228:	18 16       	cp	r1, r24
     22a:	4c f5       	brge	.+82     	; 0x27e <ADC_read+0x1d0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     22c:	20 e0       	ldi	r18, 0x00	; 0
     22e:	30 e0       	ldi	r19, 0x00	; 0
     230:	40 e2       	ldi	r20, 0x20	; 32
     232:	51 e4       	ldi	r21, 0x41	; 65
     234:	68 89       	ldd	r22, Y+16	; 0x10
     236:	79 89       	ldd	r23, Y+17	; 0x11
     238:	8a 89       	ldd	r24, Y+18	; 0x12
     23a:	9b 89       	ldd	r25, Y+19	; 0x13
     23c:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <__mulsf3>
     240:	dc 01       	movw	r26, r24
     242:	cb 01       	movw	r24, r22
     244:	bc 01       	movw	r22, r24
     246:	cd 01       	movw	r24, r26
     248:	0e 94 2d 03 	call	0x65a	; 0x65a <__fixunssfsi>
     24c:	dc 01       	movw	r26, r24
     24e:	cb 01       	movw	r24, r22
     250:	99 8f       	std	Y+25, r25	; 0x19
     252:	88 8f       	std	Y+24, r24	; 0x18
     254:	0f c0       	rjmp	.+30     	; 0x274 <ADC_read+0x1c6>
     256:	8a e7       	ldi	r24, 0x7A	; 122
     258:	90 e0       	ldi	r25, 0x00	; 0
     25a:	9b 8f       	std	Y+27, r25	; 0x1b
     25c:	8a 8f       	std	Y+26, r24	; 0x1a
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     25e:	8a 8d       	ldd	r24, Y+26	; 0x1a
     260:	9b 8d       	ldd	r25, Y+27	; 0x1b
     262:	01 97       	sbiw	r24, 0x01	; 1
     264:	f1 f7       	brne	.-4      	; 0x262 <ADC_read+0x1b4>
     266:	9b 8f       	std	Y+27, r25	; 0x1b
     268:	8a 8f       	std	Y+26, r24	; 0x1a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     26a:	88 8d       	ldd	r24, Y+24	; 0x18
     26c:	99 8d       	ldd	r25, Y+25	; 0x19
     26e:	01 97       	sbiw	r24, 0x01	; 1
     270:	99 8f       	std	Y+25, r25	; 0x19
     272:	88 8f       	std	Y+24, r24	; 0x18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     274:	88 8d       	ldd	r24, Y+24	; 0x18
     276:	99 8d       	ldd	r25, Y+25	; 0x19
     278:	00 97       	sbiw	r24, 0x00	; 0
     27a:	69 f7       	brne	.-38     	; 0x256 <ADC_read+0x1a8>
     27c:	3f c0       	rjmp	.+126    	; 0x2fc <ADC_read+0x24e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     27e:	6c 89       	ldd	r22, Y+20	; 0x14
     280:	7d 89       	ldd	r23, Y+21	; 0x15
     282:	8e 89       	ldd	r24, Y+22	; 0x16
     284:	9f 89       	ldd	r25, Y+23	; 0x17
     286:	0e 94 2d 03 	call	0x65a	; 0x65a <__fixunssfsi>
     28a:	dc 01       	movw	r26, r24
     28c:	cb 01       	movw	r24, r22
     28e:	99 8f       	std	Y+25, r25	; 0x19
     290:	88 8f       	std	Y+24, r24	; 0x18
     292:	88 8d       	ldd	r24, Y+24	; 0x18
     294:	99 8d       	ldd	r25, Y+25	; 0x19
     296:	9d 8f       	std	Y+29, r25	; 0x1d
     298:	8c 8f       	std	Y+28, r24	; 0x1c
     29a:	8c 8d       	ldd	r24, Y+28	; 0x1c
     29c:	9d 8d       	ldd	r25, Y+29	; 0x1d
     29e:	01 97       	sbiw	r24, 0x01	; 1
     2a0:	f1 f7       	brne	.-4      	; 0x29e <ADC_read+0x1f0>
     2a2:	9d 8f       	std	Y+29, r25	; 0x1d
     2a4:	8c 8f       	std	Y+28, r24	; 0x1c
     2a6:	2a c0       	rjmp	.+84     	; 0x2fc <ADC_read+0x24e>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
     2a8:	20 e0       	ldi	r18, 0x00	; 0
     2aa:	30 e0       	ldi	r19, 0x00	; 0
     2ac:	4f e7       	ldi	r20, 0x7F	; 127
     2ae:	53 e4       	ldi	r21, 0x43	; 67
     2b0:	6f 81       	ldd	r22, Y+7	; 0x07
     2b2:	78 85       	ldd	r23, Y+8	; 0x08
     2b4:	89 85       	ldd	r24, Y+9	; 0x09
     2b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     2b8:	0e 94 ce 03 	call	0x79c	; 0x79c <__gesf2>
     2bc:	18 16       	cp	r1, r24
     2be:	ac f4       	brge	.+42     	; 0x2ea <ADC_read+0x23c>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     2c0:	6b 85       	ldd	r22, Y+11	; 0x0b
     2c2:	7c 85       	ldd	r23, Y+12	; 0x0c
     2c4:	8d 85       	ldd	r24, Y+13	; 0x0d
     2c6:	9e 85       	ldd	r25, Y+14	; 0x0e
     2c8:	0e 94 2d 03 	call	0x65a	; 0x65a <__fixunssfsi>
     2cc:	dc 01       	movw	r26, r24
     2ce:	cb 01       	movw	r24, r22
     2d0:	9f 8f       	std	Y+31, r25	; 0x1f
     2d2:	8e 8f       	std	Y+30, r24	; 0x1e
     2d4:	8e 8d       	ldd	r24, Y+30	; 0x1e
     2d6:	9f 8d       	ldd	r25, Y+31	; 0x1f
     2d8:	99 a3       	std	Y+33, r25	; 0x21
     2da:	88 a3       	std	Y+32, r24	; 0x20
     2dc:	88 a1       	ldd	r24, Y+32	; 0x20
     2de:	99 a1       	ldd	r25, Y+33	; 0x21
     2e0:	01 97       	sbiw	r24, 0x01	; 1
     2e2:	f1 f7       	brne	.-4      	; 0x2e0 <ADC_read+0x232>
     2e4:	99 a3       	std	Y+33, r25	; 0x21
     2e6:	88 a3       	std	Y+32, r24	; 0x20
     2e8:	0f c0       	rjmp	.+30     	; 0x308 <ADC_read+0x25a>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     2ea:	6f 81       	ldd	r22, Y+7	; 0x07
     2ec:	78 85       	ldd	r23, Y+8	; 0x08
     2ee:	89 85       	ldd	r24, Y+9	; 0x09
     2f0:	9a 85       	ldd	r25, Y+10	; 0x0a
     2f2:	0e 94 2d 03 	call	0x65a	; 0x65a <__fixunssfsi>
     2f6:	dc 01       	movw	r26, r24
     2f8:	cb 01       	movw	r24, r22
     2fa:	8f 87       	std	Y+15, r24	; 0x0f
     2fc:	8f 85       	ldd	r24, Y+15	; 0x0f
     2fe:	8a a3       	std	Y+34, r24	; 0x22
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     300:	8a a1       	ldd	r24, Y+34	; 0x22
     302:	8a 95       	dec	r24
     304:	f1 f7       	brne	.-4      	; 0x302 <ADC_read+0x254>
     306:	8a a3       	std	Y+34, r24	; 0x22
	_delay_us(5);
	return (uint8_t) *ext_adc;
     308:	89 81       	ldd	r24, Y+1	; 0x01
     30a:	9a 81       	ldd	r25, Y+2	; 0x02
     30c:	fc 01       	movw	r30, r24
     30e:	80 81       	ld	r24, Z
	//_delay_us(100);
	//*ext_adc = 0;
     310:	a3 96       	adiw	r28, 0x23	; 35
     312:	0f b6       	in	r0, 0x3f	; 63
     314:	f8 94       	cli
     316:	de bf       	out	0x3e, r29	; 62
     318:	0f be       	out	0x3f, r0	; 63
     31a:	cd bf       	out	0x3d, r28	; 61
     31c:	df 91       	pop	r29
     31e:	cf 91       	pop	r28
     320:	08 95       	ret

00000322 <main>:
#include "adc.h"



int main(void)
{
     322:	cf 93       	push	r28
     324:	df 93       	push	r29
     326:	cd b7       	in	r28, 0x3d	; 61
     328:	de b7       	in	r29, 0x3e	; 62
	//1 output, 0 input 
	uart_init(9600);
     32a:	80 e8       	ldi	r24, 0x80	; 128
     32c:	95 e2       	ldi	r25, 0x25	; 37
     32e:	0e 94 67 02 	call	0x4ce	; 0x4ce <uart_init>
	
	//enable external memory
	MCUCR |= (1<<SRE);
     332:	85 e5       	ldi	r24, 0x55	; 85
     334:	90 e0       	ldi	r25, 0x00	; 0
     336:	25 e5       	ldi	r18, 0x55	; 85
     338:	30 e0       	ldi	r19, 0x00	; 0
     33a:	f9 01       	movw	r30, r18
     33c:	20 81       	ld	r18, Z
     33e:	20 68       	ori	r18, 0x80	; 128
     340:	fc 01       	movw	r30, r24
     342:	20 83       	st	Z, r18
	SFIOR |= (1<<XMM2);
     344:	80 e5       	ldi	r24, 0x50	; 80
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	20 e5       	ldi	r18, 0x50	; 80
     34a:	30 e0       	ldi	r19, 0x00	; 0
     34c:	f9 01       	movw	r30, r18
     34e:	20 81       	ld	r18, Z
     350:	20 62       	ori	r18, 0x20	; 32
     352:	fc 01       	movw	r30, r24
     354:	20 83       	st	Z, r18
	//set interrupt bit to input
	clear_bit(DDRE, PE0);
     356:	86 e2       	ldi	r24, 0x26	; 38
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	26 e2       	ldi	r18, 0x26	; 38
     35c:	30 e0       	ldi	r19, 0x00	; 0
     35e:	f9 01       	movw	r30, r18
     360:	20 81       	ld	r18, Z
     362:	2e 7f       	andi	r18, 0xFE	; 254
     364:	fc 01       	movw	r30, r24
     366:	20 83       	st	Z, r18
	while (1)
	{
		printf("x = ");
     368:	86 e0       	ldi	r24, 0x06	; 6
     36a:	91 e0       	ldi	r25, 0x01	; 1
     36c:	89 2f       	mov	r24, r25
     36e:	8f 93       	push	r24
     370:	86 e0       	ldi	r24, 0x06	; 6
     372:	91 e0       	ldi	r25, 0x01	; 1
     374:	8f 93       	push	r24
     376:	0e 94 c1 04 	call	0x982	; 0x982 <printf>
     37a:	0f 90       	pop	r0
     37c:	0f 90       	pop	r0
		printf("%d", ADC_read('x'));
     37e:	88 e7       	ldi	r24, 0x78	; 120
     380:	0e 94 57 00 	call	0xae	; 0xae <ADC_read>
     384:	88 2f       	mov	r24, r24
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	29 2f       	mov	r18, r25
     38a:	2f 93       	push	r18
     38c:	8f 93       	push	r24
     38e:	8b e0       	ldi	r24, 0x0B	; 11
     390:	91 e0       	ldi	r25, 0x01	; 1
     392:	89 2f       	mov	r24, r25
     394:	8f 93       	push	r24
     396:	8b e0       	ldi	r24, 0x0B	; 11
     398:	91 e0       	ldi	r25, 0x01	; 1
     39a:	8f 93       	push	r24
     39c:	0e 94 c1 04 	call	0x982	; 0x982 <printf>
     3a0:	0f 90       	pop	r0
     3a2:	0f 90       	pop	r0
     3a4:	0f 90       	pop	r0
     3a6:	0f 90       	pop	r0
		
		printf(",  y = ");
     3a8:	8e e0       	ldi	r24, 0x0E	; 14
     3aa:	91 e0       	ldi	r25, 0x01	; 1
     3ac:	89 2f       	mov	r24, r25
     3ae:	8f 93       	push	r24
     3b0:	8e e0       	ldi	r24, 0x0E	; 14
     3b2:	91 e0       	ldi	r25, 0x01	; 1
     3b4:	8f 93       	push	r24
     3b6:	0e 94 c1 04 	call	0x982	; 0x982 <printf>
     3ba:	0f 90       	pop	r0
     3bc:	0f 90       	pop	r0
		printf("%d", ADC_read('y'));
     3be:	89 e7       	ldi	r24, 0x79	; 121
     3c0:	0e 94 57 00 	call	0xae	; 0xae <ADC_read>
     3c4:	88 2f       	mov	r24, r24
     3c6:	90 e0       	ldi	r25, 0x00	; 0
     3c8:	29 2f       	mov	r18, r25
     3ca:	2f 93       	push	r18
     3cc:	8f 93       	push	r24
     3ce:	8b e0       	ldi	r24, 0x0B	; 11
     3d0:	91 e0       	ldi	r25, 0x01	; 1
     3d2:	89 2f       	mov	r24, r25
     3d4:	8f 93       	push	r24
     3d6:	8b e0       	ldi	r24, 0x0B	; 11
     3d8:	91 e0       	ldi	r25, 0x01	; 1
     3da:	8f 93       	push	r24
     3dc:	0e 94 c1 04 	call	0x982	; 0x982 <printf>
     3e0:	0f 90       	pop	r0
     3e2:	0f 90       	pop	r0
     3e4:	0f 90       	pop	r0
     3e6:	0f 90       	pop	r0
		
		printf(",  Left slider = ");
     3e8:	86 e1       	ldi	r24, 0x16	; 22
     3ea:	91 e0       	ldi	r25, 0x01	; 1
     3ec:	89 2f       	mov	r24, r25
     3ee:	8f 93       	push	r24
     3f0:	86 e1       	ldi	r24, 0x16	; 22
     3f2:	91 e0       	ldi	r25, 0x01	; 1
     3f4:	8f 93       	push	r24
     3f6:	0e 94 c1 04 	call	0x982	; 0x982 <printf>
     3fa:	0f 90       	pop	r0
     3fc:	0f 90       	pop	r0
		printf("%d",ADC_read('l'));
     3fe:	8c e6       	ldi	r24, 0x6C	; 108
     400:	0e 94 57 00 	call	0xae	; 0xae <ADC_read>
     404:	88 2f       	mov	r24, r24
     406:	90 e0       	ldi	r25, 0x00	; 0
     408:	29 2f       	mov	r18, r25
     40a:	2f 93       	push	r18
     40c:	8f 93       	push	r24
     40e:	8b e0       	ldi	r24, 0x0B	; 11
     410:	91 e0       	ldi	r25, 0x01	; 1
     412:	89 2f       	mov	r24, r25
     414:	8f 93       	push	r24
     416:	8b e0       	ldi	r24, 0x0B	; 11
     418:	91 e0       	ldi	r25, 0x01	; 1
     41a:	8f 93       	push	r24
     41c:	0e 94 c1 04 	call	0x982	; 0x982 <printf>
     420:	0f 90       	pop	r0
     422:	0f 90       	pop	r0
     424:	0f 90       	pop	r0
     426:	0f 90       	pop	r0

		printf(",  Right slider = ");
     428:	88 e2       	ldi	r24, 0x28	; 40
     42a:	91 e0       	ldi	r25, 0x01	; 1
     42c:	89 2f       	mov	r24, r25
     42e:	8f 93       	push	r24
     430:	88 e2       	ldi	r24, 0x28	; 40
     432:	91 e0       	ldi	r25, 0x01	; 1
     434:	8f 93       	push	r24
     436:	0e 94 c1 04 	call	0x982	; 0x982 <printf>
     43a:	0f 90       	pop	r0
     43c:	0f 90       	pop	r0
		printf("%d", ADC_read('r'));
     43e:	82 e7       	ldi	r24, 0x72	; 114
     440:	0e 94 57 00 	call	0xae	; 0xae <ADC_read>
     444:	88 2f       	mov	r24, r24
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	29 2f       	mov	r18, r25
     44a:	2f 93       	push	r18
     44c:	8f 93       	push	r24
     44e:	8b e0       	ldi	r24, 0x0B	; 11
     450:	91 e0       	ldi	r25, 0x01	; 1
     452:	89 2f       	mov	r24, r25
     454:	8f 93       	push	r24
     456:	8b e0       	ldi	r24, 0x0B	; 11
     458:	91 e0       	ldi	r25, 0x01	; 1
     45a:	8f 93       	push	r24
     45c:	0e 94 c1 04 	call	0x982	; 0x982 <printf>
     460:	0f 90       	pop	r0
     462:	0f 90       	pop	r0
     464:	0f 90       	pop	r0
     466:	0f 90       	pop	r0
		
		printf("\n");
     468:	8a e0       	ldi	r24, 0x0A	; 10
     46a:	90 e0       	ldi	r25, 0x00	; 0
     46c:	0e 94 d5 04 	call	0x9aa	; 0x9aa <putchar>
	}
     470:	7b cf       	rjmp	.-266    	; 0x368 <main+0x46>

00000472 <uart_putchar>:
#include <avr/io.h>
#include <stdio.h>

int uart_putchar(char c){
     472:	cf 93       	push	r28
     474:	df 93       	push	r29
     476:	1f 92       	push	r1
     478:	cd b7       	in	r28, 0x3d	; 61
     47a:	de b7       	in	r29, 0x3e	; 62
     47c:	89 83       	std	Y+1, r24	; 0x01
	//Wait for empty transmit buffer
	while (!( UCSR0A & (1<<UDRE0)));
     47e:	00 00       	nop
     480:	8b e2       	ldi	r24, 0x2B	; 43
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	fc 01       	movw	r30, r24
     486:	80 81       	ld	r24, Z
     488:	88 2f       	mov	r24, r24
     48a:	90 e0       	ldi	r25, 0x00	; 0
     48c:	80 72       	andi	r24, 0x20	; 32
     48e:	99 27       	eor	r25, r25
     490:	00 97       	sbiw	r24, 0x00	; 0
     492:	b1 f3       	breq	.-20     	; 0x480 <uart_putchar+0xe>
	//Put data into buffer, sends the data
	UDR0 = c;
     494:	8c e2       	ldi	r24, 0x2C	; 44
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	29 81       	ldd	r18, Y+1	; 0x01
     49a:	fc 01       	movw	r30, r24
     49c:	20 83       	st	Z, r18
	return 1;
     49e:	81 e0       	ldi	r24, 0x01	; 1
     4a0:	90 e0       	ldi	r25, 0x00	; 0
}
     4a2:	0f 90       	pop	r0
     4a4:	df 91       	pop	r29
     4a6:	cf 91       	pop	r28
     4a8:	08 95       	ret

000004aa <uart_getchar>:

unsigned char uart_getchar(){
     4aa:	cf 93       	push	r28
     4ac:	df 93       	push	r29
     4ae:	cd b7       	in	r28, 0x3d	; 61
     4b0:	de b7       	in	r29, 0x3e	; 62
	while (!( UCSR0A & (1<<RXC0)));
     4b2:	00 00       	nop
     4b4:	8b e2       	ldi	r24, 0x2B	; 43
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	fc 01       	movw	r30, r24
     4ba:	80 81       	ld	r24, Z
     4bc:	88 23       	and	r24, r24
     4be:	d4 f7       	brge	.-12     	; 0x4b4 <uart_getchar+0xa>
	return UDR0;
     4c0:	8c e2       	ldi	r24, 0x2C	; 44
     4c2:	90 e0       	ldi	r25, 0x00	; 0
     4c4:	fc 01       	movw	r30, r24
     4c6:	80 81       	ld	r24, Z
}
     4c8:	df 91       	pop	r29
     4ca:	cf 91       	pop	r28
     4cc:	08 95       	ret

000004ce <uart_init>:



int uart_init(int baudRate){
     4ce:	cf 93       	push	r28
     4d0:	df 93       	push	r29
     4d2:	cd b7       	in	r28, 0x3d	; 61
     4d4:	de b7       	in	r29, 0x3e	; 62
     4d6:	28 97       	sbiw	r28, 0x08	; 8
     4d8:	0f b6       	in	r0, 0x3f	; 63
     4da:	f8 94       	cli
     4dc:	de bf       	out	0x3e, r29	; 62
     4de:	0f be       	out	0x3f, r0	; 63
     4e0:	cd bf       	out	0x3d, r28	; 61
     4e2:	9c 83       	std	Y+4, r25	; 0x04
     4e4:	8b 83       	std	Y+3, r24	; 0x03
	int UBRR = ((long)4915200/((long)16*baudRate) - 1);
     4e6:	8b 81       	ldd	r24, Y+3	; 0x03
     4e8:	9c 81       	ldd	r25, Y+4	; 0x04
     4ea:	aa 27       	eor	r26, r26
     4ec:	97 fd       	sbrc	r25, 7
     4ee:	a0 95       	com	r26
     4f0:	ba 2f       	mov	r27, r26
     4f2:	88 0f       	add	r24, r24
     4f4:	99 1f       	adc	r25, r25
     4f6:	aa 1f       	adc	r26, r26
     4f8:	bb 1f       	adc	r27, r27
     4fa:	88 0f       	add	r24, r24
     4fc:	99 1f       	adc	r25, r25
     4fe:	aa 1f       	adc	r26, r26
     500:	bb 1f       	adc	r27, r27
     502:	88 0f       	add	r24, r24
     504:	99 1f       	adc	r25, r25
     506:	aa 1f       	adc	r26, r26
     508:	bb 1f       	adc	r27, r27
     50a:	88 0f       	add	r24, r24
     50c:	99 1f       	adc	r25, r25
     50e:	aa 1f       	adc	r26, r26
     510:	bb 1f       	adc	r27, r27
     512:	9c 01       	movw	r18, r24
     514:	ad 01       	movw	r20, r26
     516:	80 e0       	ldi	r24, 0x00	; 0
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	ab e4       	ldi	r26, 0x4B	; 75
     51c:	b0 e0       	ldi	r27, 0x00	; 0
     51e:	bc 01       	movw	r22, r24
     520:	cd 01       	movw	r24, r26
     522:	0e 94 35 04 	call	0x86a	; 0x86a <__divmodsi4>
     526:	da 01       	movw	r26, r20
     528:	c9 01       	movw	r24, r18
     52a:	01 97       	sbiw	r24, 0x01	; 1
     52c:	9a 83       	std	Y+2, r25	; 0x02
     52e:	89 83       	std	Y+1, r24	; 0x01
	//Enable printf
	fdevopen(uart_putchar, uart_getchar);
     530:	65 e5       	ldi	r22, 0x55	; 85
     532:	72 e0       	ldi	r23, 0x02	; 2
     534:	89 e3       	ldi	r24, 0x39	; 57
     536:	92 e0       	ldi	r25, 0x02	; 2
     538:	0e 94 76 04 	call	0x8ec	; 0x8ec <fdevopen>
	//Setting
	UBRR0L = UBRR;
     53c:	89 e2       	ldi	r24, 0x29	; 41
     53e:	90 e0       	ldi	r25, 0x00	; 0
     540:	29 81       	ldd	r18, Y+1	; 0x01
     542:	fc 01       	movw	r30, r24
     544:	20 83       	st	Z, r18
    UBRR0H = (UBRR>>8);
     546:	80 e4       	ldi	r24, 0x40	; 64
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	29 81       	ldd	r18, Y+1	; 0x01
     54c:	3a 81       	ldd	r19, Y+2	; 0x02
     54e:	23 2f       	mov	r18, r19
     550:	33 0f       	add	r19, r19
     552:	33 0b       	sbc	r19, r19
     554:	fc 01       	movw	r30, r24
     556:	20 83       	st	Z, r18
    //Enable receiver and transmitter 
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     558:	8a e2       	ldi	r24, 0x2A	; 42
     55a:	90 e0       	ldi	r25, 0x00	; 0
     55c:	28 e1       	ldi	r18, 0x18	; 24
     55e:	fc 01       	movw	r30, r24
     560:	20 83       	st	Z, r18
    //Set frame format: 8data, 2stop bit  
    UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
     562:	80 e4       	ldi	r24, 0x40	; 64
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	2e e8       	ldi	r18, 0x8E	; 142
     568:	fc 01       	movw	r30, r24
     56a:	20 83       	st	Z, r18
    return 1;
     56c:	81 e0       	ldi	r24, 0x01	; 1
     56e:	90 e0       	ldi	r25, 0x00	; 0
}
     570:	28 96       	adiw	r28, 0x08	; 8
     572:	0f b6       	in	r0, 0x3f	; 63
     574:	f8 94       	cli
     576:	de bf       	out	0x3e, r29	; 62
     578:	0f be       	out	0x3f, r0	; 63
     57a:	cd bf       	out	0x3d, r28	; 61
     57c:	df 91       	pop	r29
     57e:	cf 91       	pop	r28
     580:	08 95       	ret

00000582 <__cmpsf2>:
     582:	97 d0       	rcall	.+302    	; 0x6b2 <__fp_cmp>
     584:	08 f4       	brcc	.+2      	; 0x588 <__cmpsf2+0x6>
     586:	81 e0       	ldi	r24, 0x01	; 1
     588:	08 95       	ret

0000058a <__divsf3>:
     58a:	0c d0       	rcall	.+24     	; 0x5a4 <__divsf3x>
     58c:	cd c0       	rjmp	.+410    	; 0x728 <__fp_round>
     58e:	c5 d0       	rcall	.+394    	; 0x71a <__fp_pscB>
     590:	40 f0       	brcs	.+16     	; 0x5a2 <__divsf3+0x18>
     592:	bc d0       	rcall	.+376    	; 0x70c <__fp_pscA>
     594:	30 f0       	brcs	.+12     	; 0x5a2 <__divsf3+0x18>
     596:	21 f4       	brne	.+8      	; 0x5a0 <__divsf3+0x16>
     598:	5f 3f       	cpi	r21, 0xFF	; 255
     59a:	19 f0       	breq	.+6      	; 0x5a2 <__divsf3+0x18>
     59c:	ae c0       	rjmp	.+348    	; 0x6fa <__fp_inf>
     59e:	51 11       	cpse	r21, r1
     5a0:	f7 c0       	rjmp	.+494    	; 0x790 <__fp_szero>
     5a2:	b1 c0       	rjmp	.+354    	; 0x706 <__fp_nan>

000005a4 <__divsf3x>:
     5a4:	d2 d0       	rcall	.+420    	; 0x74a <__fp_split3>
     5a6:	98 f3       	brcs	.-26     	; 0x58e <__divsf3+0x4>

000005a8 <__divsf3_pse>:
     5a8:	99 23       	and	r25, r25
     5aa:	c9 f3       	breq	.-14     	; 0x59e <__divsf3+0x14>
     5ac:	55 23       	and	r21, r21
     5ae:	b1 f3       	breq	.-20     	; 0x59c <__divsf3+0x12>
     5b0:	95 1b       	sub	r25, r21
     5b2:	55 0b       	sbc	r21, r21
     5b4:	bb 27       	eor	r27, r27
     5b6:	aa 27       	eor	r26, r26
     5b8:	62 17       	cp	r22, r18
     5ba:	73 07       	cpc	r23, r19
     5bc:	84 07       	cpc	r24, r20
     5be:	38 f0       	brcs	.+14     	; 0x5ce <__divsf3_pse+0x26>
     5c0:	9f 5f       	subi	r25, 0xFF	; 255
     5c2:	5f 4f       	sbci	r21, 0xFF	; 255
     5c4:	22 0f       	add	r18, r18
     5c6:	33 1f       	adc	r19, r19
     5c8:	44 1f       	adc	r20, r20
     5ca:	aa 1f       	adc	r26, r26
     5cc:	a9 f3       	breq	.-22     	; 0x5b8 <__divsf3_pse+0x10>
     5ce:	33 d0       	rcall	.+102    	; 0x636 <__divsf3_pse+0x8e>
     5d0:	0e 2e       	mov	r0, r30
     5d2:	3a f0       	brmi	.+14     	; 0x5e2 <__divsf3_pse+0x3a>
     5d4:	e0 e8       	ldi	r30, 0x80	; 128
     5d6:	30 d0       	rcall	.+96     	; 0x638 <__divsf3_pse+0x90>
     5d8:	91 50       	subi	r25, 0x01	; 1
     5da:	50 40       	sbci	r21, 0x00	; 0
     5dc:	e6 95       	lsr	r30
     5de:	00 1c       	adc	r0, r0
     5e0:	ca f7       	brpl	.-14     	; 0x5d4 <__divsf3_pse+0x2c>
     5e2:	29 d0       	rcall	.+82     	; 0x636 <__divsf3_pse+0x8e>
     5e4:	fe 2f       	mov	r31, r30
     5e6:	27 d0       	rcall	.+78     	; 0x636 <__divsf3_pse+0x8e>
     5e8:	66 0f       	add	r22, r22
     5ea:	77 1f       	adc	r23, r23
     5ec:	88 1f       	adc	r24, r24
     5ee:	bb 1f       	adc	r27, r27
     5f0:	26 17       	cp	r18, r22
     5f2:	37 07       	cpc	r19, r23
     5f4:	48 07       	cpc	r20, r24
     5f6:	ab 07       	cpc	r26, r27
     5f8:	b0 e8       	ldi	r27, 0x80	; 128
     5fa:	09 f0       	breq	.+2      	; 0x5fe <__divsf3_pse+0x56>
     5fc:	bb 0b       	sbc	r27, r27
     5fe:	80 2d       	mov	r24, r0
     600:	bf 01       	movw	r22, r30
     602:	ff 27       	eor	r31, r31
     604:	93 58       	subi	r25, 0x83	; 131
     606:	5f 4f       	sbci	r21, 0xFF	; 255
     608:	2a f0       	brmi	.+10     	; 0x614 <__divsf3_pse+0x6c>
     60a:	9e 3f       	cpi	r25, 0xFE	; 254
     60c:	51 05       	cpc	r21, r1
     60e:	68 f0       	brcs	.+26     	; 0x62a <__divsf3_pse+0x82>
     610:	74 c0       	rjmp	.+232    	; 0x6fa <__fp_inf>
     612:	be c0       	rjmp	.+380    	; 0x790 <__fp_szero>
     614:	5f 3f       	cpi	r21, 0xFF	; 255
     616:	ec f3       	brlt	.-6      	; 0x612 <__divsf3_pse+0x6a>
     618:	98 3e       	cpi	r25, 0xE8	; 232
     61a:	dc f3       	brlt	.-10     	; 0x612 <__divsf3_pse+0x6a>
     61c:	86 95       	lsr	r24
     61e:	77 95       	ror	r23
     620:	67 95       	ror	r22
     622:	b7 95       	ror	r27
     624:	f7 95       	ror	r31
     626:	9f 5f       	subi	r25, 0xFF	; 255
     628:	c9 f7       	brne	.-14     	; 0x61c <__divsf3_pse+0x74>
     62a:	88 0f       	add	r24, r24
     62c:	91 1d       	adc	r25, r1
     62e:	96 95       	lsr	r25
     630:	87 95       	ror	r24
     632:	97 f9       	bld	r25, 7
     634:	08 95       	ret
     636:	e1 e0       	ldi	r30, 0x01	; 1
     638:	66 0f       	add	r22, r22
     63a:	77 1f       	adc	r23, r23
     63c:	88 1f       	adc	r24, r24
     63e:	bb 1f       	adc	r27, r27
     640:	62 17       	cp	r22, r18
     642:	73 07       	cpc	r23, r19
     644:	84 07       	cpc	r24, r20
     646:	ba 07       	cpc	r27, r26
     648:	20 f0       	brcs	.+8      	; 0x652 <__divsf3_pse+0xaa>
     64a:	62 1b       	sub	r22, r18
     64c:	73 0b       	sbc	r23, r19
     64e:	84 0b       	sbc	r24, r20
     650:	ba 0b       	sbc	r27, r26
     652:	ee 1f       	adc	r30, r30
     654:	88 f7       	brcc	.-30     	; 0x638 <__divsf3_pse+0x90>
     656:	e0 95       	com	r30
     658:	08 95       	ret

0000065a <__fixunssfsi>:
     65a:	7f d0       	rcall	.+254    	; 0x75a <__fp_splitA>
     65c:	88 f0       	brcs	.+34     	; 0x680 <__fixunssfsi+0x26>
     65e:	9f 57       	subi	r25, 0x7F	; 127
     660:	90 f0       	brcs	.+36     	; 0x686 <__fixunssfsi+0x2c>
     662:	b9 2f       	mov	r27, r25
     664:	99 27       	eor	r25, r25
     666:	b7 51       	subi	r27, 0x17	; 23
     668:	a0 f0       	brcs	.+40     	; 0x692 <__fixunssfsi+0x38>
     66a:	d1 f0       	breq	.+52     	; 0x6a0 <__fixunssfsi+0x46>
     66c:	66 0f       	add	r22, r22
     66e:	77 1f       	adc	r23, r23
     670:	88 1f       	adc	r24, r24
     672:	99 1f       	adc	r25, r25
     674:	1a f0       	brmi	.+6      	; 0x67c <__fixunssfsi+0x22>
     676:	ba 95       	dec	r27
     678:	c9 f7       	brne	.-14     	; 0x66c <__fixunssfsi+0x12>
     67a:	12 c0       	rjmp	.+36     	; 0x6a0 <__fixunssfsi+0x46>
     67c:	b1 30       	cpi	r27, 0x01	; 1
     67e:	81 f0       	breq	.+32     	; 0x6a0 <__fixunssfsi+0x46>
     680:	86 d0       	rcall	.+268    	; 0x78e <__fp_zero>
     682:	b1 e0       	ldi	r27, 0x01	; 1
     684:	08 95       	ret
     686:	83 c0       	rjmp	.+262    	; 0x78e <__fp_zero>
     688:	67 2f       	mov	r22, r23
     68a:	78 2f       	mov	r23, r24
     68c:	88 27       	eor	r24, r24
     68e:	b8 5f       	subi	r27, 0xF8	; 248
     690:	39 f0       	breq	.+14     	; 0x6a0 <__fixunssfsi+0x46>
     692:	b9 3f       	cpi	r27, 0xF9	; 249
     694:	cc f3       	brlt	.-14     	; 0x688 <__fixunssfsi+0x2e>
     696:	86 95       	lsr	r24
     698:	77 95       	ror	r23
     69a:	67 95       	ror	r22
     69c:	b3 95       	inc	r27
     69e:	d9 f7       	brne	.-10     	; 0x696 <__fixunssfsi+0x3c>
     6a0:	3e f4       	brtc	.+14     	; 0x6b0 <__fixunssfsi+0x56>
     6a2:	90 95       	com	r25
     6a4:	80 95       	com	r24
     6a6:	70 95       	com	r23
     6a8:	61 95       	neg	r22
     6aa:	7f 4f       	sbci	r23, 0xFF	; 255
     6ac:	8f 4f       	sbci	r24, 0xFF	; 255
     6ae:	9f 4f       	sbci	r25, 0xFF	; 255
     6b0:	08 95       	ret

000006b2 <__fp_cmp>:
     6b2:	99 0f       	add	r25, r25
     6b4:	00 08       	sbc	r0, r0
     6b6:	55 0f       	add	r21, r21
     6b8:	aa 0b       	sbc	r26, r26
     6ba:	e0 e8       	ldi	r30, 0x80	; 128
     6bc:	fe ef       	ldi	r31, 0xFE	; 254
     6be:	16 16       	cp	r1, r22
     6c0:	17 06       	cpc	r1, r23
     6c2:	e8 07       	cpc	r30, r24
     6c4:	f9 07       	cpc	r31, r25
     6c6:	c0 f0       	brcs	.+48     	; 0x6f8 <__fp_cmp+0x46>
     6c8:	12 16       	cp	r1, r18
     6ca:	13 06       	cpc	r1, r19
     6cc:	e4 07       	cpc	r30, r20
     6ce:	f5 07       	cpc	r31, r21
     6d0:	98 f0       	brcs	.+38     	; 0x6f8 <__fp_cmp+0x46>
     6d2:	62 1b       	sub	r22, r18
     6d4:	73 0b       	sbc	r23, r19
     6d6:	84 0b       	sbc	r24, r20
     6d8:	95 0b       	sbc	r25, r21
     6da:	39 f4       	brne	.+14     	; 0x6ea <__fp_cmp+0x38>
     6dc:	0a 26       	eor	r0, r26
     6de:	61 f0       	breq	.+24     	; 0x6f8 <__fp_cmp+0x46>
     6e0:	23 2b       	or	r18, r19
     6e2:	24 2b       	or	r18, r20
     6e4:	25 2b       	or	r18, r21
     6e6:	21 f4       	brne	.+8      	; 0x6f0 <__fp_cmp+0x3e>
     6e8:	08 95       	ret
     6ea:	0a 26       	eor	r0, r26
     6ec:	09 f4       	brne	.+2      	; 0x6f0 <__fp_cmp+0x3e>
     6ee:	a1 40       	sbci	r26, 0x01	; 1
     6f0:	a6 95       	lsr	r26
     6f2:	8f ef       	ldi	r24, 0xFF	; 255
     6f4:	81 1d       	adc	r24, r1
     6f6:	81 1d       	adc	r24, r1
     6f8:	08 95       	ret

000006fa <__fp_inf>:
     6fa:	97 f9       	bld	r25, 7
     6fc:	9f 67       	ori	r25, 0x7F	; 127
     6fe:	80 e8       	ldi	r24, 0x80	; 128
     700:	70 e0       	ldi	r23, 0x00	; 0
     702:	60 e0       	ldi	r22, 0x00	; 0
     704:	08 95       	ret

00000706 <__fp_nan>:
     706:	9f ef       	ldi	r25, 0xFF	; 255
     708:	80 ec       	ldi	r24, 0xC0	; 192
     70a:	08 95       	ret

0000070c <__fp_pscA>:
     70c:	00 24       	eor	r0, r0
     70e:	0a 94       	dec	r0
     710:	16 16       	cp	r1, r22
     712:	17 06       	cpc	r1, r23
     714:	18 06       	cpc	r1, r24
     716:	09 06       	cpc	r0, r25
     718:	08 95       	ret

0000071a <__fp_pscB>:
     71a:	00 24       	eor	r0, r0
     71c:	0a 94       	dec	r0
     71e:	12 16       	cp	r1, r18
     720:	13 06       	cpc	r1, r19
     722:	14 06       	cpc	r1, r20
     724:	05 06       	cpc	r0, r21
     726:	08 95       	ret

00000728 <__fp_round>:
     728:	09 2e       	mov	r0, r25
     72a:	03 94       	inc	r0
     72c:	00 0c       	add	r0, r0
     72e:	11 f4       	brne	.+4      	; 0x734 <__fp_round+0xc>
     730:	88 23       	and	r24, r24
     732:	52 f0       	brmi	.+20     	; 0x748 <__fp_round+0x20>
     734:	bb 0f       	add	r27, r27
     736:	40 f4       	brcc	.+16     	; 0x748 <__fp_round+0x20>
     738:	bf 2b       	or	r27, r31
     73a:	11 f4       	brne	.+4      	; 0x740 <__fp_round+0x18>
     73c:	60 ff       	sbrs	r22, 0
     73e:	04 c0       	rjmp	.+8      	; 0x748 <__fp_round+0x20>
     740:	6f 5f       	subi	r22, 0xFF	; 255
     742:	7f 4f       	sbci	r23, 0xFF	; 255
     744:	8f 4f       	sbci	r24, 0xFF	; 255
     746:	9f 4f       	sbci	r25, 0xFF	; 255
     748:	08 95       	ret

0000074a <__fp_split3>:
     74a:	57 fd       	sbrc	r21, 7
     74c:	90 58       	subi	r25, 0x80	; 128
     74e:	44 0f       	add	r20, r20
     750:	55 1f       	adc	r21, r21
     752:	59 f0       	breq	.+22     	; 0x76a <__fp_splitA+0x10>
     754:	5f 3f       	cpi	r21, 0xFF	; 255
     756:	71 f0       	breq	.+28     	; 0x774 <__fp_splitA+0x1a>
     758:	47 95       	ror	r20

0000075a <__fp_splitA>:
     75a:	88 0f       	add	r24, r24
     75c:	97 fb       	bst	r25, 7
     75e:	99 1f       	adc	r25, r25
     760:	61 f0       	breq	.+24     	; 0x77a <__fp_splitA+0x20>
     762:	9f 3f       	cpi	r25, 0xFF	; 255
     764:	79 f0       	breq	.+30     	; 0x784 <__fp_splitA+0x2a>
     766:	87 95       	ror	r24
     768:	08 95       	ret
     76a:	12 16       	cp	r1, r18
     76c:	13 06       	cpc	r1, r19
     76e:	14 06       	cpc	r1, r20
     770:	55 1f       	adc	r21, r21
     772:	f2 cf       	rjmp	.-28     	; 0x758 <__fp_split3+0xe>
     774:	46 95       	lsr	r20
     776:	f1 df       	rcall	.-30     	; 0x75a <__fp_splitA>
     778:	08 c0       	rjmp	.+16     	; 0x78a <__fp_splitA+0x30>
     77a:	16 16       	cp	r1, r22
     77c:	17 06       	cpc	r1, r23
     77e:	18 06       	cpc	r1, r24
     780:	99 1f       	adc	r25, r25
     782:	f1 cf       	rjmp	.-30     	; 0x766 <__fp_splitA+0xc>
     784:	86 95       	lsr	r24
     786:	71 05       	cpc	r23, r1
     788:	61 05       	cpc	r22, r1
     78a:	08 94       	sec
     78c:	08 95       	ret

0000078e <__fp_zero>:
     78e:	e8 94       	clt

00000790 <__fp_szero>:
     790:	bb 27       	eor	r27, r27
     792:	66 27       	eor	r22, r22
     794:	77 27       	eor	r23, r23
     796:	cb 01       	movw	r24, r22
     798:	97 f9       	bld	r25, 7
     79a:	08 95       	ret

0000079c <__gesf2>:
     79c:	8a df       	rcall	.-236    	; 0x6b2 <__fp_cmp>
     79e:	08 f4       	brcc	.+2      	; 0x7a2 <__gesf2+0x6>
     7a0:	8f ef       	ldi	r24, 0xFF	; 255
     7a2:	08 95       	ret

000007a4 <__mulsf3>:
     7a4:	0b d0       	rcall	.+22     	; 0x7bc <__mulsf3x>
     7a6:	c0 cf       	rjmp	.-128    	; 0x728 <__fp_round>
     7a8:	b1 df       	rcall	.-158    	; 0x70c <__fp_pscA>
     7aa:	28 f0       	brcs	.+10     	; 0x7b6 <__mulsf3+0x12>
     7ac:	b6 df       	rcall	.-148    	; 0x71a <__fp_pscB>
     7ae:	18 f0       	brcs	.+6      	; 0x7b6 <__mulsf3+0x12>
     7b0:	95 23       	and	r25, r21
     7b2:	09 f0       	breq	.+2      	; 0x7b6 <__mulsf3+0x12>
     7b4:	a2 cf       	rjmp	.-188    	; 0x6fa <__fp_inf>
     7b6:	a7 cf       	rjmp	.-178    	; 0x706 <__fp_nan>
     7b8:	11 24       	eor	r1, r1
     7ba:	ea cf       	rjmp	.-44     	; 0x790 <__fp_szero>

000007bc <__mulsf3x>:
     7bc:	c6 df       	rcall	.-116    	; 0x74a <__fp_split3>
     7be:	a0 f3       	brcs	.-24     	; 0x7a8 <__mulsf3+0x4>

000007c0 <__mulsf3_pse>:
     7c0:	95 9f       	mul	r25, r21
     7c2:	d1 f3       	breq	.-12     	; 0x7b8 <__mulsf3+0x14>
     7c4:	95 0f       	add	r25, r21
     7c6:	50 e0       	ldi	r21, 0x00	; 0
     7c8:	55 1f       	adc	r21, r21
     7ca:	62 9f       	mul	r22, r18
     7cc:	f0 01       	movw	r30, r0
     7ce:	72 9f       	mul	r23, r18
     7d0:	bb 27       	eor	r27, r27
     7d2:	f0 0d       	add	r31, r0
     7d4:	b1 1d       	adc	r27, r1
     7d6:	63 9f       	mul	r22, r19
     7d8:	aa 27       	eor	r26, r26
     7da:	f0 0d       	add	r31, r0
     7dc:	b1 1d       	adc	r27, r1
     7de:	aa 1f       	adc	r26, r26
     7e0:	64 9f       	mul	r22, r20
     7e2:	66 27       	eor	r22, r22
     7e4:	b0 0d       	add	r27, r0
     7e6:	a1 1d       	adc	r26, r1
     7e8:	66 1f       	adc	r22, r22
     7ea:	82 9f       	mul	r24, r18
     7ec:	22 27       	eor	r18, r18
     7ee:	b0 0d       	add	r27, r0
     7f0:	a1 1d       	adc	r26, r1
     7f2:	62 1f       	adc	r22, r18
     7f4:	73 9f       	mul	r23, r19
     7f6:	b0 0d       	add	r27, r0
     7f8:	a1 1d       	adc	r26, r1
     7fa:	62 1f       	adc	r22, r18
     7fc:	83 9f       	mul	r24, r19
     7fe:	a0 0d       	add	r26, r0
     800:	61 1d       	adc	r22, r1
     802:	22 1f       	adc	r18, r18
     804:	74 9f       	mul	r23, r20
     806:	33 27       	eor	r19, r19
     808:	a0 0d       	add	r26, r0
     80a:	61 1d       	adc	r22, r1
     80c:	23 1f       	adc	r18, r19
     80e:	84 9f       	mul	r24, r20
     810:	60 0d       	add	r22, r0
     812:	21 1d       	adc	r18, r1
     814:	82 2f       	mov	r24, r18
     816:	76 2f       	mov	r23, r22
     818:	6a 2f       	mov	r22, r26
     81a:	11 24       	eor	r1, r1
     81c:	9f 57       	subi	r25, 0x7F	; 127
     81e:	50 40       	sbci	r21, 0x00	; 0
     820:	8a f0       	brmi	.+34     	; 0x844 <__mulsf3_pse+0x84>
     822:	e1 f0       	breq	.+56     	; 0x85c <__mulsf3_pse+0x9c>
     824:	88 23       	and	r24, r24
     826:	4a f0       	brmi	.+18     	; 0x83a <__mulsf3_pse+0x7a>
     828:	ee 0f       	add	r30, r30
     82a:	ff 1f       	adc	r31, r31
     82c:	bb 1f       	adc	r27, r27
     82e:	66 1f       	adc	r22, r22
     830:	77 1f       	adc	r23, r23
     832:	88 1f       	adc	r24, r24
     834:	91 50       	subi	r25, 0x01	; 1
     836:	50 40       	sbci	r21, 0x00	; 0
     838:	a9 f7       	brne	.-22     	; 0x824 <__mulsf3_pse+0x64>
     83a:	9e 3f       	cpi	r25, 0xFE	; 254
     83c:	51 05       	cpc	r21, r1
     83e:	70 f0       	brcs	.+28     	; 0x85c <__mulsf3_pse+0x9c>
     840:	5c cf       	rjmp	.-328    	; 0x6fa <__fp_inf>
     842:	a6 cf       	rjmp	.-180    	; 0x790 <__fp_szero>
     844:	5f 3f       	cpi	r21, 0xFF	; 255
     846:	ec f3       	brlt	.-6      	; 0x842 <__mulsf3_pse+0x82>
     848:	98 3e       	cpi	r25, 0xE8	; 232
     84a:	dc f3       	brlt	.-10     	; 0x842 <__mulsf3_pse+0x82>
     84c:	86 95       	lsr	r24
     84e:	77 95       	ror	r23
     850:	67 95       	ror	r22
     852:	b7 95       	ror	r27
     854:	f7 95       	ror	r31
     856:	e7 95       	ror	r30
     858:	9f 5f       	subi	r25, 0xFF	; 255
     85a:	c1 f7       	brne	.-16     	; 0x84c <__mulsf3_pse+0x8c>
     85c:	fe 2b       	or	r31, r30
     85e:	88 0f       	add	r24, r24
     860:	91 1d       	adc	r25, r1
     862:	96 95       	lsr	r25
     864:	87 95       	ror	r24
     866:	97 f9       	bld	r25, 7
     868:	08 95       	ret

0000086a <__divmodsi4>:
     86a:	05 2e       	mov	r0, r21
     86c:	97 fb       	bst	r25, 7
     86e:	1e f4       	brtc	.+6      	; 0x876 <__divmodsi4+0xc>
     870:	00 94       	com	r0
     872:	0e 94 4c 04 	call	0x898	; 0x898 <__negsi2>
     876:	57 fd       	sbrc	r21, 7
     878:	07 d0       	rcall	.+14     	; 0x888 <__divmodsi4_neg2>
     87a:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__udivmodsi4>
     87e:	07 fc       	sbrc	r0, 7
     880:	03 d0       	rcall	.+6      	; 0x888 <__divmodsi4_neg2>
     882:	4e f4       	brtc	.+18     	; 0x896 <__divmodsi4_exit>
     884:	0c 94 4c 04 	jmp	0x898	; 0x898 <__negsi2>

00000888 <__divmodsi4_neg2>:
     888:	50 95       	com	r21
     88a:	40 95       	com	r20
     88c:	30 95       	com	r19
     88e:	21 95       	neg	r18
     890:	3f 4f       	sbci	r19, 0xFF	; 255
     892:	4f 4f       	sbci	r20, 0xFF	; 255
     894:	5f 4f       	sbci	r21, 0xFF	; 255

00000896 <__divmodsi4_exit>:
     896:	08 95       	ret

00000898 <__negsi2>:
     898:	90 95       	com	r25
     89a:	80 95       	com	r24
     89c:	70 95       	com	r23
     89e:	61 95       	neg	r22
     8a0:	7f 4f       	sbci	r23, 0xFF	; 255
     8a2:	8f 4f       	sbci	r24, 0xFF	; 255
     8a4:	9f 4f       	sbci	r25, 0xFF	; 255
     8a6:	08 95       	ret

000008a8 <__udivmodsi4>:
     8a8:	a1 e2       	ldi	r26, 0x21	; 33
     8aa:	1a 2e       	mov	r1, r26
     8ac:	aa 1b       	sub	r26, r26
     8ae:	bb 1b       	sub	r27, r27
     8b0:	fd 01       	movw	r30, r26
     8b2:	0d c0       	rjmp	.+26     	; 0x8ce <__udivmodsi4_ep>

000008b4 <__udivmodsi4_loop>:
     8b4:	aa 1f       	adc	r26, r26
     8b6:	bb 1f       	adc	r27, r27
     8b8:	ee 1f       	adc	r30, r30
     8ba:	ff 1f       	adc	r31, r31
     8bc:	a2 17       	cp	r26, r18
     8be:	b3 07       	cpc	r27, r19
     8c0:	e4 07       	cpc	r30, r20
     8c2:	f5 07       	cpc	r31, r21
     8c4:	20 f0       	brcs	.+8      	; 0x8ce <__udivmodsi4_ep>
     8c6:	a2 1b       	sub	r26, r18
     8c8:	b3 0b       	sbc	r27, r19
     8ca:	e4 0b       	sbc	r30, r20
     8cc:	f5 0b       	sbc	r31, r21

000008ce <__udivmodsi4_ep>:
     8ce:	66 1f       	adc	r22, r22
     8d0:	77 1f       	adc	r23, r23
     8d2:	88 1f       	adc	r24, r24
     8d4:	99 1f       	adc	r25, r25
     8d6:	1a 94       	dec	r1
     8d8:	69 f7       	brne	.-38     	; 0x8b4 <__udivmodsi4_loop>
     8da:	60 95       	com	r22
     8dc:	70 95       	com	r23
     8de:	80 95       	com	r24
     8e0:	90 95       	com	r25
     8e2:	9b 01       	movw	r18, r22
     8e4:	ac 01       	movw	r20, r24
     8e6:	bd 01       	movw	r22, r26
     8e8:	cf 01       	movw	r24, r30
     8ea:	08 95       	ret

000008ec <fdevopen>:
     8ec:	0f 93       	push	r16
     8ee:	1f 93       	push	r17
     8f0:	cf 93       	push	r28
     8f2:	df 93       	push	r29
     8f4:	ec 01       	movw	r28, r24
     8f6:	8b 01       	movw	r16, r22
     8f8:	00 97       	sbiw	r24, 0x00	; 0
     8fa:	31 f4       	brne	.+12     	; 0x908 <fdevopen+0x1c>
     8fc:	61 15       	cp	r22, r1
     8fe:	71 05       	cpc	r23, r1
     900:	19 f4       	brne	.+6      	; 0x908 <fdevopen+0x1c>
     902:	80 e0       	ldi	r24, 0x00	; 0
     904:	90 e0       	ldi	r25, 0x00	; 0
     906:	38 c0       	rjmp	.+112    	; 0x978 <fdevopen+0x8c>
     908:	6e e0       	ldi	r22, 0x0E	; 14
     90a:	70 e0       	ldi	r23, 0x00	; 0
     90c:	81 e0       	ldi	r24, 0x01	; 1
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	0e 94 ae 06 	call	0xd5c	; 0xd5c <calloc>
     914:	fc 01       	movw	r30, r24
     916:	00 97       	sbiw	r24, 0x00	; 0
     918:	a1 f3       	breq	.-24     	; 0x902 <fdevopen+0x16>
     91a:	80 e8       	ldi	r24, 0x80	; 128
     91c:	83 83       	std	Z+3, r24	; 0x03
     91e:	01 15       	cp	r16, r1
     920:	11 05       	cpc	r17, r1
     922:	71 f0       	breq	.+28     	; 0x940 <fdevopen+0x54>
     924:	13 87       	std	Z+11, r17	; 0x0b
     926:	02 87       	std	Z+10, r16	; 0x0a
     928:	81 e8       	ldi	r24, 0x81	; 129
     92a:	83 83       	std	Z+3, r24	; 0x03
     92c:	80 91 3c 01 	lds	r24, 0x013C
     930:	90 91 3d 01 	lds	r25, 0x013D
     934:	89 2b       	or	r24, r25
     936:	21 f4       	brne	.+8      	; 0x940 <fdevopen+0x54>
     938:	f0 93 3d 01 	sts	0x013D, r31
     93c:	e0 93 3c 01 	sts	0x013C, r30
     940:	20 97       	sbiw	r28, 0x00	; 0
     942:	c9 f0       	breq	.+50     	; 0x976 <fdevopen+0x8a>
     944:	d1 87       	std	Z+9, r29	; 0x09
     946:	c0 87       	std	Z+8, r28	; 0x08
     948:	83 81       	ldd	r24, Z+3	; 0x03
     94a:	82 60       	ori	r24, 0x02	; 2
     94c:	83 83       	std	Z+3, r24	; 0x03
     94e:	80 91 3e 01 	lds	r24, 0x013E
     952:	90 91 3f 01 	lds	r25, 0x013F
     956:	89 2b       	or	r24, r25
     958:	71 f4       	brne	.+28     	; 0x976 <fdevopen+0x8a>
     95a:	f0 93 3f 01 	sts	0x013F, r31
     95e:	e0 93 3e 01 	sts	0x013E, r30
     962:	80 91 40 01 	lds	r24, 0x0140
     966:	90 91 41 01 	lds	r25, 0x0141
     96a:	89 2b       	or	r24, r25
     96c:	21 f4       	brne	.+8      	; 0x976 <fdevopen+0x8a>
     96e:	f0 93 41 01 	sts	0x0141, r31
     972:	e0 93 40 01 	sts	0x0140, r30
     976:	cf 01       	movw	r24, r30
     978:	df 91       	pop	r29
     97a:	cf 91       	pop	r28
     97c:	1f 91       	pop	r17
     97e:	0f 91       	pop	r16
     980:	08 95       	ret

00000982 <printf>:
     982:	a0 e0       	ldi	r26, 0x00	; 0
     984:	b0 e0       	ldi	r27, 0x00	; 0
     986:	e7 ec       	ldi	r30, 0xC7	; 199
     988:	f4 e0       	ldi	r31, 0x04	; 4
     98a:	0c 94 ae 08 	jmp	0x115c	; 0x115c <__prologue_saves__+0x20>
     98e:	fe 01       	movw	r30, r28
     990:	35 96       	adiw	r30, 0x05	; 5
     992:	61 91       	ld	r22, Z+
     994:	71 91       	ld	r23, Z+
     996:	af 01       	movw	r20, r30
     998:	80 91 3e 01 	lds	r24, 0x013E
     99c:	90 91 3f 01 	lds	r25, 0x013F
     9a0:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <vfprintf>
     9a4:	e2 e0       	ldi	r30, 0x02	; 2
     9a6:	0c 94 ca 08 	jmp	0x1194	; 0x1194 <__epilogue_restores__+0x20>

000009aa <putchar>:
     9aa:	60 91 3e 01 	lds	r22, 0x013E
     9ae:	70 91 3f 01 	lds	r23, 0x013F
     9b2:	0e 94 0e 08 	call	0x101c	; 0x101c <fputc>
     9b6:	08 95       	ret

000009b8 <vfprintf>:
     9b8:	ac e0       	ldi	r26, 0x0C	; 12
     9ba:	b0 e0       	ldi	r27, 0x00	; 0
     9bc:	e2 ee       	ldi	r30, 0xE2	; 226
     9be:	f4 e0       	ldi	r31, 0x04	; 4
     9c0:	0c 94 9e 08 	jmp	0x113c	; 0x113c <__prologue_saves__>
     9c4:	7c 01       	movw	r14, r24
     9c6:	6b 01       	movw	r12, r22
     9c8:	8a 01       	movw	r16, r20
     9ca:	fc 01       	movw	r30, r24
     9cc:	17 82       	std	Z+7, r1	; 0x07
     9ce:	16 82       	std	Z+6, r1	; 0x06
     9d0:	83 81       	ldd	r24, Z+3	; 0x03
     9d2:	81 ff       	sbrs	r24, 1
     9d4:	bd c1       	rjmp	.+890    	; 0xd50 <vfprintf+0x398>
     9d6:	ce 01       	movw	r24, r28
     9d8:	01 96       	adiw	r24, 0x01	; 1
     9da:	4c 01       	movw	r8, r24
     9dc:	f7 01       	movw	r30, r14
     9de:	93 81       	ldd	r25, Z+3	; 0x03
     9e0:	f6 01       	movw	r30, r12
     9e2:	93 fd       	sbrc	r25, 3
     9e4:	85 91       	lpm	r24, Z+
     9e6:	93 ff       	sbrs	r25, 3
     9e8:	81 91       	ld	r24, Z+
     9ea:	6f 01       	movw	r12, r30
     9ec:	88 23       	and	r24, r24
     9ee:	09 f4       	brne	.+2      	; 0x9f2 <vfprintf+0x3a>
     9f0:	ab c1       	rjmp	.+854    	; 0xd48 <vfprintf+0x390>
     9f2:	85 32       	cpi	r24, 0x25	; 37
     9f4:	39 f4       	brne	.+14     	; 0xa04 <vfprintf+0x4c>
     9f6:	93 fd       	sbrc	r25, 3
     9f8:	85 91       	lpm	r24, Z+
     9fa:	93 ff       	sbrs	r25, 3
     9fc:	81 91       	ld	r24, Z+
     9fe:	6f 01       	movw	r12, r30
     a00:	85 32       	cpi	r24, 0x25	; 37
     a02:	29 f4       	brne	.+10     	; 0xa0e <vfprintf+0x56>
     a04:	b7 01       	movw	r22, r14
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	0e 94 0e 08 	call	0x101c	; 0x101c <fputc>
     a0c:	e7 cf       	rjmp	.-50     	; 0x9dc <vfprintf+0x24>
     a0e:	51 2c       	mov	r5, r1
     a10:	31 2c       	mov	r3, r1
     a12:	20 e0       	ldi	r18, 0x00	; 0
     a14:	20 32       	cpi	r18, 0x20	; 32
     a16:	a0 f4       	brcc	.+40     	; 0xa40 <vfprintf+0x88>
     a18:	8b 32       	cpi	r24, 0x2B	; 43
     a1a:	69 f0       	breq	.+26     	; 0xa36 <vfprintf+0x7e>
     a1c:	30 f4       	brcc	.+12     	; 0xa2a <vfprintf+0x72>
     a1e:	80 32       	cpi	r24, 0x20	; 32
     a20:	59 f0       	breq	.+22     	; 0xa38 <vfprintf+0x80>
     a22:	83 32       	cpi	r24, 0x23	; 35
     a24:	69 f4       	brne	.+26     	; 0xa40 <vfprintf+0x88>
     a26:	20 61       	ori	r18, 0x10	; 16
     a28:	2c c0       	rjmp	.+88     	; 0xa82 <vfprintf+0xca>
     a2a:	8d 32       	cpi	r24, 0x2D	; 45
     a2c:	39 f0       	breq	.+14     	; 0xa3c <vfprintf+0x84>
     a2e:	80 33       	cpi	r24, 0x30	; 48
     a30:	39 f4       	brne	.+14     	; 0xa40 <vfprintf+0x88>
     a32:	21 60       	ori	r18, 0x01	; 1
     a34:	26 c0       	rjmp	.+76     	; 0xa82 <vfprintf+0xca>
     a36:	22 60       	ori	r18, 0x02	; 2
     a38:	24 60       	ori	r18, 0x04	; 4
     a3a:	23 c0       	rjmp	.+70     	; 0xa82 <vfprintf+0xca>
     a3c:	28 60       	ori	r18, 0x08	; 8
     a3e:	21 c0       	rjmp	.+66     	; 0xa82 <vfprintf+0xca>
     a40:	27 fd       	sbrc	r18, 7
     a42:	27 c0       	rjmp	.+78     	; 0xa92 <vfprintf+0xda>
     a44:	30 ed       	ldi	r19, 0xD0	; 208
     a46:	38 0f       	add	r19, r24
     a48:	3a 30       	cpi	r19, 0x0A	; 10
     a4a:	78 f4       	brcc	.+30     	; 0xa6a <vfprintf+0xb2>
     a4c:	26 ff       	sbrs	r18, 6
     a4e:	06 c0       	rjmp	.+12     	; 0xa5c <vfprintf+0xa4>
     a50:	fa e0       	ldi	r31, 0x0A	; 10
     a52:	5f 9e       	mul	r5, r31
     a54:	30 0d       	add	r19, r0
     a56:	11 24       	eor	r1, r1
     a58:	53 2e       	mov	r5, r19
     a5a:	13 c0       	rjmp	.+38     	; 0xa82 <vfprintf+0xca>
     a5c:	8a e0       	ldi	r24, 0x0A	; 10
     a5e:	38 9e       	mul	r3, r24
     a60:	30 0d       	add	r19, r0
     a62:	11 24       	eor	r1, r1
     a64:	33 2e       	mov	r3, r19
     a66:	20 62       	ori	r18, 0x20	; 32
     a68:	0c c0       	rjmp	.+24     	; 0xa82 <vfprintf+0xca>
     a6a:	8e 32       	cpi	r24, 0x2E	; 46
     a6c:	21 f4       	brne	.+8      	; 0xa76 <vfprintf+0xbe>
     a6e:	26 fd       	sbrc	r18, 6
     a70:	6b c1       	rjmp	.+726    	; 0xd48 <vfprintf+0x390>
     a72:	20 64       	ori	r18, 0x40	; 64
     a74:	06 c0       	rjmp	.+12     	; 0xa82 <vfprintf+0xca>
     a76:	8c 36       	cpi	r24, 0x6C	; 108
     a78:	11 f4       	brne	.+4      	; 0xa7e <vfprintf+0xc6>
     a7a:	20 68       	ori	r18, 0x80	; 128
     a7c:	02 c0       	rjmp	.+4      	; 0xa82 <vfprintf+0xca>
     a7e:	88 36       	cpi	r24, 0x68	; 104
     a80:	41 f4       	brne	.+16     	; 0xa92 <vfprintf+0xda>
     a82:	f6 01       	movw	r30, r12
     a84:	93 fd       	sbrc	r25, 3
     a86:	85 91       	lpm	r24, Z+
     a88:	93 ff       	sbrs	r25, 3
     a8a:	81 91       	ld	r24, Z+
     a8c:	6f 01       	movw	r12, r30
     a8e:	81 11       	cpse	r24, r1
     a90:	c1 cf       	rjmp	.-126    	; 0xa14 <vfprintf+0x5c>
     a92:	98 2f       	mov	r25, r24
     a94:	9f 7d       	andi	r25, 0xDF	; 223
     a96:	95 54       	subi	r25, 0x45	; 69
     a98:	93 30       	cpi	r25, 0x03	; 3
     a9a:	28 f4       	brcc	.+10     	; 0xaa6 <vfprintf+0xee>
     a9c:	0c 5f       	subi	r16, 0xFC	; 252
     a9e:	1f 4f       	sbci	r17, 0xFF	; 255
     aa0:	ff e3       	ldi	r31, 0x3F	; 63
     aa2:	f9 83       	std	Y+1, r31	; 0x01
     aa4:	0d c0       	rjmp	.+26     	; 0xac0 <vfprintf+0x108>
     aa6:	83 36       	cpi	r24, 0x63	; 99
     aa8:	31 f0       	breq	.+12     	; 0xab6 <vfprintf+0xfe>
     aaa:	83 37       	cpi	r24, 0x73	; 115
     aac:	71 f0       	breq	.+28     	; 0xaca <vfprintf+0x112>
     aae:	83 35       	cpi	r24, 0x53	; 83
     ab0:	09 f0       	breq	.+2      	; 0xab4 <vfprintf+0xfc>
     ab2:	5b c0       	rjmp	.+182    	; 0xb6a <vfprintf+0x1b2>
     ab4:	22 c0       	rjmp	.+68     	; 0xafa <vfprintf+0x142>
     ab6:	f8 01       	movw	r30, r16
     ab8:	80 81       	ld	r24, Z
     aba:	89 83       	std	Y+1, r24	; 0x01
     abc:	0e 5f       	subi	r16, 0xFE	; 254
     abe:	1f 4f       	sbci	r17, 0xFF	; 255
     ac0:	44 24       	eor	r4, r4
     ac2:	43 94       	inc	r4
     ac4:	51 2c       	mov	r5, r1
     ac6:	54 01       	movw	r10, r8
     ac8:	15 c0       	rjmp	.+42     	; 0xaf4 <vfprintf+0x13c>
     aca:	38 01       	movw	r6, r16
     acc:	f2 e0       	ldi	r31, 0x02	; 2
     ace:	6f 0e       	add	r6, r31
     ad0:	71 1c       	adc	r7, r1
     ad2:	f8 01       	movw	r30, r16
     ad4:	a0 80       	ld	r10, Z
     ad6:	b1 80       	ldd	r11, Z+1	; 0x01
     ad8:	26 ff       	sbrs	r18, 6
     ada:	03 c0       	rjmp	.+6      	; 0xae2 <vfprintf+0x12a>
     adc:	65 2d       	mov	r22, r5
     ade:	70 e0       	ldi	r23, 0x00	; 0
     ae0:	02 c0       	rjmp	.+4      	; 0xae6 <vfprintf+0x12e>
     ae2:	6f ef       	ldi	r22, 0xFF	; 255
     ae4:	7f ef       	ldi	r23, 0xFF	; 255
     ae6:	c5 01       	movw	r24, r10
     ae8:	2c 87       	std	Y+12, r18	; 0x0c
     aea:	0e 94 03 08 	call	0x1006	; 0x1006 <strnlen>
     aee:	2c 01       	movw	r4, r24
     af0:	83 01       	movw	r16, r6
     af2:	2c 85       	ldd	r18, Y+12	; 0x0c
     af4:	2f 77       	andi	r18, 0x7F	; 127
     af6:	22 2e       	mov	r2, r18
     af8:	17 c0       	rjmp	.+46     	; 0xb28 <vfprintf+0x170>
     afa:	38 01       	movw	r6, r16
     afc:	f2 e0       	ldi	r31, 0x02	; 2
     afe:	6f 0e       	add	r6, r31
     b00:	71 1c       	adc	r7, r1
     b02:	f8 01       	movw	r30, r16
     b04:	a0 80       	ld	r10, Z
     b06:	b1 80       	ldd	r11, Z+1	; 0x01
     b08:	26 ff       	sbrs	r18, 6
     b0a:	03 c0       	rjmp	.+6      	; 0xb12 <vfprintf+0x15a>
     b0c:	65 2d       	mov	r22, r5
     b0e:	70 e0       	ldi	r23, 0x00	; 0
     b10:	02 c0       	rjmp	.+4      	; 0xb16 <vfprintf+0x15e>
     b12:	6f ef       	ldi	r22, 0xFF	; 255
     b14:	7f ef       	ldi	r23, 0xFF	; 255
     b16:	c5 01       	movw	r24, r10
     b18:	2c 87       	std	Y+12, r18	; 0x0c
     b1a:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <strnlen_P>
     b1e:	2c 01       	movw	r4, r24
     b20:	2c 85       	ldd	r18, Y+12	; 0x0c
     b22:	20 68       	ori	r18, 0x80	; 128
     b24:	22 2e       	mov	r2, r18
     b26:	83 01       	movw	r16, r6
     b28:	23 fc       	sbrc	r2, 3
     b2a:	1b c0       	rjmp	.+54     	; 0xb62 <vfprintf+0x1aa>
     b2c:	83 2d       	mov	r24, r3
     b2e:	90 e0       	ldi	r25, 0x00	; 0
     b30:	48 16       	cp	r4, r24
     b32:	59 06       	cpc	r5, r25
     b34:	b0 f4       	brcc	.+44     	; 0xb62 <vfprintf+0x1aa>
     b36:	b7 01       	movw	r22, r14
     b38:	80 e2       	ldi	r24, 0x20	; 32
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	0e 94 0e 08 	call	0x101c	; 0x101c <fputc>
     b40:	3a 94       	dec	r3
     b42:	f4 cf       	rjmp	.-24     	; 0xb2c <vfprintf+0x174>
     b44:	f5 01       	movw	r30, r10
     b46:	27 fc       	sbrc	r2, 7
     b48:	85 91       	lpm	r24, Z+
     b4a:	27 fe       	sbrs	r2, 7
     b4c:	81 91       	ld	r24, Z+
     b4e:	5f 01       	movw	r10, r30
     b50:	b7 01       	movw	r22, r14
     b52:	90 e0       	ldi	r25, 0x00	; 0
     b54:	0e 94 0e 08 	call	0x101c	; 0x101c <fputc>
     b58:	31 10       	cpse	r3, r1
     b5a:	3a 94       	dec	r3
     b5c:	f1 e0       	ldi	r31, 0x01	; 1
     b5e:	4f 1a       	sub	r4, r31
     b60:	51 08       	sbc	r5, r1
     b62:	41 14       	cp	r4, r1
     b64:	51 04       	cpc	r5, r1
     b66:	71 f7       	brne	.-36     	; 0xb44 <vfprintf+0x18c>
     b68:	e5 c0       	rjmp	.+458    	; 0xd34 <vfprintf+0x37c>
     b6a:	84 36       	cpi	r24, 0x64	; 100
     b6c:	11 f0       	breq	.+4      	; 0xb72 <vfprintf+0x1ba>
     b6e:	89 36       	cpi	r24, 0x69	; 105
     b70:	39 f5       	brne	.+78     	; 0xbc0 <vfprintf+0x208>
     b72:	f8 01       	movw	r30, r16
     b74:	27 ff       	sbrs	r18, 7
     b76:	07 c0       	rjmp	.+14     	; 0xb86 <vfprintf+0x1ce>
     b78:	60 81       	ld	r22, Z
     b7a:	71 81       	ldd	r23, Z+1	; 0x01
     b7c:	82 81       	ldd	r24, Z+2	; 0x02
     b7e:	93 81       	ldd	r25, Z+3	; 0x03
     b80:	0c 5f       	subi	r16, 0xFC	; 252
     b82:	1f 4f       	sbci	r17, 0xFF	; 255
     b84:	08 c0       	rjmp	.+16     	; 0xb96 <vfprintf+0x1de>
     b86:	60 81       	ld	r22, Z
     b88:	71 81       	ldd	r23, Z+1	; 0x01
     b8a:	88 27       	eor	r24, r24
     b8c:	77 fd       	sbrc	r23, 7
     b8e:	80 95       	com	r24
     b90:	98 2f       	mov	r25, r24
     b92:	0e 5f       	subi	r16, 0xFE	; 254
     b94:	1f 4f       	sbci	r17, 0xFF	; 255
     b96:	2f 76       	andi	r18, 0x6F	; 111
     b98:	b2 2e       	mov	r11, r18
     b9a:	97 ff       	sbrs	r25, 7
     b9c:	09 c0       	rjmp	.+18     	; 0xbb0 <vfprintf+0x1f8>
     b9e:	90 95       	com	r25
     ba0:	80 95       	com	r24
     ba2:	70 95       	com	r23
     ba4:	61 95       	neg	r22
     ba6:	7f 4f       	sbci	r23, 0xFF	; 255
     ba8:	8f 4f       	sbci	r24, 0xFF	; 255
     baa:	9f 4f       	sbci	r25, 0xFF	; 255
     bac:	20 68       	ori	r18, 0x80	; 128
     bae:	b2 2e       	mov	r11, r18
     bb0:	2a e0       	ldi	r18, 0x0A	; 10
     bb2:	30 e0       	ldi	r19, 0x00	; 0
     bb4:	a4 01       	movw	r20, r8
     bb6:	0e 94 40 08 	call	0x1080	; 0x1080 <__ultoa_invert>
     bba:	a8 2e       	mov	r10, r24
     bbc:	a8 18       	sub	r10, r8
     bbe:	44 c0       	rjmp	.+136    	; 0xc48 <vfprintf+0x290>
     bc0:	85 37       	cpi	r24, 0x75	; 117
     bc2:	29 f4       	brne	.+10     	; 0xbce <vfprintf+0x216>
     bc4:	2f 7e       	andi	r18, 0xEF	; 239
     bc6:	b2 2e       	mov	r11, r18
     bc8:	2a e0       	ldi	r18, 0x0A	; 10
     bca:	30 e0       	ldi	r19, 0x00	; 0
     bcc:	25 c0       	rjmp	.+74     	; 0xc18 <vfprintf+0x260>
     bce:	f2 2f       	mov	r31, r18
     bd0:	f9 7f       	andi	r31, 0xF9	; 249
     bd2:	bf 2e       	mov	r11, r31
     bd4:	8f 36       	cpi	r24, 0x6F	; 111
     bd6:	c1 f0       	breq	.+48     	; 0xc08 <vfprintf+0x250>
     bd8:	18 f4       	brcc	.+6      	; 0xbe0 <vfprintf+0x228>
     bda:	88 35       	cpi	r24, 0x58	; 88
     bdc:	79 f0       	breq	.+30     	; 0xbfc <vfprintf+0x244>
     bde:	b4 c0       	rjmp	.+360    	; 0xd48 <vfprintf+0x390>
     be0:	80 37       	cpi	r24, 0x70	; 112
     be2:	19 f0       	breq	.+6      	; 0xbea <vfprintf+0x232>
     be4:	88 37       	cpi	r24, 0x78	; 120
     be6:	21 f0       	breq	.+8      	; 0xbf0 <vfprintf+0x238>
     be8:	af c0       	rjmp	.+350    	; 0xd48 <vfprintf+0x390>
     bea:	2f 2f       	mov	r18, r31
     bec:	20 61       	ori	r18, 0x10	; 16
     bee:	b2 2e       	mov	r11, r18
     bf0:	b4 fe       	sbrs	r11, 4
     bf2:	0d c0       	rjmp	.+26     	; 0xc0e <vfprintf+0x256>
     bf4:	8b 2d       	mov	r24, r11
     bf6:	84 60       	ori	r24, 0x04	; 4
     bf8:	b8 2e       	mov	r11, r24
     bfa:	09 c0       	rjmp	.+18     	; 0xc0e <vfprintf+0x256>
     bfc:	24 ff       	sbrs	r18, 4
     bfe:	0a c0       	rjmp	.+20     	; 0xc14 <vfprintf+0x25c>
     c00:	9f 2f       	mov	r25, r31
     c02:	96 60       	ori	r25, 0x06	; 6
     c04:	b9 2e       	mov	r11, r25
     c06:	06 c0       	rjmp	.+12     	; 0xc14 <vfprintf+0x25c>
     c08:	28 e0       	ldi	r18, 0x08	; 8
     c0a:	30 e0       	ldi	r19, 0x00	; 0
     c0c:	05 c0       	rjmp	.+10     	; 0xc18 <vfprintf+0x260>
     c0e:	20 e1       	ldi	r18, 0x10	; 16
     c10:	30 e0       	ldi	r19, 0x00	; 0
     c12:	02 c0       	rjmp	.+4      	; 0xc18 <vfprintf+0x260>
     c14:	20 e1       	ldi	r18, 0x10	; 16
     c16:	32 e0       	ldi	r19, 0x02	; 2
     c18:	f8 01       	movw	r30, r16
     c1a:	b7 fe       	sbrs	r11, 7
     c1c:	07 c0       	rjmp	.+14     	; 0xc2c <vfprintf+0x274>
     c1e:	60 81       	ld	r22, Z
     c20:	71 81       	ldd	r23, Z+1	; 0x01
     c22:	82 81       	ldd	r24, Z+2	; 0x02
     c24:	93 81       	ldd	r25, Z+3	; 0x03
     c26:	0c 5f       	subi	r16, 0xFC	; 252
     c28:	1f 4f       	sbci	r17, 0xFF	; 255
     c2a:	06 c0       	rjmp	.+12     	; 0xc38 <vfprintf+0x280>
     c2c:	60 81       	ld	r22, Z
     c2e:	71 81       	ldd	r23, Z+1	; 0x01
     c30:	80 e0       	ldi	r24, 0x00	; 0
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	0e 5f       	subi	r16, 0xFE	; 254
     c36:	1f 4f       	sbci	r17, 0xFF	; 255
     c38:	a4 01       	movw	r20, r8
     c3a:	0e 94 40 08 	call	0x1080	; 0x1080 <__ultoa_invert>
     c3e:	a8 2e       	mov	r10, r24
     c40:	a8 18       	sub	r10, r8
     c42:	fb 2d       	mov	r31, r11
     c44:	ff 77       	andi	r31, 0x7F	; 127
     c46:	bf 2e       	mov	r11, r31
     c48:	b6 fe       	sbrs	r11, 6
     c4a:	0b c0       	rjmp	.+22     	; 0xc62 <vfprintf+0x2aa>
     c4c:	2b 2d       	mov	r18, r11
     c4e:	2e 7f       	andi	r18, 0xFE	; 254
     c50:	a5 14       	cp	r10, r5
     c52:	50 f4       	brcc	.+20     	; 0xc68 <vfprintf+0x2b0>
     c54:	b4 fe       	sbrs	r11, 4
     c56:	0a c0       	rjmp	.+20     	; 0xc6c <vfprintf+0x2b4>
     c58:	b2 fc       	sbrc	r11, 2
     c5a:	08 c0       	rjmp	.+16     	; 0xc6c <vfprintf+0x2b4>
     c5c:	2b 2d       	mov	r18, r11
     c5e:	2e 7e       	andi	r18, 0xEE	; 238
     c60:	05 c0       	rjmp	.+10     	; 0xc6c <vfprintf+0x2b4>
     c62:	7a 2c       	mov	r7, r10
     c64:	2b 2d       	mov	r18, r11
     c66:	03 c0       	rjmp	.+6      	; 0xc6e <vfprintf+0x2b6>
     c68:	7a 2c       	mov	r7, r10
     c6a:	01 c0       	rjmp	.+2      	; 0xc6e <vfprintf+0x2b6>
     c6c:	75 2c       	mov	r7, r5
     c6e:	24 ff       	sbrs	r18, 4
     c70:	0d c0       	rjmp	.+26     	; 0xc8c <vfprintf+0x2d4>
     c72:	fe 01       	movw	r30, r28
     c74:	ea 0d       	add	r30, r10
     c76:	f1 1d       	adc	r31, r1
     c78:	80 81       	ld	r24, Z
     c7a:	80 33       	cpi	r24, 0x30	; 48
     c7c:	11 f4       	brne	.+4      	; 0xc82 <vfprintf+0x2ca>
     c7e:	29 7e       	andi	r18, 0xE9	; 233
     c80:	09 c0       	rjmp	.+18     	; 0xc94 <vfprintf+0x2dc>
     c82:	22 ff       	sbrs	r18, 2
     c84:	06 c0       	rjmp	.+12     	; 0xc92 <vfprintf+0x2da>
     c86:	73 94       	inc	r7
     c88:	73 94       	inc	r7
     c8a:	04 c0       	rjmp	.+8      	; 0xc94 <vfprintf+0x2dc>
     c8c:	82 2f       	mov	r24, r18
     c8e:	86 78       	andi	r24, 0x86	; 134
     c90:	09 f0       	breq	.+2      	; 0xc94 <vfprintf+0x2dc>
     c92:	73 94       	inc	r7
     c94:	23 fd       	sbrc	r18, 3
     c96:	13 c0       	rjmp	.+38     	; 0xcbe <vfprintf+0x306>
     c98:	20 ff       	sbrs	r18, 0
     c9a:	06 c0       	rjmp	.+12     	; 0xca8 <vfprintf+0x2f0>
     c9c:	5a 2c       	mov	r5, r10
     c9e:	73 14       	cp	r7, r3
     ca0:	18 f4       	brcc	.+6      	; 0xca8 <vfprintf+0x2f0>
     ca2:	53 0c       	add	r5, r3
     ca4:	57 18       	sub	r5, r7
     ca6:	73 2c       	mov	r7, r3
     ca8:	73 14       	cp	r7, r3
     caa:	68 f4       	brcc	.+26     	; 0xcc6 <vfprintf+0x30e>
     cac:	b7 01       	movw	r22, r14
     cae:	80 e2       	ldi	r24, 0x20	; 32
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	2c 87       	std	Y+12, r18	; 0x0c
     cb4:	0e 94 0e 08 	call	0x101c	; 0x101c <fputc>
     cb8:	73 94       	inc	r7
     cba:	2c 85       	ldd	r18, Y+12	; 0x0c
     cbc:	f5 cf       	rjmp	.-22     	; 0xca8 <vfprintf+0x2f0>
     cbe:	73 14       	cp	r7, r3
     cc0:	10 f4       	brcc	.+4      	; 0xcc6 <vfprintf+0x30e>
     cc2:	37 18       	sub	r3, r7
     cc4:	01 c0       	rjmp	.+2      	; 0xcc8 <vfprintf+0x310>
     cc6:	31 2c       	mov	r3, r1
     cc8:	24 ff       	sbrs	r18, 4
     cca:	12 c0       	rjmp	.+36     	; 0xcf0 <vfprintf+0x338>
     ccc:	b7 01       	movw	r22, r14
     cce:	80 e3       	ldi	r24, 0x30	; 48
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	2c 87       	std	Y+12, r18	; 0x0c
     cd4:	0e 94 0e 08 	call	0x101c	; 0x101c <fputc>
     cd8:	2c 85       	ldd	r18, Y+12	; 0x0c
     cda:	22 ff       	sbrs	r18, 2
     cdc:	17 c0       	rjmp	.+46     	; 0xd0c <vfprintf+0x354>
     cde:	21 ff       	sbrs	r18, 1
     ce0:	03 c0       	rjmp	.+6      	; 0xce8 <vfprintf+0x330>
     ce2:	88 e5       	ldi	r24, 0x58	; 88
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	02 c0       	rjmp	.+4      	; 0xcec <vfprintf+0x334>
     ce8:	88 e7       	ldi	r24, 0x78	; 120
     cea:	90 e0       	ldi	r25, 0x00	; 0
     cec:	b7 01       	movw	r22, r14
     cee:	0c c0       	rjmp	.+24     	; 0xd08 <vfprintf+0x350>
     cf0:	82 2f       	mov	r24, r18
     cf2:	86 78       	andi	r24, 0x86	; 134
     cf4:	59 f0       	breq	.+22     	; 0xd0c <vfprintf+0x354>
     cf6:	21 fd       	sbrc	r18, 1
     cf8:	02 c0       	rjmp	.+4      	; 0xcfe <vfprintf+0x346>
     cfa:	80 e2       	ldi	r24, 0x20	; 32
     cfc:	01 c0       	rjmp	.+2      	; 0xd00 <vfprintf+0x348>
     cfe:	8b e2       	ldi	r24, 0x2B	; 43
     d00:	27 fd       	sbrc	r18, 7
     d02:	8d e2       	ldi	r24, 0x2D	; 45
     d04:	b7 01       	movw	r22, r14
     d06:	90 e0       	ldi	r25, 0x00	; 0
     d08:	0e 94 0e 08 	call	0x101c	; 0x101c <fputc>
     d0c:	a5 14       	cp	r10, r5
     d0e:	38 f4       	brcc	.+14     	; 0xd1e <vfprintf+0x366>
     d10:	b7 01       	movw	r22, r14
     d12:	80 e3       	ldi	r24, 0x30	; 48
     d14:	90 e0       	ldi	r25, 0x00	; 0
     d16:	0e 94 0e 08 	call	0x101c	; 0x101c <fputc>
     d1a:	5a 94       	dec	r5
     d1c:	f7 cf       	rjmp	.-18     	; 0xd0c <vfprintf+0x354>
     d1e:	aa 94       	dec	r10
     d20:	f4 01       	movw	r30, r8
     d22:	ea 0d       	add	r30, r10
     d24:	f1 1d       	adc	r31, r1
     d26:	80 81       	ld	r24, Z
     d28:	b7 01       	movw	r22, r14
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	0e 94 0e 08 	call	0x101c	; 0x101c <fputc>
     d30:	a1 10       	cpse	r10, r1
     d32:	f5 cf       	rjmp	.-22     	; 0xd1e <vfprintf+0x366>
     d34:	33 20       	and	r3, r3
     d36:	09 f4       	brne	.+2      	; 0xd3a <vfprintf+0x382>
     d38:	51 ce       	rjmp	.-862    	; 0x9dc <vfprintf+0x24>
     d3a:	b7 01       	movw	r22, r14
     d3c:	80 e2       	ldi	r24, 0x20	; 32
     d3e:	90 e0       	ldi	r25, 0x00	; 0
     d40:	0e 94 0e 08 	call	0x101c	; 0x101c <fputc>
     d44:	3a 94       	dec	r3
     d46:	f6 cf       	rjmp	.-20     	; 0xd34 <vfprintf+0x37c>
     d48:	f7 01       	movw	r30, r14
     d4a:	86 81       	ldd	r24, Z+6	; 0x06
     d4c:	97 81       	ldd	r25, Z+7	; 0x07
     d4e:	02 c0       	rjmp	.+4      	; 0xd54 <vfprintf+0x39c>
     d50:	8f ef       	ldi	r24, 0xFF	; 255
     d52:	9f ef       	ldi	r25, 0xFF	; 255
     d54:	2c 96       	adiw	r28, 0x0c	; 12
     d56:	e2 e1       	ldi	r30, 0x12	; 18
     d58:	0c 94 ba 08 	jmp	0x1174	; 0x1174 <__epilogue_restores__>

00000d5c <calloc>:
     d5c:	0f 93       	push	r16
     d5e:	1f 93       	push	r17
     d60:	cf 93       	push	r28
     d62:	df 93       	push	r29
     d64:	86 9f       	mul	r24, r22
     d66:	80 01       	movw	r16, r0
     d68:	87 9f       	mul	r24, r23
     d6a:	10 0d       	add	r17, r0
     d6c:	96 9f       	mul	r25, r22
     d6e:	10 0d       	add	r17, r0
     d70:	11 24       	eor	r1, r1
     d72:	c8 01       	movw	r24, r16
     d74:	0e 94 ca 06 	call	0xd94	; 0xd94 <malloc>
     d78:	ec 01       	movw	r28, r24
     d7a:	00 97       	sbiw	r24, 0x00	; 0
     d7c:	29 f0       	breq	.+10     	; 0xd88 <calloc+0x2c>
     d7e:	a8 01       	movw	r20, r16
     d80:	60 e0       	ldi	r22, 0x00	; 0
     d82:	70 e0       	ldi	r23, 0x00	; 0
     d84:	0e 94 fc 07 	call	0xff8	; 0xff8 <memset>
     d88:	ce 01       	movw	r24, r28
     d8a:	df 91       	pop	r29
     d8c:	cf 91       	pop	r28
     d8e:	1f 91       	pop	r17
     d90:	0f 91       	pop	r16
     d92:	08 95       	ret

00000d94 <malloc>:
     d94:	cf 93       	push	r28
     d96:	df 93       	push	r29
     d98:	82 30       	cpi	r24, 0x02	; 2
     d9a:	91 05       	cpc	r25, r1
     d9c:	10 f4       	brcc	.+4      	; 0xda2 <malloc+0xe>
     d9e:	82 e0       	ldi	r24, 0x02	; 2
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	e0 91 44 01 	lds	r30, 0x0144
     da6:	f0 91 45 01 	lds	r31, 0x0145
     daa:	20 e0       	ldi	r18, 0x00	; 0
     dac:	30 e0       	ldi	r19, 0x00	; 0
     dae:	a0 e0       	ldi	r26, 0x00	; 0
     db0:	b0 e0       	ldi	r27, 0x00	; 0
     db2:	30 97       	sbiw	r30, 0x00	; 0
     db4:	39 f1       	breq	.+78     	; 0xe04 <malloc+0x70>
     db6:	40 81       	ld	r20, Z
     db8:	51 81       	ldd	r21, Z+1	; 0x01
     dba:	48 17       	cp	r20, r24
     dbc:	59 07       	cpc	r21, r25
     dbe:	b8 f0       	brcs	.+46     	; 0xdee <malloc+0x5a>
     dc0:	48 17       	cp	r20, r24
     dc2:	59 07       	cpc	r21, r25
     dc4:	71 f4       	brne	.+28     	; 0xde2 <malloc+0x4e>
     dc6:	82 81       	ldd	r24, Z+2	; 0x02
     dc8:	93 81       	ldd	r25, Z+3	; 0x03
     dca:	10 97       	sbiw	r26, 0x00	; 0
     dcc:	29 f0       	breq	.+10     	; 0xdd8 <malloc+0x44>
     dce:	13 96       	adiw	r26, 0x03	; 3
     dd0:	9c 93       	st	X, r25
     dd2:	8e 93       	st	-X, r24
     dd4:	12 97       	sbiw	r26, 0x02	; 2
     dd6:	2c c0       	rjmp	.+88     	; 0xe30 <malloc+0x9c>
     dd8:	90 93 45 01 	sts	0x0145, r25
     ddc:	80 93 44 01 	sts	0x0144, r24
     de0:	27 c0       	rjmp	.+78     	; 0xe30 <malloc+0x9c>
     de2:	21 15       	cp	r18, r1
     de4:	31 05       	cpc	r19, r1
     de6:	31 f0       	breq	.+12     	; 0xdf4 <malloc+0x60>
     de8:	42 17       	cp	r20, r18
     dea:	53 07       	cpc	r21, r19
     dec:	18 f0       	brcs	.+6      	; 0xdf4 <malloc+0x60>
     dee:	a9 01       	movw	r20, r18
     df0:	db 01       	movw	r26, r22
     df2:	01 c0       	rjmp	.+2      	; 0xdf6 <malloc+0x62>
     df4:	ef 01       	movw	r28, r30
     df6:	9a 01       	movw	r18, r20
     df8:	bd 01       	movw	r22, r26
     dfa:	df 01       	movw	r26, r30
     dfc:	02 80       	ldd	r0, Z+2	; 0x02
     dfe:	f3 81       	ldd	r31, Z+3	; 0x03
     e00:	e0 2d       	mov	r30, r0
     e02:	d7 cf       	rjmp	.-82     	; 0xdb2 <malloc+0x1e>
     e04:	21 15       	cp	r18, r1
     e06:	31 05       	cpc	r19, r1
     e08:	f9 f0       	breq	.+62     	; 0xe48 <malloc+0xb4>
     e0a:	28 1b       	sub	r18, r24
     e0c:	39 0b       	sbc	r19, r25
     e0e:	24 30       	cpi	r18, 0x04	; 4
     e10:	31 05       	cpc	r19, r1
     e12:	80 f4       	brcc	.+32     	; 0xe34 <malloc+0xa0>
     e14:	8a 81       	ldd	r24, Y+2	; 0x02
     e16:	9b 81       	ldd	r25, Y+3	; 0x03
     e18:	61 15       	cp	r22, r1
     e1a:	71 05       	cpc	r23, r1
     e1c:	21 f0       	breq	.+8      	; 0xe26 <malloc+0x92>
     e1e:	fb 01       	movw	r30, r22
     e20:	93 83       	std	Z+3, r25	; 0x03
     e22:	82 83       	std	Z+2, r24	; 0x02
     e24:	04 c0       	rjmp	.+8      	; 0xe2e <malloc+0x9a>
     e26:	90 93 45 01 	sts	0x0145, r25
     e2a:	80 93 44 01 	sts	0x0144, r24
     e2e:	fe 01       	movw	r30, r28
     e30:	32 96       	adiw	r30, 0x02	; 2
     e32:	44 c0       	rjmp	.+136    	; 0xebc <malloc+0x128>
     e34:	fe 01       	movw	r30, r28
     e36:	e2 0f       	add	r30, r18
     e38:	f3 1f       	adc	r31, r19
     e3a:	81 93       	st	Z+, r24
     e3c:	91 93       	st	Z+, r25
     e3e:	22 50       	subi	r18, 0x02	; 2
     e40:	31 09       	sbc	r19, r1
     e42:	39 83       	std	Y+1, r19	; 0x01
     e44:	28 83       	st	Y, r18
     e46:	3a c0       	rjmp	.+116    	; 0xebc <malloc+0x128>
     e48:	20 91 42 01 	lds	r18, 0x0142
     e4c:	30 91 43 01 	lds	r19, 0x0143
     e50:	23 2b       	or	r18, r19
     e52:	41 f4       	brne	.+16     	; 0xe64 <malloc+0xd0>
     e54:	20 91 02 01 	lds	r18, 0x0102
     e58:	30 91 03 01 	lds	r19, 0x0103
     e5c:	30 93 43 01 	sts	0x0143, r19
     e60:	20 93 42 01 	sts	0x0142, r18
     e64:	20 91 00 01 	lds	r18, 0x0100
     e68:	30 91 01 01 	lds	r19, 0x0101
     e6c:	21 15       	cp	r18, r1
     e6e:	31 05       	cpc	r19, r1
     e70:	41 f4       	brne	.+16     	; 0xe82 <malloc+0xee>
     e72:	2d b7       	in	r18, 0x3d	; 61
     e74:	3e b7       	in	r19, 0x3e	; 62
     e76:	40 91 04 01 	lds	r20, 0x0104
     e7a:	50 91 05 01 	lds	r21, 0x0105
     e7e:	24 1b       	sub	r18, r20
     e80:	35 0b       	sbc	r19, r21
     e82:	e0 91 42 01 	lds	r30, 0x0142
     e86:	f0 91 43 01 	lds	r31, 0x0143
     e8a:	e2 17       	cp	r30, r18
     e8c:	f3 07       	cpc	r31, r19
     e8e:	a0 f4       	brcc	.+40     	; 0xeb8 <malloc+0x124>
     e90:	2e 1b       	sub	r18, r30
     e92:	3f 0b       	sbc	r19, r31
     e94:	28 17       	cp	r18, r24
     e96:	39 07       	cpc	r19, r25
     e98:	78 f0       	brcs	.+30     	; 0xeb8 <malloc+0x124>
     e9a:	ac 01       	movw	r20, r24
     e9c:	4e 5f       	subi	r20, 0xFE	; 254
     e9e:	5f 4f       	sbci	r21, 0xFF	; 255
     ea0:	24 17       	cp	r18, r20
     ea2:	35 07       	cpc	r19, r21
     ea4:	48 f0       	brcs	.+18     	; 0xeb8 <malloc+0x124>
     ea6:	4e 0f       	add	r20, r30
     ea8:	5f 1f       	adc	r21, r31
     eaa:	50 93 43 01 	sts	0x0143, r21
     eae:	40 93 42 01 	sts	0x0142, r20
     eb2:	81 93       	st	Z+, r24
     eb4:	91 93       	st	Z+, r25
     eb6:	02 c0       	rjmp	.+4      	; 0xebc <malloc+0x128>
     eb8:	e0 e0       	ldi	r30, 0x00	; 0
     eba:	f0 e0       	ldi	r31, 0x00	; 0
     ebc:	cf 01       	movw	r24, r30
     ebe:	df 91       	pop	r29
     ec0:	cf 91       	pop	r28
     ec2:	08 95       	ret

00000ec4 <free>:
     ec4:	cf 93       	push	r28
     ec6:	df 93       	push	r29
     ec8:	00 97       	sbiw	r24, 0x00	; 0
     eca:	09 f4       	brne	.+2      	; 0xece <free+0xa>
     ecc:	87 c0       	rjmp	.+270    	; 0xfdc <free+0x118>
     ece:	fc 01       	movw	r30, r24
     ed0:	32 97       	sbiw	r30, 0x02	; 2
     ed2:	13 82       	std	Z+3, r1	; 0x03
     ed4:	12 82       	std	Z+2, r1	; 0x02
     ed6:	c0 91 44 01 	lds	r28, 0x0144
     eda:	d0 91 45 01 	lds	r29, 0x0145
     ede:	20 97       	sbiw	r28, 0x00	; 0
     ee0:	81 f4       	brne	.+32     	; 0xf02 <free+0x3e>
     ee2:	20 81       	ld	r18, Z
     ee4:	31 81       	ldd	r19, Z+1	; 0x01
     ee6:	28 0f       	add	r18, r24
     ee8:	39 1f       	adc	r19, r25
     eea:	80 91 42 01 	lds	r24, 0x0142
     eee:	90 91 43 01 	lds	r25, 0x0143
     ef2:	82 17       	cp	r24, r18
     ef4:	93 07       	cpc	r25, r19
     ef6:	79 f5       	brne	.+94     	; 0xf56 <free+0x92>
     ef8:	f0 93 43 01 	sts	0x0143, r31
     efc:	e0 93 42 01 	sts	0x0142, r30
     f00:	6d c0       	rjmp	.+218    	; 0xfdc <free+0x118>
     f02:	de 01       	movw	r26, r28
     f04:	20 e0       	ldi	r18, 0x00	; 0
     f06:	30 e0       	ldi	r19, 0x00	; 0
     f08:	ae 17       	cp	r26, r30
     f0a:	bf 07       	cpc	r27, r31
     f0c:	50 f4       	brcc	.+20     	; 0xf22 <free+0x5e>
     f0e:	12 96       	adiw	r26, 0x02	; 2
     f10:	4d 91       	ld	r20, X+
     f12:	5c 91       	ld	r21, X
     f14:	13 97       	sbiw	r26, 0x03	; 3
     f16:	9d 01       	movw	r18, r26
     f18:	41 15       	cp	r20, r1
     f1a:	51 05       	cpc	r21, r1
     f1c:	09 f1       	breq	.+66     	; 0xf60 <free+0x9c>
     f1e:	da 01       	movw	r26, r20
     f20:	f3 cf       	rjmp	.-26     	; 0xf08 <free+0x44>
     f22:	b3 83       	std	Z+3, r27	; 0x03
     f24:	a2 83       	std	Z+2, r26	; 0x02
     f26:	40 81       	ld	r20, Z
     f28:	51 81       	ldd	r21, Z+1	; 0x01
     f2a:	84 0f       	add	r24, r20
     f2c:	95 1f       	adc	r25, r21
     f2e:	8a 17       	cp	r24, r26
     f30:	9b 07       	cpc	r25, r27
     f32:	71 f4       	brne	.+28     	; 0xf50 <free+0x8c>
     f34:	8d 91       	ld	r24, X+
     f36:	9c 91       	ld	r25, X
     f38:	11 97       	sbiw	r26, 0x01	; 1
     f3a:	84 0f       	add	r24, r20
     f3c:	95 1f       	adc	r25, r21
     f3e:	02 96       	adiw	r24, 0x02	; 2
     f40:	91 83       	std	Z+1, r25	; 0x01
     f42:	80 83       	st	Z, r24
     f44:	12 96       	adiw	r26, 0x02	; 2
     f46:	8d 91       	ld	r24, X+
     f48:	9c 91       	ld	r25, X
     f4a:	13 97       	sbiw	r26, 0x03	; 3
     f4c:	93 83       	std	Z+3, r25	; 0x03
     f4e:	82 83       	std	Z+2, r24	; 0x02
     f50:	21 15       	cp	r18, r1
     f52:	31 05       	cpc	r19, r1
     f54:	29 f4       	brne	.+10     	; 0xf60 <free+0x9c>
     f56:	f0 93 45 01 	sts	0x0145, r31
     f5a:	e0 93 44 01 	sts	0x0144, r30
     f5e:	3e c0       	rjmp	.+124    	; 0xfdc <free+0x118>
     f60:	d9 01       	movw	r26, r18
     f62:	13 96       	adiw	r26, 0x03	; 3
     f64:	fc 93       	st	X, r31
     f66:	ee 93       	st	-X, r30
     f68:	12 97       	sbiw	r26, 0x02	; 2
     f6a:	4d 91       	ld	r20, X+
     f6c:	5d 91       	ld	r21, X+
     f6e:	a4 0f       	add	r26, r20
     f70:	b5 1f       	adc	r27, r21
     f72:	ea 17       	cp	r30, r26
     f74:	fb 07       	cpc	r31, r27
     f76:	79 f4       	brne	.+30     	; 0xf96 <free+0xd2>
     f78:	80 81       	ld	r24, Z
     f7a:	91 81       	ldd	r25, Z+1	; 0x01
     f7c:	84 0f       	add	r24, r20
     f7e:	95 1f       	adc	r25, r21
     f80:	02 96       	adiw	r24, 0x02	; 2
     f82:	d9 01       	movw	r26, r18
     f84:	11 96       	adiw	r26, 0x01	; 1
     f86:	9c 93       	st	X, r25
     f88:	8e 93       	st	-X, r24
     f8a:	82 81       	ldd	r24, Z+2	; 0x02
     f8c:	93 81       	ldd	r25, Z+3	; 0x03
     f8e:	13 96       	adiw	r26, 0x03	; 3
     f90:	9c 93       	st	X, r25
     f92:	8e 93       	st	-X, r24
     f94:	12 97       	sbiw	r26, 0x02	; 2
     f96:	e0 e0       	ldi	r30, 0x00	; 0
     f98:	f0 e0       	ldi	r31, 0x00	; 0
     f9a:	8a 81       	ldd	r24, Y+2	; 0x02
     f9c:	9b 81       	ldd	r25, Y+3	; 0x03
     f9e:	00 97       	sbiw	r24, 0x00	; 0
     fa0:	19 f0       	breq	.+6      	; 0xfa8 <free+0xe4>
     fa2:	fe 01       	movw	r30, r28
     fa4:	ec 01       	movw	r28, r24
     fa6:	f9 cf       	rjmp	.-14     	; 0xf9a <free+0xd6>
     fa8:	ce 01       	movw	r24, r28
     faa:	02 96       	adiw	r24, 0x02	; 2
     fac:	28 81       	ld	r18, Y
     fae:	39 81       	ldd	r19, Y+1	; 0x01
     fb0:	82 0f       	add	r24, r18
     fb2:	93 1f       	adc	r25, r19
     fb4:	20 91 42 01 	lds	r18, 0x0142
     fb8:	30 91 43 01 	lds	r19, 0x0143
     fbc:	28 17       	cp	r18, r24
     fbe:	39 07       	cpc	r19, r25
     fc0:	69 f4       	brne	.+26     	; 0xfdc <free+0x118>
     fc2:	30 97       	sbiw	r30, 0x00	; 0
     fc4:	29 f4       	brne	.+10     	; 0xfd0 <free+0x10c>
     fc6:	10 92 45 01 	sts	0x0145, r1
     fca:	10 92 44 01 	sts	0x0144, r1
     fce:	02 c0       	rjmp	.+4      	; 0xfd4 <free+0x110>
     fd0:	13 82       	std	Z+3, r1	; 0x03
     fd2:	12 82       	std	Z+2, r1	; 0x02
     fd4:	d0 93 43 01 	sts	0x0143, r29
     fd8:	c0 93 42 01 	sts	0x0142, r28
     fdc:	df 91       	pop	r29
     fde:	cf 91       	pop	r28
     fe0:	08 95       	ret

00000fe2 <strnlen_P>:
     fe2:	fc 01       	movw	r30, r24
     fe4:	05 90       	lpm	r0, Z+
     fe6:	61 50       	subi	r22, 0x01	; 1
     fe8:	70 40       	sbci	r23, 0x00	; 0
     fea:	01 10       	cpse	r0, r1
     fec:	d8 f7       	brcc	.-10     	; 0xfe4 <strnlen_P+0x2>
     fee:	80 95       	com	r24
     ff0:	90 95       	com	r25
     ff2:	8e 0f       	add	r24, r30
     ff4:	9f 1f       	adc	r25, r31
     ff6:	08 95       	ret

00000ff8 <memset>:
     ff8:	dc 01       	movw	r26, r24
     ffa:	01 c0       	rjmp	.+2      	; 0xffe <memset+0x6>
     ffc:	6d 93       	st	X+, r22
     ffe:	41 50       	subi	r20, 0x01	; 1
    1000:	50 40       	sbci	r21, 0x00	; 0
    1002:	e0 f7       	brcc	.-8      	; 0xffc <memset+0x4>
    1004:	08 95       	ret

00001006 <strnlen>:
    1006:	fc 01       	movw	r30, r24
    1008:	61 50       	subi	r22, 0x01	; 1
    100a:	70 40       	sbci	r23, 0x00	; 0
    100c:	01 90       	ld	r0, Z+
    100e:	01 10       	cpse	r0, r1
    1010:	d8 f7       	brcc	.-10     	; 0x1008 <strnlen+0x2>
    1012:	80 95       	com	r24
    1014:	90 95       	com	r25
    1016:	8e 0f       	add	r24, r30
    1018:	9f 1f       	adc	r25, r31
    101a:	08 95       	ret

0000101c <fputc>:
    101c:	0f 93       	push	r16
    101e:	1f 93       	push	r17
    1020:	cf 93       	push	r28
    1022:	df 93       	push	r29
    1024:	18 2f       	mov	r17, r24
    1026:	09 2f       	mov	r16, r25
    1028:	eb 01       	movw	r28, r22
    102a:	8b 81       	ldd	r24, Y+3	; 0x03
    102c:	81 fd       	sbrc	r24, 1
    102e:	03 c0       	rjmp	.+6      	; 0x1036 <fputc+0x1a>
    1030:	8f ef       	ldi	r24, 0xFF	; 255
    1032:	9f ef       	ldi	r25, 0xFF	; 255
    1034:	20 c0       	rjmp	.+64     	; 0x1076 <fputc+0x5a>
    1036:	82 ff       	sbrs	r24, 2
    1038:	10 c0       	rjmp	.+32     	; 0x105a <fputc+0x3e>
    103a:	4e 81       	ldd	r20, Y+6	; 0x06
    103c:	5f 81       	ldd	r21, Y+7	; 0x07
    103e:	2c 81       	ldd	r18, Y+4	; 0x04
    1040:	3d 81       	ldd	r19, Y+5	; 0x05
    1042:	42 17       	cp	r20, r18
    1044:	53 07       	cpc	r21, r19
    1046:	7c f4       	brge	.+30     	; 0x1066 <fputc+0x4a>
    1048:	e8 81       	ld	r30, Y
    104a:	f9 81       	ldd	r31, Y+1	; 0x01
    104c:	9f 01       	movw	r18, r30
    104e:	2f 5f       	subi	r18, 0xFF	; 255
    1050:	3f 4f       	sbci	r19, 0xFF	; 255
    1052:	39 83       	std	Y+1, r19	; 0x01
    1054:	28 83       	st	Y, r18
    1056:	10 83       	st	Z, r17
    1058:	06 c0       	rjmp	.+12     	; 0x1066 <fputc+0x4a>
    105a:	e8 85       	ldd	r30, Y+8	; 0x08
    105c:	f9 85       	ldd	r31, Y+9	; 0x09
    105e:	81 2f       	mov	r24, r17
    1060:	09 95       	icall
    1062:	89 2b       	or	r24, r25
    1064:	29 f7       	brne	.-54     	; 0x1030 <fputc+0x14>
    1066:	2e 81       	ldd	r18, Y+6	; 0x06
    1068:	3f 81       	ldd	r19, Y+7	; 0x07
    106a:	2f 5f       	subi	r18, 0xFF	; 255
    106c:	3f 4f       	sbci	r19, 0xFF	; 255
    106e:	3f 83       	std	Y+7, r19	; 0x07
    1070:	2e 83       	std	Y+6, r18	; 0x06
    1072:	81 2f       	mov	r24, r17
    1074:	90 2f       	mov	r25, r16
    1076:	df 91       	pop	r29
    1078:	cf 91       	pop	r28
    107a:	1f 91       	pop	r17
    107c:	0f 91       	pop	r16
    107e:	08 95       	ret

00001080 <__ultoa_invert>:
    1080:	fa 01       	movw	r30, r20
    1082:	aa 27       	eor	r26, r26
    1084:	28 30       	cpi	r18, 0x08	; 8
    1086:	51 f1       	breq	.+84     	; 0x10dc <__ultoa_invert+0x5c>
    1088:	20 31       	cpi	r18, 0x10	; 16
    108a:	81 f1       	breq	.+96     	; 0x10ec <__ultoa_invert+0x6c>
    108c:	e8 94       	clt
    108e:	6f 93       	push	r22
    1090:	6e 7f       	andi	r22, 0xFE	; 254
    1092:	6e 5f       	subi	r22, 0xFE	; 254
    1094:	7f 4f       	sbci	r23, 0xFF	; 255
    1096:	8f 4f       	sbci	r24, 0xFF	; 255
    1098:	9f 4f       	sbci	r25, 0xFF	; 255
    109a:	af 4f       	sbci	r26, 0xFF	; 255
    109c:	b1 e0       	ldi	r27, 0x01	; 1
    109e:	3e d0       	rcall	.+124    	; 0x111c <__ultoa_invert+0x9c>
    10a0:	b4 e0       	ldi	r27, 0x04	; 4
    10a2:	3c d0       	rcall	.+120    	; 0x111c <__ultoa_invert+0x9c>
    10a4:	67 0f       	add	r22, r23
    10a6:	78 1f       	adc	r23, r24
    10a8:	89 1f       	adc	r24, r25
    10aa:	9a 1f       	adc	r25, r26
    10ac:	a1 1d       	adc	r26, r1
    10ae:	68 0f       	add	r22, r24
    10b0:	79 1f       	adc	r23, r25
    10b2:	8a 1f       	adc	r24, r26
    10b4:	91 1d       	adc	r25, r1
    10b6:	a1 1d       	adc	r26, r1
    10b8:	6a 0f       	add	r22, r26
    10ba:	71 1d       	adc	r23, r1
    10bc:	81 1d       	adc	r24, r1
    10be:	91 1d       	adc	r25, r1
    10c0:	a1 1d       	adc	r26, r1
    10c2:	20 d0       	rcall	.+64     	; 0x1104 <__ultoa_invert+0x84>
    10c4:	09 f4       	brne	.+2      	; 0x10c8 <__ultoa_invert+0x48>
    10c6:	68 94       	set
    10c8:	3f 91       	pop	r19
    10ca:	2a e0       	ldi	r18, 0x0A	; 10
    10cc:	26 9f       	mul	r18, r22
    10ce:	11 24       	eor	r1, r1
    10d0:	30 19       	sub	r19, r0
    10d2:	30 5d       	subi	r19, 0xD0	; 208
    10d4:	31 93       	st	Z+, r19
    10d6:	de f6       	brtc	.-74     	; 0x108e <__ultoa_invert+0xe>
    10d8:	cf 01       	movw	r24, r30
    10da:	08 95       	ret
    10dc:	46 2f       	mov	r20, r22
    10de:	47 70       	andi	r20, 0x07	; 7
    10e0:	40 5d       	subi	r20, 0xD0	; 208
    10e2:	41 93       	st	Z+, r20
    10e4:	b3 e0       	ldi	r27, 0x03	; 3
    10e6:	0f d0       	rcall	.+30     	; 0x1106 <__ultoa_invert+0x86>
    10e8:	c9 f7       	brne	.-14     	; 0x10dc <__ultoa_invert+0x5c>
    10ea:	f6 cf       	rjmp	.-20     	; 0x10d8 <__ultoa_invert+0x58>
    10ec:	46 2f       	mov	r20, r22
    10ee:	4f 70       	andi	r20, 0x0F	; 15
    10f0:	40 5d       	subi	r20, 0xD0	; 208
    10f2:	4a 33       	cpi	r20, 0x3A	; 58
    10f4:	18 f0       	brcs	.+6      	; 0x10fc <__ultoa_invert+0x7c>
    10f6:	49 5d       	subi	r20, 0xD9	; 217
    10f8:	31 fd       	sbrc	r19, 1
    10fa:	40 52       	subi	r20, 0x20	; 32
    10fc:	41 93       	st	Z+, r20
    10fe:	02 d0       	rcall	.+4      	; 0x1104 <__ultoa_invert+0x84>
    1100:	a9 f7       	brne	.-22     	; 0x10ec <__ultoa_invert+0x6c>
    1102:	ea cf       	rjmp	.-44     	; 0x10d8 <__ultoa_invert+0x58>
    1104:	b4 e0       	ldi	r27, 0x04	; 4
    1106:	a6 95       	lsr	r26
    1108:	97 95       	ror	r25
    110a:	87 95       	ror	r24
    110c:	77 95       	ror	r23
    110e:	67 95       	ror	r22
    1110:	ba 95       	dec	r27
    1112:	c9 f7       	brne	.-14     	; 0x1106 <__ultoa_invert+0x86>
    1114:	00 97       	sbiw	r24, 0x00	; 0
    1116:	61 05       	cpc	r22, r1
    1118:	71 05       	cpc	r23, r1
    111a:	08 95       	ret
    111c:	9b 01       	movw	r18, r22
    111e:	ac 01       	movw	r20, r24
    1120:	0a 2e       	mov	r0, r26
    1122:	06 94       	lsr	r0
    1124:	57 95       	ror	r21
    1126:	47 95       	ror	r20
    1128:	37 95       	ror	r19
    112a:	27 95       	ror	r18
    112c:	ba 95       	dec	r27
    112e:	c9 f7       	brne	.-14     	; 0x1122 <__ultoa_invert+0xa2>
    1130:	62 0f       	add	r22, r18
    1132:	73 1f       	adc	r23, r19
    1134:	84 1f       	adc	r24, r20
    1136:	95 1f       	adc	r25, r21
    1138:	a0 1d       	adc	r26, r0
    113a:	08 95       	ret

0000113c <__prologue_saves__>:
    113c:	2f 92       	push	r2
    113e:	3f 92       	push	r3
    1140:	4f 92       	push	r4
    1142:	5f 92       	push	r5
    1144:	6f 92       	push	r6
    1146:	7f 92       	push	r7
    1148:	8f 92       	push	r8
    114a:	9f 92       	push	r9
    114c:	af 92       	push	r10
    114e:	bf 92       	push	r11
    1150:	cf 92       	push	r12
    1152:	df 92       	push	r13
    1154:	ef 92       	push	r14
    1156:	ff 92       	push	r15
    1158:	0f 93       	push	r16
    115a:	1f 93       	push	r17
    115c:	cf 93       	push	r28
    115e:	df 93       	push	r29
    1160:	cd b7       	in	r28, 0x3d	; 61
    1162:	de b7       	in	r29, 0x3e	; 62
    1164:	ca 1b       	sub	r28, r26
    1166:	db 0b       	sbc	r29, r27
    1168:	0f b6       	in	r0, 0x3f	; 63
    116a:	f8 94       	cli
    116c:	de bf       	out	0x3e, r29	; 62
    116e:	0f be       	out	0x3f, r0	; 63
    1170:	cd bf       	out	0x3d, r28	; 61
    1172:	09 94       	ijmp

00001174 <__epilogue_restores__>:
    1174:	2a 88       	ldd	r2, Y+18	; 0x12
    1176:	39 88       	ldd	r3, Y+17	; 0x11
    1178:	48 88       	ldd	r4, Y+16	; 0x10
    117a:	5f 84       	ldd	r5, Y+15	; 0x0f
    117c:	6e 84       	ldd	r6, Y+14	; 0x0e
    117e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1180:	8c 84       	ldd	r8, Y+12	; 0x0c
    1182:	9b 84       	ldd	r9, Y+11	; 0x0b
    1184:	aa 84       	ldd	r10, Y+10	; 0x0a
    1186:	b9 84       	ldd	r11, Y+9	; 0x09
    1188:	c8 84       	ldd	r12, Y+8	; 0x08
    118a:	df 80       	ldd	r13, Y+7	; 0x07
    118c:	ee 80       	ldd	r14, Y+6	; 0x06
    118e:	fd 80       	ldd	r15, Y+5	; 0x05
    1190:	0c 81       	ldd	r16, Y+4	; 0x04
    1192:	1b 81       	ldd	r17, Y+3	; 0x03
    1194:	aa 81       	ldd	r26, Y+2	; 0x02
    1196:	b9 81       	ldd	r27, Y+1	; 0x01
    1198:	ce 0f       	add	r28, r30
    119a:	d1 1d       	adc	r29, r1
    119c:	0f b6       	in	r0, 0x3f	; 63
    119e:	f8 94       	cli
    11a0:	de bf       	out	0x3e, r29	; 62
    11a2:	0f be       	out	0x3f, r0	; 63
    11a4:	cd bf       	out	0x3d, r28	; 61
    11a6:	ed 01       	movw	r28, r26
    11a8:	08 95       	ret

000011aa <_exit>:
    11aa:	f8 94       	cli

000011ac <__stop_program>:
    11ac:	ff cf       	rjmp	.-2      	; 0x11ac <__stop_program>

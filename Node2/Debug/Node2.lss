
Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800200  00001240  000012d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001240  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000013  0080021a  0080021a  000012ee  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000012ee  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001c8  00000000  00000000  0000134a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000013c4  00000000  00000000  00001512  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ad0  00000000  00000000  000028d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000d6b  00000000  00000000  000033a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000003d0  00000000  00000000  00004114  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000060a  00000000  00000000  000044e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000aa4  00000000  00000000  00004aee  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000150  00000000  00000000  00005592  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c2 c0       	rjmp	.+388    	; 0x186 <__ctors_end>
       2:	00 00       	nop
       4:	e0 c0       	rjmp	.+448    	; 0x1c6 <__bad_interrupt>
       6:	00 00       	nop
       8:	de c0       	rjmp	.+444    	; 0x1c6 <__bad_interrupt>
       a:	00 00       	nop
       c:	dc c0       	rjmp	.+440    	; 0x1c6 <__bad_interrupt>
       e:	00 00       	nop
      10:	da c0       	rjmp	.+436    	; 0x1c6 <__bad_interrupt>
      12:	00 00       	nop
      14:	d8 c0       	rjmp	.+432    	; 0x1c6 <__bad_interrupt>
      16:	00 00       	nop
      18:	d6 c0       	rjmp	.+428    	; 0x1c6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	d4 c0       	rjmp	.+424    	; 0x1c6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	d2 c0       	rjmp	.+420    	; 0x1c6 <__bad_interrupt>
      22:	00 00       	nop
      24:	d0 c0       	rjmp	.+416    	; 0x1c6 <__bad_interrupt>
      26:	00 00       	nop
      28:	ce c0       	rjmp	.+412    	; 0x1c6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	cc c0       	rjmp	.+408    	; 0x1c6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	ca c0       	rjmp	.+404    	; 0x1c6 <__bad_interrupt>
      32:	00 00       	nop
      34:	c8 c0       	rjmp	.+400    	; 0x1c6 <__bad_interrupt>
      36:	00 00       	nop
      38:	c6 c0       	rjmp	.+396    	; 0x1c6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c4 c0       	rjmp	.+392    	; 0x1c6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	c2 c0       	rjmp	.+388    	; 0x1c6 <__bad_interrupt>
      42:	00 00       	nop
      44:	c0 c0       	rjmp	.+384    	; 0x1c6 <__bad_interrupt>
      46:	00 00       	nop
      48:	be c0       	rjmp	.+380    	; 0x1c6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	bc c0       	rjmp	.+376    	; 0x1c6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ba c0       	rjmp	.+372    	; 0x1c6 <__bad_interrupt>
      52:	00 00       	nop
      54:	b8 c0       	rjmp	.+368    	; 0x1c6 <__bad_interrupt>
      56:	00 00       	nop
      58:	b6 c0       	rjmp	.+364    	; 0x1c6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b4 c0       	rjmp	.+360    	; 0x1c6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	b2 c0       	rjmp	.+356    	; 0x1c6 <__bad_interrupt>
      62:	00 00       	nop
      64:	b0 c0       	rjmp	.+352    	; 0x1c6 <__bad_interrupt>
      66:	00 00       	nop
      68:	ae c0       	rjmp	.+348    	; 0x1c6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ac c0       	rjmp	.+344    	; 0x1c6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	aa c0       	rjmp	.+340    	; 0x1c6 <__bad_interrupt>
      72:	00 00       	nop
      74:	a8 c0       	rjmp	.+336    	; 0x1c6 <__bad_interrupt>
      76:	00 00       	nop
      78:	a6 c0       	rjmp	.+332    	; 0x1c6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a4 c0       	rjmp	.+328    	; 0x1c6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	a2 c0       	rjmp	.+324    	; 0x1c6 <__bad_interrupt>
      82:	00 00       	nop
      84:	a0 c0       	rjmp	.+320    	; 0x1c6 <__bad_interrupt>
      86:	00 00       	nop
      88:	9e c0       	rjmp	.+316    	; 0x1c6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	9c c0       	rjmp	.+312    	; 0x1c6 <__bad_interrupt>
      8e:	00 00       	nop
      90:	9a c0       	rjmp	.+308    	; 0x1c6 <__bad_interrupt>
      92:	00 00       	nop
      94:	98 c0       	rjmp	.+304    	; 0x1c6 <__bad_interrupt>
      96:	00 00       	nop
      98:	96 c0       	rjmp	.+300    	; 0x1c6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	6e c2       	rjmp	.+1244   	; 0x57a <__vector_39>
      9e:	00 00       	nop
      a0:	92 c0       	rjmp	.+292    	; 0x1c6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	90 c0       	rjmp	.+288    	; 0x1c6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	8e c0       	rjmp	.+284    	; 0x1c6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	8c c0       	rjmp	.+280    	; 0x1c6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	8a c0       	rjmp	.+276    	; 0x1c6 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	88 c0       	rjmp	.+272    	; 0x1c6 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	86 c0       	rjmp	.+268    	; 0x1c6 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	84 c0       	rjmp	.+264    	; 0x1c6 <__bad_interrupt>
      be:	00 00       	nop
      c0:	82 c0       	rjmp	.+260    	; 0x1c6 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	80 c0       	rjmp	.+256    	; 0x1c6 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	7e c0       	rjmp	.+252    	; 0x1c6 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	7c c0       	rjmp	.+248    	; 0x1c6 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	7a c0       	rjmp	.+244    	; 0x1c6 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	78 c0       	rjmp	.+240    	; 0x1c6 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	76 c0       	rjmp	.+236    	; 0x1c6 <__bad_interrupt>
      da:	00 00       	nop
      dc:	74 c0       	rjmp	.+232    	; 0x1c6 <__bad_interrupt>
      de:	00 00       	nop
      e0:	72 c0       	rjmp	.+228    	; 0x1c6 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	d8 02       	muls	r29, r24
      e6:	2a 03       	fmul	r18, r18
      e8:	2a 03       	fmul	r18, r18
      ea:	2a 03       	fmul	r18, r18
      ec:	2a 03       	fmul	r18, r18
      ee:	2a 03       	fmul	r18, r18
      f0:	2a 03       	fmul	r18, r18
      f2:	2a 03       	fmul	r18, r18
      f4:	d8 02       	muls	r29, r24
      f6:	2a 03       	fmul	r18, r18
      f8:	2a 03       	fmul	r18, r18
      fa:	2a 03       	fmul	r18, r18
      fc:	2a 03       	fmul	r18, r18
      fe:	2a 03       	fmul	r18, r18
     100:	2a 03       	fmul	r18, r18
     102:	2a 03       	fmul	r18, r18
     104:	da 02       	muls	r29, r26
     106:	2a 03       	fmul	r18, r18
     108:	2a 03       	fmul	r18, r18
     10a:	2a 03       	fmul	r18, r18
     10c:	2a 03       	fmul	r18, r18
     10e:	2a 03       	fmul	r18, r18
     110:	2a 03       	fmul	r18, r18
     112:	2a 03       	fmul	r18, r18
     114:	2a 03       	fmul	r18, r18
     116:	2a 03       	fmul	r18, r18
     118:	2a 03       	fmul	r18, r18
     11a:	2a 03       	fmul	r18, r18
     11c:	2a 03       	fmul	r18, r18
     11e:	2a 03       	fmul	r18, r18
     120:	2a 03       	fmul	r18, r18
     122:	2a 03       	fmul	r18, r18
     124:	da 02       	muls	r29, r26
     126:	2a 03       	fmul	r18, r18
     128:	2a 03       	fmul	r18, r18
     12a:	2a 03       	fmul	r18, r18
     12c:	2a 03       	fmul	r18, r18
     12e:	2a 03       	fmul	r18, r18
     130:	2a 03       	fmul	r18, r18
     132:	2a 03       	fmul	r18, r18
     134:	2a 03       	fmul	r18, r18
     136:	2a 03       	fmul	r18, r18
     138:	2a 03       	fmul	r18, r18
     13a:	2a 03       	fmul	r18, r18
     13c:	2a 03       	fmul	r18, r18
     13e:	2a 03       	fmul	r18, r18
     140:	2a 03       	fmul	r18, r18
     142:	2a 03       	fmul	r18, r18
     144:	26 03       	mulsu	r18, r22
     146:	2a 03       	fmul	r18, r18
     148:	2a 03       	fmul	r18, r18
     14a:	2a 03       	fmul	r18, r18
     14c:	2a 03       	fmul	r18, r18
     14e:	2a 03       	fmul	r18, r18
     150:	2a 03       	fmul	r18, r18
     152:	2a 03       	fmul	r18, r18
     154:	03 03       	mulsu	r16, r19
     156:	2a 03       	fmul	r18, r18
     158:	2a 03       	fmul	r18, r18
     15a:	2a 03       	fmul	r18, r18
     15c:	2a 03       	fmul	r18, r18
     15e:	2a 03       	fmul	r18, r18
     160:	2a 03       	fmul	r18, r18
     162:	2a 03       	fmul	r18, r18
     164:	2a 03       	fmul	r18, r18
     166:	2a 03       	fmul	r18, r18
     168:	2a 03       	fmul	r18, r18
     16a:	2a 03       	fmul	r18, r18
     16c:	2a 03       	fmul	r18, r18
     16e:	2a 03       	fmul	r18, r18
     170:	2a 03       	fmul	r18, r18
     172:	2a 03       	fmul	r18, r18
     174:	f7 02       	muls	r31, r23
     176:	2a 03       	fmul	r18, r18
     178:	2a 03       	fmul	r18, r18
     17a:	2a 03       	fmul	r18, r18
     17c:	2a 03       	fmul	r18, r18
     17e:	2a 03       	fmul	r18, r18
     180:	2a 03       	fmul	r18, r18
     182:	2a 03       	fmul	r18, r18
     184:	15 03       	mulsu	r17, r21

00000186 <__ctors_end>:
     186:	11 24       	eor	r1, r1
     188:	1f be       	out	0x3f, r1	; 63
     18a:	cf ef       	ldi	r28, 0xFF	; 255
     18c:	d1 e2       	ldi	r29, 0x21	; 33
     18e:	de bf       	out	0x3e, r29	; 62
     190:	cd bf       	out	0x3d, r28	; 61
     192:	00 e0       	ldi	r16, 0x00	; 0
     194:	0c bf       	out	0x3c, r16	; 60

00000196 <__do_copy_data>:
     196:	12 e0       	ldi	r17, 0x02	; 2
     198:	a0 e0       	ldi	r26, 0x00	; 0
     19a:	b2 e0       	ldi	r27, 0x02	; 2
     19c:	e0 e4       	ldi	r30, 0x40	; 64
     19e:	f2 e1       	ldi	r31, 0x12	; 18
     1a0:	00 e0       	ldi	r16, 0x00	; 0
     1a2:	0b bf       	out	0x3b, r16	; 59
     1a4:	02 c0       	rjmp	.+4      	; 0x1aa <__do_copy_data+0x14>
     1a6:	07 90       	elpm	r0, Z+
     1a8:	0d 92       	st	X+, r0
     1aa:	aa 31       	cpi	r26, 0x1A	; 26
     1ac:	b1 07       	cpc	r27, r17
     1ae:	d9 f7       	brne	.-10     	; 0x1a6 <__do_copy_data+0x10>

000001b0 <__do_clear_bss>:
     1b0:	22 e0       	ldi	r18, 0x02	; 2
     1b2:	aa e1       	ldi	r26, 0x1A	; 26
     1b4:	b2 e0       	ldi	r27, 0x02	; 2
     1b6:	01 c0       	rjmp	.+2      	; 0x1ba <.do_clear_bss_start>

000001b8 <.do_clear_bss_loop>:
     1b8:	1d 92       	st	X+, r1

000001ba <.do_clear_bss_start>:
     1ba:	ad 32       	cpi	r26, 0x2D	; 45
     1bc:	b2 07       	cpc	r27, r18
     1be:	e1 f7       	brne	.-8      	; 0x1b8 <.do_clear_bss_loop>
     1c0:	d0 d0       	rcall	.+416    	; 0x362 <main>
     1c2:	0c 94 1e 09 	jmp	0x123c	; 0x123c <_exit>

000001c6 <__bad_interrupt>:
     1c6:	1c cf       	rjmp	.-456    	; 0x0 <__vectors>

000001c8 <adc_init>:
     1c8:	ea e7       	ldi	r30, 0x7A	; 122
     1ca:	f0 e0       	ldi	r31, 0x00	; 0
     1cc:	80 81       	ld	r24, Z
     1ce:	80 68       	ori	r24, 0x80	; 128
     1d0:	80 83       	st	Z, r24
     1d2:	ac e7       	ldi	r26, 0x7C	; 124
     1d4:	b0 e0       	ldi	r27, 0x00	; 0
     1d6:	8c 91       	ld	r24, X
     1d8:	80 6c       	ori	r24, 0xC0	; 192
     1da:	8c 93       	st	X, r24
     1dc:	80 81       	ld	r24, Z
     1de:	87 60       	ori	r24, 0x07	; 7
     1e0:	80 83       	st	Z, r24
     1e2:	08 95       	ret

000001e4 <adc_read>:
     1e4:	ea e7       	ldi	r30, 0x7A	; 122
     1e6:	f0 e0       	ldi	r31, 0x00	; 0
     1e8:	80 81       	ld	r24, Z
     1ea:	80 64       	ori	r24, 0x40	; 64
     1ec:	80 83       	st	Z, r24
     1ee:	80 81       	ld	r24, Z
     1f0:	86 fd       	sbrc	r24, 6
     1f2:	fd cf       	rjmp	.-6      	; 0x1ee <adc_read+0xa>
     1f4:	80 91 78 00 	lds	r24, 0x0078
     1f8:	90 91 79 00 	lds	r25, 0x0079
     1fc:	08 95       	ret

000001fe <can_init>:
	
	mcp_request_to_send(buffer == 2, buffer == 1, buffer == 0);	//Request to send - sending will start as soon as the bus is clear
	
	//TODO: (maybe) print error message?
	//TXBnCTRL.TXERR and the CANINTF.MERRF bits will be set and an interrupt will be generated on the INT pin if the CANINTE.MERRE bit is set
}
     1fe:	cf 93       	push	r28
     200:	c8 2f       	mov	r28, r24
     202:	40 e0       	ldi	r20, 0x00	; 0
     204:	6c e1       	ldi	r22, 0x1C	; 28
     206:	8b e2       	ldi	r24, 0x2B	; 43
     208:	76 d0       	rcall	.+236    	; 0x2f6 <mcp_bit_modify>
     20a:	40 e6       	ldi	r20, 0x60	; 96
     20c:	60 e6       	ldi	r22, 0x60	; 96
     20e:	80 e6       	ldi	r24, 0x60	; 96
     210:	72 d0       	rcall	.+228    	; 0x2f6 <mcp_bit_modify>
     212:	4c 2f       	mov	r20, r28
     214:	6f ef       	ldi	r22, 0xFF	; 255
     216:	8f e0       	ldi	r24, 0x0F	; 15
     218:	6e d0       	rcall	.+220    	; 0x2f6 <mcp_bit_modify>
     21a:	cf 91       	pop	r28
     21c:	08 95       	ret

0000021e <can_receive>:

Msg can_receive(){
     21e:	8f 92       	push	r8
     220:	9f 92       	push	r9
     222:	af 92       	push	r10
     224:	bf 92       	push	r11
     226:	cf 92       	push	r12
     228:	df 92       	push	r13
     22a:	ef 92       	push	r14
     22c:	ff 92       	push	r15
     22e:	0f 93       	push	r16
     230:	1f 93       	push	r17
     232:	cf 93       	push	r28
     234:	df 93       	push	r29
     236:	00 d0       	rcall	.+0      	; 0x238 <can_receive+0x1a>
     238:	00 d0       	rcall	.+0      	; 0x23a <can_receive+0x1c>
     23a:	cd b7       	in	r28, 0x3d	; 61
     23c:	de b7       	in	r29, 0x3e	; 62
	int buffer = 0; //n = 1 or 2
	
	Msg msg;
	msg.id = ((int)mcp_read(0x61 + 0x10*buffer) << 3) | (mcp_read(0x62 + 0x10*buffer) >> 5); //Put together RXBnSIDH and RXBnSIDL
     23e:	81 e6       	ldi	r24, 0x61	; 97
     240:	4e d0       	rcall	.+156    	; 0x2de <mcp_read>
     242:	a8 2e       	mov	r10, r24
     244:	82 e6       	ldi	r24, 0x62	; 98
     246:	4b d0       	rcall	.+150    	; 0x2de <mcp_read>
     248:	82 95       	swap	r24
     24a:	86 95       	lsr	r24
     24c:	87 70       	andi	r24, 0x07	; 7
     24e:	b1 2c       	mov	r11, r1
     250:	aa 0c       	add	r10, r10
     252:	bb 1c       	adc	r11, r11
     254:	aa 0c       	add	r10, r10
     256:	bb 1c       	adc	r11, r11
     258:	aa 0c       	add	r10, r10
     25a:	bb 1c       	adc	r11, r11
     25c:	a8 2a       	or	r10, r24
	msg.length = mcp_read(0x65 + 0x10*buffer) & 0b00001111; //RXBnDLC
     25e:	85 e6       	ldi	r24, 0x65	; 101
     260:	3e d0       	rcall	.+124    	; 0x2de <mcp_read>
     262:	8f 70       	andi	r24, 0x0F	; 15
     264:	c8 2e       	mov	r12, r24
     266:	d1 2c       	mov	r13, r1
	msg.data = malloc(msg.length);
     268:	c6 01       	movw	r24, r12
     26a:	b1 d3       	rcall	.+1890   	; 0x9ce <malloc>
     26c:	98 2e       	mov	r9, r24
     26e:	89 2e       	mov	r8, r25
	
	for(int i = 0; i < msg.length; i++){
     270:	1c 14       	cp	r1, r12
     272:	1d 04       	cpc	r1, r13
     274:	7c f4       	brge	.+30     	; 0x294 <can_receive+0x76>
     276:	e8 2e       	mov	r14, r24
     278:	f9 2e       	mov	r15, r25
     27a:	00 e0       	ldi	r16, 0x00	; 0
     27c:	10 e0       	ldi	r17, 0x00	; 0
		msg.data[i] = mcp_read(0x66 + 0x10*buffer + i);
     27e:	86 e6       	ldi	r24, 0x66	; 102
     280:	80 0f       	add	r24, r16
     282:	2d d0       	rcall	.+90     	; 0x2de <mcp_read>
     284:	f7 01       	movw	r30, r14
     286:	81 93       	st	Z+, r24
     288:	7f 01       	movw	r14, r30
	Msg msg;
	msg.id = ((int)mcp_read(0x61 + 0x10*buffer) << 3) | (mcp_read(0x62 + 0x10*buffer) >> 5); //Put together RXBnSIDH and RXBnSIDL
	msg.length = mcp_read(0x65 + 0x10*buffer) & 0b00001111; //RXBnDLC
	msg.data = malloc(msg.length);
	
	for(int i = 0; i < msg.length; i++){
     28a:	0f 5f       	subi	r16, 0xFF	; 255
     28c:	1f 4f       	sbci	r17, 0xFF	; 255
     28e:	0c 15       	cp	r16, r12
     290:	1d 05       	cpc	r17, r13
     292:	ac f3       	brlt	.-22     	; 0x27e <can_receive+0x60>
		msg.data[i] = mcp_read(0x66 + 0x10*buffer + i);
	}
	
	mcp_bit_modify(0x2C, buffer + 1, 0);	//CANINTF - Sets RX0IF to 0
     294:	40 e0       	ldi	r20, 0x00	; 0
     296:	61 e0       	ldi	r22, 0x01	; 1
     298:	8c e2       	ldi	r24, 0x2C	; 44
     29a:	2d d0       	rcall	.+90     	; 0x2f6 <mcp_bit_modify>
	return msg;
     29c:	ba 82       	std	Y+2, r11	; 0x02
     29e:	a9 82       	std	Y+1, r10	; 0x01
     2a0:	dc 82       	std	Y+4, r13	; 0x04
     2a2:	cb 82       	std	Y+3, r12	; 0x03
     2a4:	9d 82       	std	Y+5, r9	; 0x05
     2a6:	8e 82       	std	Y+6, r8	; 0x06
     2a8:	2a 2d       	mov	r18, r10
     2aa:	3a 81       	ldd	r19, Y+2	; 0x02
     2ac:	4c 2d       	mov	r20, r12
     2ae:	5c 81       	ldd	r21, Y+4	; 0x04
     2b0:	69 2d       	mov	r22, r9
     2b2:	78 2d       	mov	r23, r8
}
     2b4:	80 e0       	ldi	r24, 0x00	; 0
     2b6:	90 e0       	ldi	r25, 0x00	; 0
     2b8:	26 96       	adiw	r28, 0x06	; 6
     2ba:	0f b6       	in	r0, 0x3f	; 63
     2bc:	f8 94       	cli
     2be:	de bf       	out	0x3e, r29	; 62
     2c0:	0f be       	out	0x3f, r0	; 63
     2c2:	cd bf       	out	0x3d, r28	; 61
     2c4:	df 91       	pop	r29
     2c6:	cf 91       	pop	r28
     2c8:	1f 91       	pop	r17
     2ca:	0f 91       	pop	r16
     2cc:	ff 90       	pop	r15
     2ce:	ef 90       	pop	r14
     2d0:	df 90       	pop	r13
     2d2:	cf 90       	pop	r12
     2d4:	bf 90       	pop	r11
     2d6:	af 90       	pop	r10
     2d8:	9f 90       	pop	r9
     2da:	8f 90       	pop	r8
     2dc:	08 95       	ret

000002de <mcp_read>:
     2de:	cf 93       	push	r28
     2e0:	c8 2f       	mov	r28, r24
     2e2:	2f 98       	cbi	0x05, 7	; 5
     2e4:	83 e0       	ldi	r24, 0x03	; 3
     2e6:	17 d1       	rcall	.+558    	; 0x516 <spi_master_transmit>
     2e8:	8c 2f       	mov	r24, r28
     2ea:	15 d1       	rcall	.+554    	; 0x516 <spi_master_transmit>
     2ec:	80 e0       	ldi	r24, 0x00	; 0
     2ee:	13 d1       	rcall	.+550    	; 0x516 <spi_master_transmit>
     2f0:	2f 9a       	sbi	0x05, 7	; 5
     2f2:	cf 91       	pop	r28
     2f4:	08 95       	ret

000002f6 <mcp_bit_modify>:
     2f6:	1f 93       	push	r17
     2f8:	cf 93       	push	r28
     2fa:	df 93       	push	r29
     2fc:	18 2f       	mov	r17, r24
     2fe:	d6 2f       	mov	r29, r22
     300:	c4 2f       	mov	r28, r20
     302:	2f 98       	cbi	0x05, 7	; 5
     304:	85 e0       	ldi	r24, 0x05	; 5
     306:	07 d1       	rcall	.+526    	; 0x516 <spi_master_transmit>
     308:	81 2f       	mov	r24, r17
     30a:	05 d1       	rcall	.+522    	; 0x516 <spi_master_transmit>
     30c:	8d 2f       	mov	r24, r29
     30e:	03 d1       	rcall	.+518    	; 0x516 <spi_master_transmit>
     310:	8c 2f       	mov	r24, r28
     312:	01 d1       	rcall	.+514    	; 0x516 <spi_master_transmit>
     314:	2f 9a       	sbi	0x05, 7	; 5
     316:	df 91       	pop	r29
     318:	cf 91       	pop	r28
     31a:	1f 91       	pop	r17
     31c:	08 95       	ret

0000031e <mcp_reset>:
     31e:	2f 98       	cbi	0x05, 7	; 5
     320:	80 ec       	ldi	r24, 0xC0	; 192
     322:	f9 d0       	rcall	.+498    	; 0x516 <spi_master_transmit>
     324:	2f 9a       	sbi	0x05, 7	; 5
     326:	08 95       	ret

00000328 <check_if_scored>:
}

int check_if_scored()
{
	int trigger_value = 200;
	int adc_val = adc_read();
     328:	5d df       	rcall	.-326    	; 0x1e4 <adc_read>
	//printf("ADC VAL = %d\r\n", adc_val);
	if (adc_val < trigger_value && scoring_allowed){
     32a:	88 3c       	cpi	r24, 0xC8	; 200
     32c:	91 05       	cpc	r25, r1
     32e:	6c f4       	brge	.+26     	; 0x34a <check_if_scored+0x22>
     330:	80 91 06 02 	lds	r24, 0x0206
     334:	90 91 07 02 	lds	r25, 0x0207
     338:	89 2b       	or	r24, r25
     33a:	81 f0       	breq	.+32     	; 0x35c <check_if_scored+0x34>
		scoring_allowed = 0;
     33c:	10 92 07 02 	sts	0x0207, r1
     340:	10 92 06 02 	sts	0x0206, r1
		return 1;
     344:	81 e0       	ldi	r24, 0x01	; 1
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	08 95       	ret
	}
	else if (adc_val >= trigger_value){
		scoring_allowed = 1;
     34a:	81 e0       	ldi	r24, 0x01	; 1
     34c:	90 e0       	ldi	r25, 0x00	; 0
     34e:	90 93 07 02 	sts	0x0207, r25
     352:	80 93 06 02 	sts	0x0206, r24
	}
	return 0;
     356:	80 e0       	ldi	r24, 0x00	; 0
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	08 95       	ret
     35c:	80 e0       	ldi	r24, 0x00	; 0
     35e:	90 e0       	ldi	r25, 0x00	; 0
}
     360:	08 95       	ret

00000362 <main>:
#include "TWI_Master.h"

int scoring_allowed = 1;

int main(void)
{	
     362:	cf 93       	push	r28
     364:	df 93       	push	r29
     366:	cd b7       	in	r28, 0x3d	; 61
     368:	de b7       	in	r29, 0x3e	; 62
     36a:	2c 97       	sbiw	r28, 0x0c	; 12
     36c:	0f b6       	in	r0, 0x3f	; 63
     36e:	f8 94       	cli
     370:	de bf       	out	0x3e, r29	; 62
     372:	0f be       	out	0x3f, r0	; 63
     374:	cd bf       	out	0x3d, r28	; 61
	uart_init(9600, NODE_2);
     376:	62 e0       	ldi	r22, 0x02	; 2
     378:	70 e0       	ldi	r23, 0x00	; 0
     37a:	80 e8       	ldi	r24, 0x80	; 128
     37c:	95 e2       	ldi	r25, 0x25	; 37
     37e:	90 d1       	rcall	.+800    	; 0x6a0 <uart_init>
	spi_master_init();
     380:	c2 d0       	rcall	.+388    	; 0x506 <spi_master_init>
    mcp_reset();
     382:	cd df       	rcall	.-102    	; 0x31e <mcp_reset>
	can_init(MODE_NORMAL);
     384:	80 e0       	ldi	r24, 0x00	; 0
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	3a df       	rcall	.-396    	; 0x1fe <can_init>
	pwm_init();
     38a:	96 d0       	rcall	.+300    	; 0x4b8 <pwm_init>
	adc_init();
     38c:	1d df       	rcall	.-454    	; 0x1c8 <adc_init>
	TWI_Master_Initialise();
     38e:	c9 d0       	rcall	.+402    	; 0x522 <TWI_Master_Initialise>
	motor_init();
     390:	3a d0       	rcall	.+116    	; 0x406 <motor_init>
	sei(); //enable interrupts
     392:	78 94       	sei
		switch (msg_received.id){
			case 42:
				position_received = *(Position*)msg_received.data;
				break;
			default:
				printf("ID unknown");
     394:	0f 2e       	mov	r0, r31
     396:	f9 e0       	ldi	r31, 0x09	; 9
     398:	ef 2e       	mov	r14, r31
     39a:	f2 e0       	ldi	r31, 0x02	; 2
     39c:	ff 2e       	mov	r15, r31
     39e:	f0 2d       	mov	r31, r0
		Msg msg_received;
		msg_received = can_receive();
		
		switch (msg_received.id){
			case 42:
				position_received = *(Position*)msg_received.data;
     3a0:	0f 2e       	mov	r0, r31
     3a2:	f6 e0       	ldi	r31, 0x06	; 6
     3a4:	df 2e       	mov	r13, r31
     3a6:	f0 2d       	mov	r31, r0

	while(1)
	{
		Position position_received;
		Msg msg_received;
		msg_received = can_receive();
     3a8:	3a df       	rcall	.-396    	; 0x21e <can_receive>
     3aa:	29 83       	std	Y+1, r18	; 0x01
     3ac:	3a 83       	std	Y+2, r19	; 0x02
     3ae:	4b 83       	std	Y+3, r20	; 0x03
     3b0:	5c 83       	std	Y+4, r21	; 0x04
     3b2:	6d 83       	std	Y+5, r22	; 0x05
     3b4:	7e 83       	std	Y+6, r23	; 0x06
     3b6:	0d 81       	ldd	r16, Y+5	; 0x05
     3b8:	1e 81       	ldd	r17, Y+6	; 0x06
		
		switch (msg_received.id){
     3ba:	89 81       	ldd	r24, Y+1	; 0x01
     3bc:	9a 81       	ldd	r25, Y+2	; 0x02
     3be:	8a 97       	sbiw	r24, 0x2a	; 42
     3c0:	49 f4       	brne	.+18     	; 0x3d4 <main+0x72>
			case 42:
				position_received = *(Position*)msg_received.data;
     3c2:	f8 01       	movw	r30, r16
     3c4:	de 01       	movw	r26, r28
     3c6:	17 96       	adiw	r26, 0x07	; 7
     3c8:	8d 2d       	mov	r24, r13
     3ca:	01 90       	ld	r0, Z+
     3cc:	0d 92       	st	X+, r0
     3ce:	8a 95       	dec	r24
     3d0:	e1 f7       	brne	.-8      	; 0x3ca <main+0x68>
				break;
     3d2:	05 c0       	rjmp	.+10     	; 0x3de <main+0x7c>
			default:
				printf("ID unknown");
     3d4:	ff 92       	push	r15
     3d6:	ef 92       	push	r14
     3d8:	6b d4       	rcall	.+2262   	; 0xcb0 <printf>
     3da:	0f 90       	pop	r0
     3dc:	0f 90       	pop	r0
		}
		free(msg_received.data);
     3de:	c8 01       	movw	r24, r16
     3e0:	8e d3       	rcall	.+1820   	; 0xafe <free>
		//printf("x:%4d y:%4d z:%4d\r", position_received.x,position_received.y,position_received.z);
		
		
		//motor_move_servo((((float)position_received.y)*1.2/200.0)+1.5);
		motor_move_dc(position_received);
     3e2:	4f 81       	ldd	r20, Y+7	; 0x07
     3e4:	58 85       	ldd	r21, Y+8	; 0x08
     3e6:	69 85       	ldd	r22, Y+9	; 0x09
     3e8:	7a 85       	ldd	r23, Y+10	; 0x0a
     3ea:	8b 85       	ldd	r24, Y+11	; 0x0b
     3ec:	9c 85       	ldd	r25, Y+12	; 0x0c
     3ee:	19 d0       	rcall	.+50     	; 0x422 <motor_move_dc>
		
		
		score += check_if_scored();
     3f0:	9b df       	rcall	.-202    	; 0x328 <check_if_scored>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3f2:	2f ef       	ldi	r18, 0xFF	; 255
     3f4:	80 e7       	ldi	r24, 0x70	; 112
     3f6:	92 e0       	ldi	r25, 0x02	; 2
     3f8:	21 50       	subi	r18, 0x01	; 1
     3fa:	80 40       	sbci	r24, 0x00	; 0
     3fc:	90 40       	sbci	r25, 0x00	; 0
     3fe:	e1 f7       	brne	.-8      	; 0x3f8 <main+0x96>
     400:	00 c0       	rjmp	.+0      	; 0x402 <main+0xa0>
     402:	00 00       	nop
		//printf("%d\r\n", score);
		
		//printf("%d\r\n",adc_read());
		
		_delay_ms(50);
	}
     404:	d1 cf       	rjmp	.-94     	; 0x3a8 <main+0x46>

00000406 <motor_init>:
#include <avr/io.h>
#include "joy.h"
#include "pwm.h"
void motor_init(){
	DDRH |= (1 << DDH4); //Enable motor pin as output
     406:	e1 e0       	ldi	r30, 0x01	; 1
     408:	f1 e0       	ldi	r31, 0x01	; 1
     40a:	80 81       	ld	r24, Z
     40c:	80 61       	ori	r24, 0x10	; 16
     40e:	80 83       	st	Z, r24
	DDRH |= (1 << PH1); //Set motor direction as output
     410:	80 81       	ld	r24, Z
     412:	82 60       	ori	r24, 0x02	; 2
     414:	80 83       	st	Z, r24
	PORTH |= (1 << PH4); //Actually set the value of enable
     416:	e2 e0       	ldi	r30, 0x02	; 2
     418:	f1 e0       	ldi	r31, 0x01	; 1
     41a:	80 81       	ld	r24, Z
     41c:	80 61       	ori	r24, 0x10	; 16
     41e:	80 83       	st	Z, r24
     420:	08 95       	ret

00000422 <motor_move_dc>:
	//DDRH |= (1 << PH1); //Direction right (?)
	//PORTB |= ((1 << PH1) | (1 << PH4)); //This sets pull-up R for SCL and SDA. Is this really needed? Ask the studass?
		
}

void motor_move_dc(Position pos){
     422:	0f 93       	push	r16
     424:	1f 93       	push	r17
     426:	cf 93       	push	r28
     428:	df 93       	push	r29
     42a:	cd b7       	in	r28, 0x3d	; 61
     42c:	de b7       	in	r29, 0x3e	; 62
     42e:	29 97       	sbiw	r28, 0x09	; 9
     430:	0f b6       	in	r0, 0x3f	; 63
     432:	f8 94       	cli
     434:	de bf       	out	0x3e, r29	; 62
     436:	0f be       	out	0x3f, r0	; 63
     438:	cd bf       	out	0x3d, r28	; 61
     43a:	4c 83       	std	Y+4, r20	; 0x04
     43c:	5d 83       	std	Y+5, r21	; 0x05
     43e:	6e 83       	std	Y+6, r22	; 0x06
     440:	7f 83       	std	Y+7, r23	; 0x07
     442:	88 87       	std	Y+8, r24	; 0x08
     444:	99 87       	std	Y+9, r25	; 0x09
     446:	0e 81       	ldd	r16, Y+6	; 0x06
     448:	1f 81       	ldd	r17, Y+7	; 0x07
	int voltage = 0; //= (uint8_t)pos.y; //& ~(1 << sizeof(pos.y)*8));
	if (pos.y >= 5)
     44a:	05 30       	cpi	r16, 0x05	; 5
     44c:	11 05       	cpc	r17, r1
     44e:	34 f0       	brlt	.+12     	; 0x45c <motor_move_dc+0x3a>
	{
		PORTH |= (1 << PH1); 
     450:	e2 e0       	ldi	r30, 0x02	; 2
     452:	f1 e0       	ldi	r31, 0x01	; 1
     454:	80 81       	ld	r24, Z
     456:	82 60       	ori	r24, 0x02	; 2
     458:	80 83       	st	Z, r24
     45a:	0f c0       	rjmp	.+30     	; 0x47a <motor_move_dc+0x58>
		voltage = pos.y;
	}
	else if (pos.y <= -5)
     45c:	0c 3f       	cpi	r16, 0xFC	; 252
     45e:	8f ef       	ldi	r24, 0xFF	; 255
     460:	18 07       	cpc	r17, r24
     462:	4c f4       	brge	.+18     	; 0x476 <motor_move_dc+0x54>
	{
		PORTH &= ~(1 << PH1);  
     464:	e2 e0       	ldi	r30, 0x02	; 2
     466:	f1 e0       	ldi	r31, 0x01	; 1
     468:	80 81       	ld	r24, Z
     46a:	8d 7f       	andi	r24, 0xFD	; 253
     46c:	80 83       	st	Z, r24
		voltage = -pos.y;
     46e:	11 95       	neg	r17
     470:	01 95       	neg	r16
     472:	11 09       	sbc	r17, r1
     474:	02 c0       	rjmp	.+4      	; 0x47a <motor_move_dc+0x58>
	//PORTB |= ((1 << PH1) | (1 << PH4)); //This sets pull-up R for SCL and SDA. Is this really needed? Ask the studass?
		
}

void motor_move_dc(Position pos){
	int voltage = 0; //= (uint8_t)pos.y; //& ~(1 << sizeof(pos.y)*8));
     476:	00 e0       	ldi	r16, 0x00	; 0
     478:	10 e0       	ldi	r17, 0x00	; 0
	else if (pos.y <= -5)
	{
		PORTH &= ~(1 << PH1);  
		voltage = -pos.y;
	}
	printf("%d\r\n",voltage);
     47a:	1f 93       	push	r17
     47c:	0f 93       	push	r16
     47e:	84 e1       	ldi	r24, 0x14	; 20
     480:	92 e0       	ldi	r25, 0x02	; 2
     482:	9f 93       	push	r25
     484:	8f 93       	push	r24
     486:	14 d4       	rcall	.+2088   	; 0xcb0 <printf>
	int dac_address = 0b0101000;
	char msg[3];
	msg[0] = ((dac_address << 1) | 0); //0 for write, 1 for read
     488:	80 e5       	ldi	r24, 0x50	; 80
     48a:	89 83       	std	Y+1, r24	; 0x01
	msg[1] = 0b00000000; //R2,R1,R0,Rst,PD,A2,A1,A0, (ACK)
     48c:	1a 82       	std	Y+2, r1	; 0x02
	msg[2] = voltage;
     48e:	0b 83       	std	Y+3, r16	; 0x03
	char length = 3;
	TWI_Start_Transceiver_With_Data(msg, length);
     490:	63 e0       	ldi	r22, 0x03	; 3
     492:	70 e0       	ldi	r23, 0x00	; 0
     494:	ce 01       	movw	r24, r28
     496:	01 96       	adiw	r24, 0x01	; 1
     498:	4e d0       	rcall	.+156    	; 0x536 <TWI_Start_Transceiver_With_Data>
     49a:	0f 90       	pop	r0
     49c:	0f 90       	pop	r0
     49e:	0f 90       	pop	r0
     4a0:	0f 90       	pop	r0
}
     4a2:	29 96       	adiw	r28, 0x09	; 9
     4a4:	0f b6       	in	r0, 0x3f	; 63
     4a6:	f8 94       	cli
     4a8:	de bf       	out	0x3e, r29	; 62
     4aa:	0f be       	out	0x3f, r0	; 63
     4ac:	cd bf       	out	0x3d, r28	; 61
     4ae:	df 91       	pop	r29
     4b0:	cf 91       	pop	r28
     4b2:	1f 91       	pop	r17
     4b4:	0f 91       	pop	r16
     4b6:	08 95       	ret

000004b8 <pwm_init>:
     4b8:	e0 e8       	ldi	r30, 0x80	; 128
     4ba:	f0 e0       	ldi	r31, 0x00	; 0
     4bc:	80 81       	ld	r24, Z
     4be:	82 68       	ori	r24, 0x82	; 130
     4c0:	80 83       	st	Z, r24
     4c2:	e1 e8       	ldi	r30, 0x81	; 129
     4c4:	f0 e0       	ldi	r31, 0x00	; 0
     4c6:	80 81       	ld	r24, Z
     4c8:	8a 61       	ori	r24, 0x1A	; 26
     4ca:	80 83       	st	Z, r24
     4cc:	25 9a       	sbi	0x04, 5	; 4
     4ce:	8f e3       	ldi	r24, 0x3F	; 63
     4d0:	9c e9       	ldi	r25, 0x9C	; 156
     4d2:	90 93 1b 02 	sts	0x021B, r25
     4d6:	80 93 1a 02 	sts	0x021A, r24
     4da:	90 93 87 00 	sts	0x0087, r25
     4de:	80 93 86 00 	sts	0x0086, r24
     4e2:	60 91 1a 02 	lds	r22, 0x021A
     4e6:	70 91 1b 02 	lds	r23, 0x021B
     4ea:	80 e0       	ldi	r24, 0x00	; 0
     4ec:	90 e0       	ldi	r25, 0x00	; 0
     4ee:	3a d1       	rcall	.+628    	; 0x764 <__floatunsisf>
     4f0:	2a e9       	ldi	r18, 0x9A	; 154
     4f2:	39 e9       	ldi	r19, 0x99	; 153
     4f4:	49 e9       	ldi	r20, 0x99	; 153
     4f6:	5d e3       	ldi	r21, 0x3D	; 61
     4f8:	c3 d1       	rcall	.+902    	; 0x880 <__mulsf3>
     4fa:	08 d1       	rcall	.+528    	; 0x70c <__fixunssfsi>
     4fc:	70 93 89 00 	sts	0x0089, r23
     500:	60 93 88 00 	sts	0x0088, r22
     504:	08 95       	ret

00000506 <spi_master_init>:
     506:	84 b1       	in	r24, 0x04	; 4
     508:	87 68       	ori	r24, 0x87	; 135
     50a:	84 b9       	out	0x04, r24	; 4
     50c:	23 98       	cbi	0x04, 3	; 4
     50e:	81 e5       	ldi	r24, 0x51	; 81
     510:	8c bd       	out	0x2c, r24	; 44
     512:	2f 9a       	sbi	0x05, 7	; 5
     514:	08 95       	ret

00000516 <spi_master_transmit>:
     516:	8e bd       	out	0x2e, r24	; 46
     518:	0d b4       	in	r0, 0x2d	; 45
     51a:	07 fe       	sbrs	r0, 7
     51c:	fd cf       	rjmp	.-6      	; 0x518 <spi_master_transmit+0x2>
     51e:	8e b5       	in	r24, 0x2e	; 46
     520:	08 95       	ret

00000522 <TWI_Master_Initialise>:
     522:	8c e0       	ldi	r24, 0x0C	; 12
     524:	80 93 b8 00 	sts	0x00B8, r24
     528:	8f ef       	ldi	r24, 0xFF	; 255
     52a:	80 93 bb 00 	sts	0x00BB, r24
     52e:	84 e0       	ldi	r24, 0x04	; 4
     530:	80 93 bc 00 	sts	0x00BC, r24
     534:	08 95       	ret

00000536 <TWI_Start_Transceiver_With_Data>:
     536:	ec eb       	ldi	r30, 0xBC	; 188
     538:	f0 e0       	ldi	r31, 0x00	; 0
     53a:	20 81       	ld	r18, Z
     53c:	20 fd       	sbrc	r18, 0
     53e:	fd cf       	rjmp	.-6      	; 0x53a <TWI_Start_Transceiver_With_Data+0x4>
     540:	60 93 1e 02 	sts	0x021E, r22
     544:	fc 01       	movw	r30, r24
     546:	20 81       	ld	r18, Z
     548:	20 93 1f 02 	sts	0x021F, r18
     54c:	20 fd       	sbrc	r18, 0
     54e:	0c c0       	rjmp	.+24     	; 0x568 <TWI_Start_Transceiver_With_Data+0x32>
     550:	62 30       	cpi	r22, 0x02	; 2
     552:	50 f0       	brcs	.+20     	; 0x568 <TWI_Start_Transceiver_With_Data+0x32>
     554:	dc 01       	movw	r26, r24
     556:	11 96       	adiw	r26, 0x01	; 1
     558:	e0 e2       	ldi	r30, 0x20	; 32
     55a:	f2 e0       	ldi	r31, 0x02	; 2
     55c:	81 e0       	ldi	r24, 0x01	; 1
     55e:	9d 91       	ld	r25, X+
     560:	91 93       	st	Z+, r25
     562:	8f 5f       	subi	r24, 0xFF	; 255
     564:	86 13       	cpse	r24, r22
     566:	fb cf       	rjmp	.-10     	; 0x55e <TWI_Start_Transceiver_With_Data+0x28>
     568:	10 92 1d 02 	sts	0x021D, r1
     56c:	88 ef       	ldi	r24, 0xF8	; 248
     56e:	80 93 08 02 	sts	0x0208, r24
     572:	85 ea       	ldi	r24, 0xA5	; 165
     574:	80 93 bc 00 	sts	0x00BC, r24
     578:	08 95       	ret

0000057a <__vector_39>:
     57a:	1f 92       	push	r1
     57c:	0f 92       	push	r0
     57e:	0f b6       	in	r0, 0x3f	; 63
     580:	0f 92       	push	r0
     582:	11 24       	eor	r1, r1
     584:	0b b6       	in	r0, 0x3b	; 59
     586:	0f 92       	push	r0
     588:	2f 93       	push	r18
     58a:	3f 93       	push	r19
     58c:	8f 93       	push	r24
     58e:	9f 93       	push	r25
     590:	af 93       	push	r26
     592:	bf 93       	push	r27
     594:	ef 93       	push	r30
     596:	ff 93       	push	r31
     598:	80 91 b9 00 	lds	r24, 0x00B9
     59c:	90 e0       	ldi	r25, 0x00	; 0
     59e:	fc 01       	movw	r30, r24
     5a0:	38 97       	sbiw	r30, 0x08	; 8
     5a2:	e1 35       	cpi	r30, 0x51	; 81
     5a4:	f1 05       	cpc	r31, r1
     5a6:	08 f0       	brcs	.+2      	; 0x5aa <__vector_39+0x30>
     5a8:	55 c0       	rjmp	.+170    	; 0x654 <__vector_39+0xda>
     5aa:	ee 58       	subi	r30, 0x8E	; 142
     5ac:	ff 4f       	sbci	r31, 0xFF	; 255
     5ae:	e7 c1       	rjmp	.+974    	; 0x97e <__tablejump2__>
     5b0:	10 92 1c 02 	sts	0x021C, r1
     5b4:	e0 91 1c 02 	lds	r30, 0x021C
     5b8:	80 91 1e 02 	lds	r24, 0x021E
     5bc:	e8 17       	cp	r30, r24
     5be:	70 f4       	brcc	.+28     	; 0x5dc <__vector_39+0x62>
     5c0:	81 e0       	ldi	r24, 0x01	; 1
     5c2:	8e 0f       	add	r24, r30
     5c4:	80 93 1c 02 	sts	0x021C, r24
     5c8:	f0 e0       	ldi	r31, 0x00	; 0
     5ca:	e1 5e       	subi	r30, 0xE1	; 225
     5cc:	fd 4f       	sbci	r31, 0xFD	; 253
     5ce:	80 81       	ld	r24, Z
     5d0:	80 93 bb 00 	sts	0x00BB, r24
     5d4:	85 e8       	ldi	r24, 0x85	; 133
     5d6:	80 93 bc 00 	sts	0x00BC, r24
     5da:	43 c0       	rjmp	.+134    	; 0x662 <__vector_39+0xe8>
     5dc:	80 91 1d 02 	lds	r24, 0x021D
     5e0:	81 60       	ori	r24, 0x01	; 1
     5e2:	80 93 1d 02 	sts	0x021D, r24
     5e6:	84 e9       	ldi	r24, 0x94	; 148
     5e8:	80 93 bc 00 	sts	0x00BC, r24
     5ec:	3a c0       	rjmp	.+116    	; 0x662 <__vector_39+0xe8>
     5ee:	e0 91 1c 02 	lds	r30, 0x021C
     5f2:	81 e0       	ldi	r24, 0x01	; 1
     5f4:	8e 0f       	add	r24, r30
     5f6:	80 93 1c 02 	sts	0x021C, r24
     5fa:	80 91 bb 00 	lds	r24, 0x00BB
     5fe:	f0 e0       	ldi	r31, 0x00	; 0
     600:	e1 5e       	subi	r30, 0xE1	; 225
     602:	fd 4f       	sbci	r31, 0xFD	; 253
     604:	80 83       	st	Z, r24
     606:	20 91 1c 02 	lds	r18, 0x021C
     60a:	30 e0       	ldi	r19, 0x00	; 0
     60c:	80 91 1e 02 	lds	r24, 0x021E
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	01 97       	sbiw	r24, 0x01	; 1
     614:	28 17       	cp	r18, r24
     616:	39 07       	cpc	r19, r25
     618:	24 f4       	brge	.+8      	; 0x622 <__vector_39+0xa8>
     61a:	85 ec       	ldi	r24, 0xC5	; 197
     61c:	80 93 bc 00 	sts	0x00BC, r24
     620:	20 c0       	rjmp	.+64     	; 0x662 <__vector_39+0xe8>
     622:	85 e8       	ldi	r24, 0x85	; 133
     624:	80 93 bc 00 	sts	0x00BC, r24
     628:	1c c0       	rjmp	.+56     	; 0x662 <__vector_39+0xe8>
     62a:	80 91 bb 00 	lds	r24, 0x00BB
     62e:	e0 91 1c 02 	lds	r30, 0x021C
     632:	f0 e0       	ldi	r31, 0x00	; 0
     634:	e1 5e       	subi	r30, 0xE1	; 225
     636:	fd 4f       	sbci	r31, 0xFD	; 253
     638:	80 83       	st	Z, r24
     63a:	80 91 1d 02 	lds	r24, 0x021D
     63e:	81 60       	ori	r24, 0x01	; 1
     640:	80 93 1d 02 	sts	0x021D, r24
     644:	84 e9       	ldi	r24, 0x94	; 148
     646:	80 93 bc 00 	sts	0x00BC, r24
     64a:	0b c0       	rjmp	.+22     	; 0x662 <__vector_39+0xe8>
     64c:	85 ea       	ldi	r24, 0xA5	; 165
     64e:	80 93 bc 00 	sts	0x00BC, r24
     652:	07 c0       	rjmp	.+14     	; 0x662 <__vector_39+0xe8>
     654:	80 91 b9 00 	lds	r24, 0x00B9
     658:	80 93 08 02 	sts	0x0208, r24
     65c:	84 e0       	ldi	r24, 0x04	; 4
     65e:	80 93 bc 00 	sts	0x00BC, r24
     662:	ff 91       	pop	r31
     664:	ef 91       	pop	r30
     666:	bf 91       	pop	r27
     668:	af 91       	pop	r26
     66a:	9f 91       	pop	r25
     66c:	8f 91       	pop	r24
     66e:	3f 91       	pop	r19
     670:	2f 91       	pop	r18
     672:	0f 90       	pop	r0
     674:	0b be       	out	0x3b, r0	; 59
     676:	0f 90       	pop	r0
     678:	0f be       	out	0x3f, r0	; 63
     67a:	0f 90       	pop	r0
     67c:	1f 90       	pop	r1
     67e:	18 95       	reti

00000680 <uart_putchar>:
	UCSR0C = (((node == NODE_1)<<URSEL0)|(1<<USBS0)|(3<<UCSZ00)); //Set frame format: 2 stop bits, 8 data bits //Asynchronous - No parity (?) //URSEL makes sure we won't access UBRRH during operation, but UCSRC. //URSEL should not be set in node 2
	fdevopen(uart_putchar, uart_getchar);
}

void uart_putchar(char c){
	while (!( UCSR0A & (1<<UDRE0))); //Wait for empty transmit buffer
     680:	e0 ec       	ldi	r30, 0xC0	; 192
     682:	f0 e0       	ldi	r31, 0x00	; 0
     684:	90 81       	ld	r25, Z
     686:	95 ff       	sbrs	r25, 5
     688:	fd cf       	rjmp	.-6      	; 0x684 <uart_putchar+0x4>
	UDR0 = c; //Put data into buffer, sends the data
     68a:	80 93 c6 00 	sts	0x00C6, r24
     68e:	08 95       	ret

00000690 <uart_getchar>:
}

unsigned char uart_getchar(){
	while (!( UCSR0A & (1<<RXC0)));
     690:	e0 ec       	ldi	r30, 0xC0	; 192
     692:	f0 e0       	ldi	r31, 0x00	; 0
     694:	80 81       	ld	r24, Z
     696:	88 23       	and	r24, r24
     698:	ec f7       	brge	.-6      	; 0x694 <uart_getchar+0x4>
	return UDR0;
     69a:	80 91 c6 00 	lds	r24, 0x00C6
     69e:	08 95       	ret

000006a0 <uart_init>:
#include <stdio.h>
#include <avr/io.h>

#include "uart.h"

void uart_init(int baudRate, int node){
     6a0:	cf 93       	push	r28
     6a2:	df 93       	push	r29
     6a4:	eb 01       	movw	r28, r22
	int UBRR = ((long)F_CPU/((long)16*baudRate) - 1);
     6a6:	aa 27       	eor	r26, r26
     6a8:	97 fd       	sbrc	r25, 7
     6aa:	a0 95       	com	r26
     6ac:	ba 2f       	mov	r27, r26
     6ae:	88 0f       	add	r24, r24
     6b0:	99 1f       	adc	r25, r25
     6b2:	aa 1f       	adc	r26, r26
     6b4:	bb 1f       	adc	r27, r27
     6b6:	88 0f       	add	r24, r24
     6b8:	99 1f       	adc	r25, r25
     6ba:	aa 1f       	adc	r26, r26
     6bc:	bb 1f       	adc	r27, r27
     6be:	9c 01       	movw	r18, r24
     6c0:	ad 01       	movw	r20, r26
     6c2:	22 0f       	add	r18, r18
     6c4:	33 1f       	adc	r19, r19
     6c6:	44 1f       	adc	r20, r20
     6c8:	55 1f       	adc	r21, r21
     6ca:	22 0f       	add	r18, r18
     6cc:	33 1f       	adc	r19, r19
     6ce:	44 1f       	adc	r20, r20
     6d0:	55 1f       	adc	r21, r21
     6d2:	60 e0       	ldi	r22, 0x00	; 0
     6d4:	74 e2       	ldi	r23, 0x24	; 36
     6d6:	84 ef       	ldi	r24, 0xF4	; 244
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	35 d1       	rcall	.+618    	; 0x946 <__divmodsi4>
     6dc:	21 50       	subi	r18, 0x01	; 1
     6de:	31 09       	sbc	r19, r1
	UBRR0L = UBRR;
     6e0:	20 93 c4 00 	sts	0x00C4, r18
    UBRR0H = (UBRR>>8);
     6e4:	30 93 c5 00 	sts	0x00C5, r19
	UCSR0B = (1<<RXEN0)|(1<<TXEN0); //Enable receiver and transmitter 
     6e8:	88 e1       	ldi	r24, 0x18	; 24
     6ea:	80 93 c1 00 	sts	0x00C1, r24
	UCSR0C = (((node == NODE_1)<<URSEL0)|(1<<USBS0)|(3<<UCSZ00)); //Set frame format: 2 stop bits, 8 data bits //Asynchronous - No parity (?) //URSEL makes sure we won't access UBRRH during operation, but UCSRC. //URSEL should not be set in node 2
     6ee:	21 97       	sbiw	r28, 0x01	; 1
     6f0:	11 f4       	brne	.+4      	; 0x6f6 <uart_init+0x56>
     6f2:	8e e8       	ldi	r24, 0x8E	; 142
     6f4:	01 c0       	rjmp	.+2      	; 0x6f8 <uart_init+0x58>
     6f6:	8e e0       	ldi	r24, 0x0E	; 14
     6f8:	80 93 c2 00 	sts	0x00C2, r24
	fdevopen(uart_putchar, uart_getchar);
     6fc:	68 e4       	ldi	r22, 0x48	; 72
     6fe:	73 e0       	ldi	r23, 0x03	; 3
     700:	80 e4       	ldi	r24, 0x40	; 64
     702:	93 e0       	ldi	r25, 0x03	; 3
     704:	8b d2       	rcall	.+1302   	; 0xc1c <fdevopen>
}
     706:	df 91       	pop	r29
     708:	cf 91       	pop	r28
     70a:	08 95       	ret

0000070c <__fixunssfsi>:
     70c:	98 d0       	rcall	.+304    	; 0x83e <__fp_splitA>
     70e:	88 f0       	brcs	.+34     	; 0x732 <__fixunssfsi+0x26>
     710:	9f 57       	subi	r25, 0x7F	; 127
     712:	90 f0       	brcs	.+36     	; 0x738 <__fixunssfsi+0x2c>
     714:	b9 2f       	mov	r27, r25
     716:	99 27       	eor	r25, r25
     718:	b7 51       	subi	r27, 0x17	; 23
     71a:	a0 f0       	brcs	.+40     	; 0x744 <__fixunssfsi+0x38>
     71c:	d1 f0       	breq	.+52     	; 0x752 <__fixunssfsi+0x46>
     71e:	66 0f       	add	r22, r22
     720:	77 1f       	adc	r23, r23
     722:	88 1f       	adc	r24, r24
     724:	99 1f       	adc	r25, r25
     726:	1a f0       	brmi	.+6      	; 0x72e <__fixunssfsi+0x22>
     728:	ba 95       	dec	r27
     72a:	c9 f7       	brne	.-14     	; 0x71e <__fixunssfsi+0x12>
     72c:	12 c0       	rjmp	.+36     	; 0x752 <__fixunssfsi+0x46>
     72e:	b1 30       	cpi	r27, 0x01	; 1
     730:	81 f0       	breq	.+32     	; 0x752 <__fixunssfsi+0x46>
     732:	9f d0       	rcall	.+318    	; 0x872 <__fp_zero>
     734:	b1 e0       	ldi	r27, 0x01	; 1
     736:	08 95       	ret
     738:	9c c0       	rjmp	.+312    	; 0x872 <__fp_zero>
     73a:	67 2f       	mov	r22, r23
     73c:	78 2f       	mov	r23, r24
     73e:	88 27       	eor	r24, r24
     740:	b8 5f       	subi	r27, 0xF8	; 248
     742:	39 f0       	breq	.+14     	; 0x752 <__fixunssfsi+0x46>
     744:	b9 3f       	cpi	r27, 0xF9	; 249
     746:	cc f3       	brlt	.-14     	; 0x73a <__fixunssfsi+0x2e>
     748:	86 95       	lsr	r24
     74a:	77 95       	ror	r23
     74c:	67 95       	ror	r22
     74e:	b3 95       	inc	r27
     750:	d9 f7       	brne	.-10     	; 0x748 <__fixunssfsi+0x3c>
     752:	3e f4       	brtc	.+14     	; 0x762 <__fixunssfsi+0x56>
     754:	90 95       	com	r25
     756:	80 95       	com	r24
     758:	70 95       	com	r23
     75a:	61 95       	neg	r22
     75c:	7f 4f       	sbci	r23, 0xFF	; 255
     75e:	8f 4f       	sbci	r24, 0xFF	; 255
     760:	9f 4f       	sbci	r25, 0xFF	; 255
     762:	08 95       	ret

00000764 <__floatunsisf>:
     764:	e8 94       	clt
     766:	09 c0       	rjmp	.+18     	; 0x77a <__floatsisf+0x12>

00000768 <__floatsisf>:
     768:	97 fb       	bst	r25, 7
     76a:	3e f4       	brtc	.+14     	; 0x77a <__floatsisf+0x12>
     76c:	90 95       	com	r25
     76e:	80 95       	com	r24
     770:	70 95       	com	r23
     772:	61 95       	neg	r22
     774:	7f 4f       	sbci	r23, 0xFF	; 255
     776:	8f 4f       	sbci	r24, 0xFF	; 255
     778:	9f 4f       	sbci	r25, 0xFF	; 255
     77a:	99 23       	and	r25, r25
     77c:	a9 f0       	breq	.+42     	; 0x7a8 <__floatsisf+0x40>
     77e:	f9 2f       	mov	r31, r25
     780:	96 e9       	ldi	r25, 0x96	; 150
     782:	bb 27       	eor	r27, r27
     784:	93 95       	inc	r25
     786:	f6 95       	lsr	r31
     788:	87 95       	ror	r24
     78a:	77 95       	ror	r23
     78c:	67 95       	ror	r22
     78e:	b7 95       	ror	r27
     790:	f1 11       	cpse	r31, r1
     792:	f8 cf       	rjmp	.-16     	; 0x784 <__floatsisf+0x1c>
     794:	fa f4       	brpl	.+62     	; 0x7d4 <__floatsisf+0x6c>
     796:	bb 0f       	add	r27, r27
     798:	11 f4       	brne	.+4      	; 0x79e <__floatsisf+0x36>
     79a:	60 ff       	sbrs	r22, 0
     79c:	1b c0       	rjmp	.+54     	; 0x7d4 <__floatsisf+0x6c>
     79e:	6f 5f       	subi	r22, 0xFF	; 255
     7a0:	7f 4f       	sbci	r23, 0xFF	; 255
     7a2:	8f 4f       	sbci	r24, 0xFF	; 255
     7a4:	9f 4f       	sbci	r25, 0xFF	; 255
     7a6:	16 c0       	rjmp	.+44     	; 0x7d4 <__floatsisf+0x6c>
     7a8:	88 23       	and	r24, r24
     7aa:	11 f0       	breq	.+4      	; 0x7b0 <__floatsisf+0x48>
     7ac:	96 e9       	ldi	r25, 0x96	; 150
     7ae:	11 c0       	rjmp	.+34     	; 0x7d2 <__floatsisf+0x6a>
     7b0:	77 23       	and	r23, r23
     7b2:	21 f0       	breq	.+8      	; 0x7bc <__floatsisf+0x54>
     7b4:	9e e8       	ldi	r25, 0x8E	; 142
     7b6:	87 2f       	mov	r24, r23
     7b8:	76 2f       	mov	r23, r22
     7ba:	05 c0       	rjmp	.+10     	; 0x7c6 <__floatsisf+0x5e>
     7bc:	66 23       	and	r22, r22
     7be:	71 f0       	breq	.+28     	; 0x7dc <__floatsisf+0x74>
     7c0:	96 e8       	ldi	r25, 0x86	; 134
     7c2:	86 2f       	mov	r24, r22
     7c4:	70 e0       	ldi	r23, 0x00	; 0
     7c6:	60 e0       	ldi	r22, 0x00	; 0
     7c8:	2a f0       	brmi	.+10     	; 0x7d4 <__floatsisf+0x6c>
     7ca:	9a 95       	dec	r25
     7cc:	66 0f       	add	r22, r22
     7ce:	77 1f       	adc	r23, r23
     7d0:	88 1f       	adc	r24, r24
     7d2:	da f7       	brpl	.-10     	; 0x7ca <__floatsisf+0x62>
     7d4:	88 0f       	add	r24, r24
     7d6:	96 95       	lsr	r25
     7d8:	87 95       	ror	r24
     7da:	97 f9       	bld	r25, 7
     7dc:	08 95       	ret

000007de <__fp_inf>:
     7de:	97 f9       	bld	r25, 7
     7e0:	9f 67       	ori	r25, 0x7F	; 127
     7e2:	80 e8       	ldi	r24, 0x80	; 128
     7e4:	70 e0       	ldi	r23, 0x00	; 0
     7e6:	60 e0       	ldi	r22, 0x00	; 0
     7e8:	08 95       	ret

000007ea <__fp_nan>:
     7ea:	9f ef       	ldi	r25, 0xFF	; 255
     7ec:	80 ec       	ldi	r24, 0xC0	; 192
     7ee:	08 95       	ret

000007f0 <__fp_pscA>:
     7f0:	00 24       	eor	r0, r0
     7f2:	0a 94       	dec	r0
     7f4:	16 16       	cp	r1, r22
     7f6:	17 06       	cpc	r1, r23
     7f8:	18 06       	cpc	r1, r24
     7fa:	09 06       	cpc	r0, r25
     7fc:	08 95       	ret

000007fe <__fp_pscB>:
     7fe:	00 24       	eor	r0, r0
     800:	0a 94       	dec	r0
     802:	12 16       	cp	r1, r18
     804:	13 06       	cpc	r1, r19
     806:	14 06       	cpc	r1, r20
     808:	05 06       	cpc	r0, r21
     80a:	08 95       	ret

0000080c <__fp_round>:
     80c:	09 2e       	mov	r0, r25
     80e:	03 94       	inc	r0
     810:	00 0c       	add	r0, r0
     812:	11 f4       	brne	.+4      	; 0x818 <__fp_round+0xc>
     814:	88 23       	and	r24, r24
     816:	52 f0       	brmi	.+20     	; 0x82c <__fp_round+0x20>
     818:	bb 0f       	add	r27, r27
     81a:	40 f4       	brcc	.+16     	; 0x82c <__fp_round+0x20>
     81c:	bf 2b       	or	r27, r31
     81e:	11 f4       	brne	.+4      	; 0x824 <__fp_round+0x18>
     820:	60 ff       	sbrs	r22, 0
     822:	04 c0       	rjmp	.+8      	; 0x82c <__fp_round+0x20>
     824:	6f 5f       	subi	r22, 0xFF	; 255
     826:	7f 4f       	sbci	r23, 0xFF	; 255
     828:	8f 4f       	sbci	r24, 0xFF	; 255
     82a:	9f 4f       	sbci	r25, 0xFF	; 255
     82c:	08 95       	ret

0000082e <__fp_split3>:
     82e:	57 fd       	sbrc	r21, 7
     830:	90 58       	subi	r25, 0x80	; 128
     832:	44 0f       	add	r20, r20
     834:	55 1f       	adc	r21, r21
     836:	59 f0       	breq	.+22     	; 0x84e <__fp_splitA+0x10>
     838:	5f 3f       	cpi	r21, 0xFF	; 255
     83a:	71 f0       	breq	.+28     	; 0x858 <__fp_splitA+0x1a>
     83c:	47 95       	ror	r20

0000083e <__fp_splitA>:
     83e:	88 0f       	add	r24, r24
     840:	97 fb       	bst	r25, 7
     842:	99 1f       	adc	r25, r25
     844:	61 f0       	breq	.+24     	; 0x85e <__fp_splitA+0x20>
     846:	9f 3f       	cpi	r25, 0xFF	; 255
     848:	79 f0       	breq	.+30     	; 0x868 <__fp_splitA+0x2a>
     84a:	87 95       	ror	r24
     84c:	08 95       	ret
     84e:	12 16       	cp	r1, r18
     850:	13 06       	cpc	r1, r19
     852:	14 06       	cpc	r1, r20
     854:	55 1f       	adc	r21, r21
     856:	f2 cf       	rjmp	.-28     	; 0x83c <__fp_split3+0xe>
     858:	46 95       	lsr	r20
     85a:	f1 df       	rcall	.-30     	; 0x83e <__fp_splitA>
     85c:	08 c0       	rjmp	.+16     	; 0x86e <__fp_splitA+0x30>
     85e:	16 16       	cp	r1, r22
     860:	17 06       	cpc	r1, r23
     862:	18 06       	cpc	r1, r24
     864:	99 1f       	adc	r25, r25
     866:	f1 cf       	rjmp	.-30     	; 0x84a <__fp_splitA+0xc>
     868:	86 95       	lsr	r24
     86a:	71 05       	cpc	r23, r1
     86c:	61 05       	cpc	r22, r1
     86e:	08 94       	sec
     870:	08 95       	ret

00000872 <__fp_zero>:
     872:	e8 94       	clt

00000874 <__fp_szero>:
     874:	bb 27       	eor	r27, r27
     876:	66 27       	eor	r22, r22
     878:	77 27       	eor	r23, r23
     87a:	cb 01       	movw	r24, r22
     87c:	97 f9       	bld	r25, 7
     87e:	08 95       	ret

00000880 <__mulsf3>:
     880:	0b d0       	rcall	.+22     	; 0x898 <__mulsf3x>
     882:	c4 cf       	rjmp	.-120    	; 0x80c <__fp_round>
     884:	b5 df       	rcall	.-150    	; 0x7f0 <__fp_pscA>
     886:	28 f0       	brcs	.+10     	; 0x892 <__mulsf3+0x12>
     888:	ba df       	rcall	.-140    	; 0x7fe <__fp_pscB>
     88a:	18 f0       	brcs	.+6      	; 0x892 <__mulsf3+0x12>
     88c:	95 23       	and	r25, r21
     88e:	09 f0       	breq	.+2      	; 0x892 <__mulsf3+0x12>
     890:	a6 cf       	rjmp	.-180    	; 0x7de <__fp_inf>
     892:	ab cf       	rjmp	.-170    	; 0x7ea <__fp_nan>
     894:	11 24       	eor	r1, r1
     896:	ee cf       	rjmp	.-36     	; 0x874 <__fp_szero>

00000898 <__mulsf3x>:
     898:	ca df       	rcall	.-108    	; 0x82e <__fp_split3>
     89a:	a0 f3       	brcs	.-24     	; 0x884 <__mulsf3+0x4>

0000089c <__mulsf3_pse>:
     89c:	95 9f       	mul	r25, r21
     89e:	d1 f3       	breq	.-12     	; 0x894 <__mulsf3+0x14>
     8a0:	95 0f       	add	r25, r21
     8a2:	50 e0       	ldi	r21, 0x00	; 0
     8a4:	55 1f       	adc	r21, r21
     8a6:	62 9f       	mul	r22, r18
     8a8:	f0 01       	movw	r30, r0
     8aa:	72 9f       	mul	r23, r18
     8ac:	bb 27       	eor	r27, r27
     8ae:	f0 0d       	add	r31, r0
     8b0:	b1 1d       	adc	r27, r1
     8b2:	63 9f       	mul	r22, r19
     8b4:	aa 27       	eor	r26, r26
     8b6:	f0 0d       	add	r31, r0
     8b8:	b1 1d       	adc	r27, r1
     8ba:	aa 1f       	adc	r26, r26
     8bc:	64 9f       	mul	r22, r20
     8be:	66 27       	eor	r22, r22
     8c0:	b0 0d       	add	r27, r0
     8c2:	a1 1d       	adc	r26, r1
     8c4:	66 1f       	adc	r22, r22
     8c6:	82 9f       	mul	r24, r18
     8c8:	22 27       	eor	r18, r18
     8ca:	b0 0d       	add	r27, r0
     8cc:	a1 1d       	adc	r26, r1
     8ce:	62 1f       	adc	r22, r18
     8d0:	73 9f       	mul	r23, r19
     8d2:	b0 0d       	add	r27, r0
     8d4:	a1 1d       	adc	r26, r1
     8d6:	62 1f       	adc	r22, r18
     8d8:	83 9f       	mul	r24, r19
     8da:	a0 0d       	add	r26, r0
     8dc:	61 1d       	adc	r22, r1
     8de:	22 1f       	adc	r18, r18
     8e0:	74 9f       	mul	r23, r20
     8e2:	33 27       	eor	r19, r19
     8e4:	a0 0d       	add	r26, r0
     8e6:	61 1d       	adc	r22, r1
     8e8:	23 1f       	adc	r18, r19
     8ea:	84 9f       	mul	r24, r20
     8ec:	60 0d       	add	r22, r0
     8ee:	21 1d       	adc	r18, r1
     8f0:	82 2f       	mov	r24, r18
     8f2:	76 2f       	mov	r23, r22
     8f4:	6a 2f       	mov	r22, r26
     8f6:	11 24       	eor	r1, r1
     8f8:	9f 57       	subi	r25, 0x7F	; 127
     8fa:	50 40       	sbci	r21, 0x00	; 0
     8fc:	8a f0       	brmi	.+34     	; 0x920 <__mulsf3_pse+0x84>
     8fe:	e1 f0       	breq	.+56     	; 0x938 <__mulsf3_pse+0x9c>
     900:	88 23       	and	r24, r24
     902:	4a f0       	brmi	.+18     	; 0x916 <__mulsf3_pse+0x7a>
     904:	ee 0f       	add	r30, r30
     906:	ff 1f       	adc	r31, r31
     908:	bb 1f       	adc	r27, r27
     90a:	66 1f       	adc	r22, r22
     90c:	77 1f       	adc	r23, r23
     90e:	88 1f       	adc	r24, r24
     910:	91 50       	subi	r25, 0x01	; 1
     912:	50 40       	sbci	r21, 0x00	; 0
     914:	a9 f7       	brne	.-22     	; 0x900 <__mulsf3_pse+0x64>
     916:	9e 3f       	cpi	r25, 0xFE	; 254
     918:	51 05       	cpc	r21, r1
     91a:	70 f0       	brcs	.+28     	; 0x938 <__mulsf3_pse+0x9c>
     91c:	60 cf       	rjmp	.-320    	; 0x7de <__fp_inf>
     91e:	aa cf       	rjmp	.-172    	; 0x874 <__fp_szero>
     920:	5f 3f       	cpi	r21, 0xFF	; 255
     922:	ec f3       	brlt	.-6      	; 0x91e <__mulsf3_pse+0x82>
     924:	98 3e       	cpi	r25, 0xE8	; 232
     926:	dc f3       	brlt	.-10     	; 0x91e <__mulsf3_pse+0x82>
     928:	86 95       	lsr	r24
     92a:	77 95       	ror	r23
     92c:	67 95       	ror	r22
     92e:	b7 95       	ror	r27
     930:	f7 95       	ror	r31
     932:	e7 95       	ror	r30
     934:	9f 5f       	subi	r25, 0xFF	; 255
     936:	c1 f7       	brne	.-16     	; 0x928 <__mulsf3_pse+0x8c>
     938:	fe 2b       	or	r31, r30
     93a:	88 0f       	add	r24, r24
     93c:	91 1d       	adc	r25, r1
     93e:	96 95       	lsr	r25
     940:	87 95       	ror	r24
     942:	97 f9       	bld	r25, 7
     944:	08 95       	ret

00000946 <__divmodsi4>:
     946:	05 2e       	mov	r0, r21
     948:	97 fb       	bst	r25, 7
     94a:	16 f4       	brtc	.+4      	; 0x950 <__divmodsi4+0xa>
     94c:	00 94       	com	r0
     94e:	0f d0       	rcall	.+30     	; 0x96e <__negsi2>
     950:	57 fd       	sbrc	r21, 7
     952:	05 d0       	rcall	.+10     	; 0x95e <__divmodsi4_neg2>
     954:	1a d0       	rcall	.+52     	; 0x98a <__udivmodsi4>
     956:	07 fc       	sbrc	r0, 7
     958:	02 d0       	rcall	.+4      	; 0x95e <__divmodsi4_neg2>
     95a:	46 f4       	brtc	.+16     	; 0x96c <__divmodsi4_exit>
     95c:	08 c0       	rjmp	.+16     	; 0x96e <__negsi2>

0000095e <__divmodsi4_neg2>:
     95e:	50 95       	com	r21
     960:	40 95       	com	r20
     962:	30 95       	com	r19
     964:	21 95       	neg	r18
     966:	3f 4f       	sbci	r19, 0xFF	; 255
     968:	4f 4f       	sbci	r20, 0xFF	; 255
     96a:	5f 4f       	sbci	r21, 0xFF	; 255

0000096c <__divmodsi4_exit>:
     96c:	08 95       	ret

0000096e <__negsi2>:
     96e:	90 95       	com	r25
     970:	80 95       	com	r24
     972:	70 95       	com	r23
     974:	61 95       	neg	r22
     976:	7f 4f       	sbci	r23, 0xFF	; 255
     978:	8f 4f       	sbci	r24, 0xFF	; 255
     97a:	9f 4f       	sbci	r25, 0xFF	; 255
     97c:	08 95       	ret

0000097e <__tablejump2__>:
     97e:	ee 0f       	add	r30, r30
     980:	ff 1f       	adc	r31, r31

00000982 <__tablejump__>:
     982:	05 90       	lpm	r0, Z+
     984:	f4 91       	lpm	r31, Z
     986:	e0 2d       	mov	r30, r0
     988:	19 94       	eijmp

0000098a <__udivmodsi4>:
     98a:	a1 e2       	ldi	r26, 0x21	; 33
     98c:	1a 2e       	mov	r1, r26
     98e:	aa 1b       	sub	r26, r26
     990:	bb 1b       	sub	r27, r27
     992:	fd 01       	movw	r30, r26
     994:	0d c0       	rjmp	.+26     	; 0x9b0 <__udivmodsi4_ep>

00000996 <__udivmodsi4_loop>:
     996:	aa 1f       	adc	r26, r26
     998:	bb 1f       	adc	r27, r27
     99a:	ee 1f       	adc	r30, r30
     99c:	ff 1f       	adc	r31, r31
     99e:	a2 17       	cp	r26, r18
     9a0:	b3 07       	cpc	r27, r19
     9a2:	e4 07       	cpc	r30, r20
     9a4:	f5 07       	cpc	r31, r21
     9a6:	20 f0       	brcs	.+8      	; 0x9b0 <__udivmodsi4_ep>
     9a8:	a2 1b       	sub	r26, r18
     9aa:	b3 0b       	sbc	r27, r19
     9ac:	e4 0b       	sbc	r30, r20
     9ae:	f5 0b       	sbc	r31, r21

000009b0 <__udivmodsi4_ep>:
     9b0:	66 1f       	adc	r22, r22
     9b2:	77 1f       	adc	r23, r23
     9b4:	88 1f       	adc	r24, r24
     9b6:	99 1f       	adc	r25, r25
     9b8:	1a 94       	dec	r1
     9ba:	69 f7       	brne	.-38     	; 0x996 <__udivmodsi4_loop>
     9bc:	60 95       	com	r22
     9be:	70 95       	com	r23
     9c0:	80 95       	com	r24
     9c2:	90 95       	com	r25
     9c4:	9b 01       	movw	r18, r22
     9c6:	ac 01       	movw	r20, r24
     9c8:	bd 01       	movw	r22, r26
     9ca:	cf 01       	movw	r24, r30
     9cc:	08 95       	ret

000009ce <malloc>:
     9ce:	cf 93       	push	r28
     9d0:	df 93       	push	r29
     9d2:	82 30       	cpi	r24, 0x02	; 2
     9d4:	91 05       	cpc	r25, r1
     9d6:	10 f4       	brcc	.+4      	; 0x9dc <malloc+0xe>
     9d8:	82 e0       	ldi	r24, 0x02	; 2
     9da:	90 e0       	ldi	r25, 0x00	; 0
     9dc:	e0 91 25 02 	lds	r30, 0x0225
     9e0:	f0 91 26 02 	lds	r31, 0x0226
     9e4:	20 e0       	ldi	r18, 0x00	; 0
     9e6:	30 e0       	ldi	r19, 0x00	; 0
     9e8:	a0 e0       	ldi	r26, 0x00	; 0
     9ea:	b0 e0       	ldi	r27, 0x00	; 0
     9ec:	30 97       	sbiw	r30, 0x00	; 0
     9ee:	39 f1       	breq	.+78     	; 0xa3e <malloc+0x70>
     9f0:	40 81       	ld	r20, Z
     9f2:	51 81       	ldd	r21, Z+1	; 0x01
     9f4:	48 17       	cp	r20, r24
     9f6:	59 07       	cpc	r21, r25
     9f8:	b8 f0       	brcs	.+46     	; 0xa28 <malloc+0x5a>
     9fa:	48 17       	cp	r20, r24
     9fc:	59 07       	cpc	r21, r25
     9fe:	71 f4       	brne	.+28     	; 0xa1c <malloc+0x4e>
     a00:	82 81       	ldd	r24, Z+2	; 0x02
     a02:	93 81       	ldd	r25, Z+3	; 0x03
     a04:	10 97       	sbiw	r26, 0x00	; 0
     a06:	29 f0       	breq	.+10     	; 0xa12 <malloc+0x44>
     a08:	13 96       	adiw	r26, 0x03	; 3
     a0a:	9c 93       	st	X, r25
     a0c:	8e 93       	st	-X, r24
     a0e:	12 97       	sbiw	r26, 0x02	; 2
     a10:	2c c0       	rjmp	.+88     	; 0xa6a <malloc+0x9c>
     a12:	90 93 26 02 	sts	0x0226, r25
     a16:	80 93 25 02 	sts	0x0225, r24
     a1a:	27 c0       	rjmp	.+78     	; 0xa6a <malloc+0x9c>
     a1c:	21 15       	cp	r18, r1
     a1e:	31 05       	cpc	r19, r1
     a20:	31 f0       	breq	.+12     	; 0xa2e <malloc+0x60>
     a22:	42 17       	cp	r20, r18
     a24:	53 07       	cpc	r21, r19
     a26:	18 f0       	brcs	.+6      	; 0xa2e <malloc+0x60>
     a28:	a9 01       	movw	r20, r18
     a2a:	db 01       	movw	r26, r22
     a2c:	01 c0       	rjmp	.+2      	; 0xa30 <malloc+0x62>
     a2e:	ef 01       	movw	r28, r30
     a30:	9a 01       	movw	r18, r20
     a32:	bd 01       	movw	r22, r26
     a34:	df 01       	movw	r26, r30
     a36:	02 80       	ldd	r0, Z+2	; 0x02
     a38:	f3 81       	ldd	r31, Z+3	; 0x03
     a3a:	e0 2d       	mov	r30, r0
     a3c:	d7 cf       	rjmp	.-82     	; 0x9ec <malloc+0x1e>
     a3e:	21 15       	cp	r18, r1
     a40:	31 05       	cpc	r19, r1
     a42:	f9 f0       	breq	.+62     	; 0xa82 <malloc+0xb4>
     a44:	28 1b       	sub	r18, r24
     a46:	39 0b       	sbc	r19, r25
     a48:	24 30       	cpi	r18, 0x04	; 4
     a4a:	31 05       	cpc	r19, r1
     a4c:	80 f4       	brcc	.+32     	; 0xa6e <malloc+0xa0>
     a4e:	8a 81       	ldd	r24, Y+2	; 0x02
     a50:	9b 81       	ldd	r25, Y+3	; 0x03
     a52:	61 15       	cp	r22, r1
     a54:	71 05       	cpc	r23, r1
     a56:	21 f0       	breq	.+8      	; 0xa60 <malloc+0x92>
     a58:	fb 01       	movw	r30, r22
     a5a:	93 83       	std	Z+3, r25	; 0x03
     a5c:	82 83       	std	Z+2, r24	; 0x02
     a5e:	04 c0       	rjmp	.+8      	; 0xa68 <malloc+0x9a>
     a60:	90 93 26 02 	sts	0x0226, r25
     a64:	80 93 25 02 	sts	0x0225, r24
     a68:	fe 01       	movw	r30, r28
     a6a:	32 96       	adiw	r30, 0x02	; 2
     a6c:	44 c0       	rjmp	.+136    	; 0xaf6 <malloc+0x128>
     a6e:	fe 01       	movw	r30, r28
     a70:	e2 0f       	add	r30, r18
     a72:	f3 1f       	adc	r31, r19
     a74:	81 93       	st	Z+, r24
     a76:	91 93       	st	Z+, r25
     a78:	22 50       	subi	r18, 0x02	; 2
     a7a:	31 09       	sbc	r19, r1
     a7c:	39 83       	std	Y+1, r19	; 0x01
     a7e:	28 83       	st	Y, r18
     a80:	3a c0       	rjmp	.+116    	; 0xaf6 <malloc+0x128>
     a82:	20 91 23 02 	lds	r18, 0x0223
     a86:	30 91 24 02 	lds	r19, 0x0224
     a8a:	23 2b       	or	r18, r19
     a8c:	41 f4       	brne	.+16     	; 0xa9e <malloc+0xd0>
     a8e:	20 91 02 02 	lds	r18, 0x0202
     a92:	30 91 03 02 	lds	r19, 0x0203
     a96:	30 93 24 02 	sts	0x0224, r19
     a9a:	20 93 23 02 	sts	0x0223, r18
     a9e:	20 91 00 02 	lds	r18, 0x0200
     aa2:	30 91 01 02 	lds	r19, 0x0201
     aa6:	21 15       	cp	r18, r1
     aa8:	31 05       	cpc	r19, r1
     aaa:	41 f4       	brne	.+16     	; 0xabc <malloc+0xee>
     aac:	2d b7       	in	r18, 0x3d	; 61
     aae:	3e b7       	in	r19, 0x3e	; 62
     ab0:	40 91 04 02 	lds	r20, 0x0204
     ab4:	50 91 05 02 	lds	r21, 0x0205
     ab8:	24 1b       	sub	r18, r20
     aba:	35 0b       	sbc	r19, r21
     abc:	e0 91 23 02 	lds	r30, 0x0223
     ac0:	f0 91 24 02 	lds	r31, 0x0224
     ac4:	e2 17       	cp	r30, r18
     ac6:	f3 07       	cpc	r31, r19
     ac8:	a0 f4       	brcc	.+40     	; 0xaf2 <malloc+0x124>
     aca:	2e 1b       	sub	r18, r30
     acc:	3f 0b       	sbc	r19, r31
     ace:	28 17       	cp	r18, r24
     ad0:	39 07       	cpc	r19, r25
     ad2:	78 f0       	brcs	.+30     	; 0xaf2 <malloc+0x124>
     ad4:	ac 01       	movw	r20, r24
     ad6:	4e 5f       	subi	r20, 0xFE	; 254
     ad8:	5f 4f       	sbci	r21, 0xFF	; 255
     ada:	24 17       	cp	r18, r20
     adc:	35 07       	cpc	r19, r21
     ade:	48 f0       	brcs	.+18     	; 0xaf2 <malloc+0x124>
     ae0:	4e 0f       	add	r20, r30
     ae2:	5f 1f       	adc	r21, r31
     ae4:	50 93 24 02 	sts	0x0224, r21
     ae8:	40 93 23 02 	sts	0x0223, r20
     aec:	81 93       	st	Z+, r24
     aee:	91 93       	st	Z+, r25
     af0:	02 c0       	rjmp	.+4      	; 0xaf6 <malloc+0x128>
     af2:	e0 e0       	ldi	r30, 0x00	; 0
     af4:	f0 e0       	ldi	r31, 0x00	; 0
     af6:	cf 01       	movw	r24, r30
     af8:	df 91       	pop	r29
     afa:	cf 91       	pop	r28
     afc:	08 95       	ret

00000afe <free>:
     afe:	cf 93       	push	r28
     b00:	df 93       	push	r29
     b02:	00 97       	sbiw	r24, 0x00	; 0
     b04:	09 f4       	brne	.+2      	; 0xb08 <free+0xa>
     b06:	87 c0       	rjmp	.+270    	; 0xc16 <free+0x118>
     b08:	fc 01       	movw	r30, r24
     b0a:	32 97       	sbiw	r30, 0x02	; 2
     b0c:	13 82       	std	Z+3, r1	; 0x03
     b0e:	12 82       	std	Z+2, r1	; 0x02
     b10:	c0 91 25 02 	lds	r28, 0x0225
     b14:	d0 91 26 02 	lds	r29, 0x0226
     b18:	20 97       	sbiw	r28, 0x00	; 0
     b1a:	81 f4       	brne	.+32     	; 0xb3c <free+0x3e>
     b1c:	20 81       	ld	r18, Z
     b1e:	31 81       	ldd	r19, Z+1	; 0x01
     b20:	28 0f       	add	r18, r24
     b22:	39 1f       	adc	r19, r25
     b24:	80 91 23 02 	lds	r24, 0x0223
     b28:	90 91 24 02 	lds	r25, 0x0224
     b2c:	82 17       	cp	r24, r18
     b2e:	93 07       	cpc	r25, r19
     b30:	79 f5       	brne	.+94     	; 0xb90 <free+0x92>
     b32:	f0 93 24 02 	sts	0x0224, r31
     b36:	e0 93 23 02 	sts	0x0223, r30
     b3a:	6d c0       	rjmp	.+218    	; 0xc16 <free+0x118>
     b3c:	de 01       	movw	r26, r28
     b3e:	20 e0       	ldi	r18, 0x00	; 0
     b40:	30 e0       	ldi	r19, 0x00	; 0
     b42:	ae 17       	cp	r26, r30
     b44:	bf 07       	cpc	r27, r31
     b46:	50 f4       	brcc	.+20     	; 0xb5c <free+0x5e>
     b48:	12 96       	adiw	r26, 0x02	; 2
     b4a:	4d 91       	ld	r20, X+
     b4c:	5c 91       	ld	r21, X
     b4e:	13 97       	sbiw	r26, 0x03	; 3
     b50:	9d 01       	movw	r18, r26
     b52:	41 15       	cp	r20, r1
     b54:	51 05       	cpc	r21, r1
     b56:	09 f1       	breq	.+66     	; 0xb9a <free+0x9c>
     b58:	da 01       	movw	r26, r20
     b5a:	f3 cf       	rjmp	.-26     	; 0xb42 <free+0x44>
     b5c:	b3 83       	std	Z+3, r27	; 0x03
     b5e:	a2 83       	std	Z+2, r26	; 0x02
     b60:	40 81       	ld	r20, Z
     b62:	51 81       	ldd	r21, Z+1	; 0x01
     b64:	84 0f       	add	r24, r20
     b66:	95 1f       	adc	r25, r21
     b68:	8a 17       	cp	r24, r26
     b6a:	9b 07       	cpc	r25, r27
     b6c:	71 f4       	brne	.+28     	; 0xb8a <free+0x8c>
     b6e:	8d 91       	ld	r24, X+
     b70:	9c 91       	ld	r25, X
     b72:	11 97       	sbiw	r26, 0x01	; 1
     b74:	84 0f       	add	r24, r20
     b76:	95 1f       	adc	r25, r21
     b78:	02 96       	adiw	r24, 0x02	; 2
     b7a:	91 83       	std	Z+1, r25	; 0x01
     b7c:	80 83       	st	Z, r24
     b7e:	12 96       	adiw	r26, 0x02	; 2
     b80:	8d 91       	ld	r24, X+
     b82:	9c 91       	ld	r25, X
     b84:	13 97       	sbiw	r26, 0x03	; 3
     b86:	93 83       	std	Z+3, r25	; 0x03
     b88:	82 83       	std	Z+2, r24	; 0x02
     b8a:	21 15       	cp	r18, r1
     b8c:	31 05       	cpc	r19, r1
     b8e:	29 f4       	brne	.+10     	; 0xb9a <free+0x9c>
     b90:	f0 93 26 02 	sts	0x0226, r31
     b94:	e0 93 25 02 	sts	0x0225, r30
     b98:	3e c0       	rjmp	.+124    	; 0xc16 <free+0x118>
     b9a:	d9 01       	movw	r26, r18
     b9c:	13 96       	adiw	r26, 0x03	; 3
     b9e:	fc 93       	st	X, r31
     ba0:	ee 93       	st	-X, r30
     ba2:	12 97       	sbiw	r26, 0x02	; 2
     ba4:	4d 91       	ld	r20, X+
     ba6:	5d 91       	ld	r21, X+
     ba8:	a4 0f       	add	r26, r20
     baa:	b5 1f       	adc	r27, r21
     bac:	ea 17       	cp	r30, r26
     bae:	fb 07       	cpc	r31, r27
     bb0:	79 f4       	brne	.+30     	; 0xbd0 <free+0xd2>
     bb2:	80 81       	ld	r24, Z
     bb4:	91 81       	ldd	r25, Z+1	; 0x01
     bb6:	84 0f       	add	r24, r20
     bb8:	95 1f       	adc	r25, r21
     bba:	02 96       	adiw	r24, 0x02	; 2
     bbc:	d9 01       	movw	r26, r18
     bbe:	11 96       	adiw	r26, 0x01	; 1
     bc0:	9c 93       	st	X, r25
     bc2:	8e 93       	st	-X, r24
     bc4:	82 81       	ldd	r24, Z+2	; 0x02
     bc6:	93 81       	ldd	r25, Z+3	; 0x03
     bc8:	13 96       	adiw	r26, 0x03	; 3
     bca:	9c 93       	st	X, r25
     bcc:	8e 93       	st	-X, r24
     bce:	12 97       	sbiw	r26, 0x02	; 2
     bd0:	e0 e0       	ldi	r30, 0x00	; 0
     bd2:	f0 e0       	ldi	r31, 0x00	; 0
     bd4:	8a 81       	ldd	r24, Y+2	; 0x02
     bd6:	9b 81       	ldd	r25, Y+3	; 0x03
     bd8:	00 97       	sbiw	r24, 0x00	; 0
     bda:	19 f0       	breq	.+6      	; 0xbe2 <free+0xe4>
     bdc:	fe 01       	movw	r30, r28
     bde:	ec 01       	movw	r28, r24
     be0:	f9 cf       	rjmp	.-14     	; 0xbd4 <free+0xd6>
     be2:	ce 01       	movw	r24, r28
     be4:	02 96       	adiw	r24, 0x02	; 2
     be6:	28 81       	ld	r18, Y
     be8:	39 81       	ldd	r19, Y+1	; 0x01
     bea:	82 0f       	add	r24, r18
     bec:	93 1f       	adc	r25, r19
     bee:	20 91 23 02 	lds	r18, 0x0223
     bf2:	30 91 24 02 	lds	r19, 0x0224
     bf6:	28 17       	cp	r18, r24
     bf8:	39 07       	cpc	r19, r25
     bfa:	69 f4       	brne	.+26     	; 0xc16 <free+0x118>
     bfc:	30 97       	sbiw	r30, 0x00	; 0
     bfe:	29 f4       	brne	.+10     	; 0xc0a <free+0x10c>
     c00:	10 92 26 02 	sts	0x0226, r1
     c04:	10 92 25 02 	sts	0x0225, r1
     c08:	02 c0       	rjmp	.+4      	; 0xc0e <free+0x110>
     c0a:	13 82       	std	Z+3, r1	; 0x03
     c0c:	12 82       	std	Z+2, r1	; 0x02
     c0e:	d0 93 24 02 	sts	0x0224, r29
     c12:	c0 93 23 02 	sts	0x0223, r28
     c16:	df 91       	pop	r29
     c18:	cf 91       	pop	r28
     c1a:	08 95       	ret

00000c1c <fdevopen>:
     c1c:	0f 93       	push	r16
     c1e:	1f 93       	push	r17
     c20:	cf 93       	push	r28
     c22:	df 93       	push	r29
     c24:	ec 01       	movw	r28, r24
     c26:	8b 01       	movw	r16, r22
     c28:	00 97       	sbiw	r24, 0x00	; 0
     c2a:	31 f4       	brne	.+12     	; 0xc38 <fdevopen+0x1c>
     c2c:	61 15       	cp	r22, r1
     c2e:	71 05       	cpc	r23, r1
     c30:	19 f4       	brne	.+6      	; 0xc38 <fdevopen+0x1c>
     c32:	80 e0       	ldi	r24, 0x00	; 0
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	37 c0       	rjmp	.+110    	; 0xca6 <fdevopen+0x8a>
     c38:	6e e0       	ldi	r22, 0x0E	; 14
     c3a:	70 e0       	ldi	r23, 0x00	; 0
     c3c:	81 e0       	ldi	r24, 0x01	; 1
     c3e:	90 e0       	ldi	r25, 0x00	; 0
     c40:	36 d2       	rcall	.+1132   	; 0x10ae <calloc>
     c42:	fc 01       	movw	r30, r24
     c44:	00 97       	sbiw	r24, 0x00	; 0
     c46:	a9 f3       	breq	.-22     	; 0xc32 <fdevopen+0x16>
     c48:	80 e8       	ldi	r24, 0x80	; 128
     c4a:	83 83       	std	Z+3, r24	; 0x03
     c4c:	01 15       	cp	r16, r1
     c4e:	11 05       	cpc	r17, r1
     c50:	71 f0       	breq	.+28     	; 0xc6e <fdevopen+0x52>
     c52:	13 87       	std	Z+11, r17	; 0x0b
     c54:	02 87       	std	Z+10, r16	; 0x0a
     c56:	81 e8       	ldi	r24, 0x81	; 129
     c58:	83 83       	std	Z+3, r24	; 0x03
     c5a:	80 91 27 02 	lds	r24, 0x0227
     c5e:	90 91 28 02 	lds	r25, 0x0228
     c62:	89 2b       	or	r24, r25
     c64:	21 f4       	brne	.+8      	; 0xc6e <fdevopen+0x52>
     c66:	f0 93 28 02 	sts	0x0228, r31
     c6a:	e0 93 27 02 	sts	0x0227, r30
     c6e:	20 97       	sbiw	r28, 0x00	; 0
     c70:	c9 f0       	breq	.+50     	; 0xca4 <fdevopen+0x88>
     c72:	d1 87       	std	Z+9, r29	; 0x09
     c74:	c0 87       	std	Z+8, r28	; 0x08
     c76:	83 81       	ldd	r24, Z+3	; 0x03
     c78:	82 60       	ori	r24, 0x02	; 2
     c7a:	83 83       	std	Z+3, r24	; 0x03
     c7c:	80 91 29 02 	lds	r24, 0x0229
     c80:	90 91 2a 02 	lds	r25, 0x022A
     c84:	89 2b       	or	r24, r25
     c86:	71 f4       	brne	.+28     	; 0xca4 <fdevopen+0x88>
     c88:	f0 93 2a 02 	sts	0x022A, r31
     c8c:	e0 93 29 02 	sts	0x0229, r30
     c90:	80 91 2b 02 	lds	r24, 0x022B
     c94:	90 91 2c 02 	lds	r25, 0x022C
     c98:	89 2b       	or	r24, r25
     c9a:	21 f4       	brne	.+8      	; 0xca4 <fdevopen+0x88>
     c9c:	f0 93 2c 02 	sts	0x022C, r31
     ca0:	e0 93 2b 02 	sts	0x022B, r30
     ca4:	cf 01       	movw	r24, r30
     ca6:	df 91       	pop	r29
     ca8:	cf 91       	pop	r28
     caa:	1f 91       	pop	r17
     cac:	0f 91       	pop	r16
     cae:	08 95       	ret

00000cb0 <printf>:
     cb0:	cf 93       	push	r28
     cb2:	df 93       	push	r29
     cb4:	cd b7       	in	r28, 0x3d	; 61
     cb6:	de b7       	in	r29, 0x3e	; 62
     cb8:	fe 01       	movw	r30, r28
     cba:	36 96       	adiw	r30, 0x06	; 6
     cbc:	61 91       	ld	r22, Z+
     cbe:	71 91       	ld	r23, Z+
     cc0:	af 01       	movw	r20, r30
     cc2:	80 91 29 02 	lds	r24, 0x0229
     cc6:	90 91 2a 02 	lds	r25, 0x022A
     cca:	03 d0       	rcall	.+6      	; 0xcd2 <vfprintf>
     ccc:	df 91       	pop	r29
     cce:	cf 91       	pop	r28
     cd0:	08 95       	ret

00000cd2 <vfprintf>:
     cd2:	2f 92       	push	r2
     cd4:	3f 92       	push	r3
     cd6:	4f 92       	push	r4
     cd8:	5f 92       	push	r5
     cda:	6f 92       	push	r6
     cdc:	7f 92       	push	r7
     cde:	8f 92       	push	r8
     ce0:	9f 92       	push	r9
     ce2:	af 92       	push	r10
     ce4:	bf 92       	push	r11
     ce6:	cf 92       	push	r12
     ce8:	df 92       	push	r13
     cea:	ef 92       	push	r14
     cec:	ff 92       	push	r15
     cee:	0f 93       	push	r16
     cf0:	1f 93       	push	r17
     cf2:	cf 93       	push	r28
     cf4:	df 93       	push	r29
     cf6:	cd b7       	in	r28, 0x3d	; 61
     cf8:	de b7       	in	r29, 0x3e	; 62
     cfa:	2c 97       	sbiw	r28, 0x0c	; 12
     cfc:	0f b6       	in	r0, 0x3f	; 63
     cfe:	f8 94       	cli
     d00:	de bf       	out	0x3e, r29	; 62
     d02:	0f be       	out	0x3f, r0	; 63
     d04:	cd bf       	out	0x3d, r28	; 61
     d06:	7c 01       	movw	r14, r24
     d08:	6b 01       	movw	r12, r22
     d0a:	8a 01       	movw	r16, r20
     d0c:	fc 01       	movw	r30, r24
     d0e:	17 82       	std	Z+7, r1	; 0x07
     d10:	16 82       	std	Z+6, r1	; 0x06
     d12:	83 81       	ldd	r24, Z+3	; 0x03
     d14:	81 ff       	sbrs	r24, 1
     d16:	b0 c1       	rjmp	.+864    	; 0x1078 <vfprintf+0x3a6>
     d18:	ce 01       	movw	r24, r28
     d1a:	01 96       	adiw	r24, 0x01	; 1
     d1c:	4c 01       	movw	r8, r24
     d1e:	f7 01       	movw	r30, r14
     d20:	93 81       	ldd	r25, Z+3	; 0x03
     d22:	f6 01       	movw	r30, r12
     d24:	93 fd       	sbrc	r25, 3
     d26:	85 91       	lpm	r24, Z+
     d28:	93 ff       	sbrs	r25, 3
     d2a:	81 91       	ld	r24, Z+
     d2c:	6f 01       	movw	r12, r30
     d2e:	88 23       	and	r24, r24
     d30:	09 f4       	brne	.+2      	; 0xd34 <vfprintf+0x62>
     d32:	9e c1       	rjmp	.+828    	; 0x1070 <vfprintf+0x39e>
     d34:	85 32       	cpi	r24, 0x25	; 37
     d36:	39 f4       	brne	.+14     	; 0xd46 <vfprintf+0x74>
     d38:	93 fd       	sbrc	r25, 3
     d3a:	85 91       	lpm	r24, Z+
     d3c:	93 ff       	sbrs	r25, 3
     d3e:	81 91       	ld	r24, Z+
     d40:	6f 01       	movw	r12, r30
     d42:	85 32       	cpi	r24, 0x25	; 37
     d44:	21 f4       	brne	.+8      	; 0xd4e <vfprintf+0x7c>
     d46:	b7 01       	movw	r22, r14
     d48:	90 e0       	ldi	r25, 0x00	; 0
     d4a:	e8 d1       	rcall	.+976    	; 0x111c <fputc>
     d4c:	e8 cf       	rjmp	.-48     	; 0xd1e <vfprintf+0x4c>
     d4e:	51 2c       	mov	r5, r1
     d50:	31 2c       	mov	r3, r1
     d52:	20 e0       	ldi	r18, 0x00	; 0
     d54:	20 32       	cpi	r18, 0x20	; 32
     d56:	a0 f4       	brcc	.+40     	; 0xd80 <vfprintf+0xae>
     d58:	8b 32       	cpi	r24, 0x2B	; 43
     d5a:	69 f0       	breq	.+26     	; 0xd76 <vfprintf+0xa4>
     d5c:	30 f4       	brcc	.+12     	; 0xd6a <vfprintf+0x98>
     d5e:	80 32       	cpi	r24, 0x20	; 32
     d60:	59 f0       	breq	.+22     	; 0xd78 <vfprintf+0xa6>
     d62:	83 32       	cpi	r24, 0x23	; 35
     d64:	69 f4       	brne	.+26     	; 0xd80 <vfprintf+0xae>
     d66:	20 61       	ori	r18, 0x10	; 16
     d68:	2c c0       	rjmp	.+88     	; 0xdc2 <vfprintf+0xf0>
     d6a:	8d 32       	cpi	r24, 0x2D	; 45
     d6c:	39 f0       	breq	.+14     	; 0xd7c <vfprintf+0xaa>
     d6e:	80 33       	cpi	r24, 0x30	; 48
     d70:	39 f4       	brne	.+14     	; 0xd80 <vfprintf+0xae>
     d72:	21 60       	ori	r18, 0x01	; 1
     d74:	26 c0       	rjmp	.+76     	; 0xdc2 <vfprintf+0xf0>
     d76:	22 60       	ori	r18, 0x02	; 2
     d78:	24 60       	ori	r18, 0x04	; 4
     d7a:	23 c0       	rjmp	.+70     	; 0xdc2 <vfprintf+0xf0>
     d7c:	28 60       	ori	r18, 0x08	; 8
     d7e:	21 c0       	rjmp	.+66     	; 0xdc2 <vfprintf+0xf0>
     d80:	27 fd       	sbrc	r18, 7
     d82:	27 c0       	rjmp	.+78     	; 0xdd2 <vfprintf+0x100>
     d84:	30 ed       	ldi	r19, 0xD0	; 208
     d86:	38 0f       	add	r19, r24
     d88:	3a 30       	cpi	r19, 0x0A	; 10
     d8a:	78 f4       	brcc	.+30     	; 0xdaa <vfprintf+0xd8>
     d8c:	26 ff       	sbrs	r18, 6
     d8e:	06 c0       	rjmp	.+12     	; 0xd9c <vfprintf+0xca>
     d90:	fa e0       	ldi	r31, 0x0A	; 10
     d92:	5f 9e       	mul	r5, r31
     d94:	30 0d       	add	r19, r0
     d96:	11 24       	eor	r1, r1
     d98:	53 2e       	mov	r5, r19
     d9a:	13 c0       	rjmp	.+38     	; 0xdc2 <vfprintf+0xf0>
     d9c:	8a e0       	ldi	r24, 0x0A	; 10
     d9e:	38 9e       	mul	r3, r24
     da0:	30 0d       	add	r19, r0
     da2:	11 24       	eor	r1, r1
     da4:	33 2e       	mov	r3, r19
     da6:	20 62       	ori	r18, 0x20	; 32
     da8:	0c c0       	rjmp	.+24     	; 0xdc2 <vfprintf+0xf0>
     daa:	8e 32       	cpi	r24, 0x2E	; 46
     dac:	21 f4       	brne	.+8      	; 0xdb6 <vfprintf+0xe4>
     dae:	26 fd       	sbrc	r18, 6
     db0:	5f c1       	rjmp	.+702    	; 0x1070 <vfprintf+0x39e>
     db2:	20 64       	ori	r18, 0x40	; 64
     db4:	06 c0       	rjmp	.+12     	; 0xdc2 <vfprintf+0xf0>
     db6:	8c 36       	cpi	r24, 0x6C	; 108
     db8:	11 f4       	brne	.+4      	; 0xdbe <vfprintf+0xec>
     dba:	20 68       	ori	r18, 0x80	; 128
     dbc:	02 c0       	rjmp	.+4      	; 0xdc2 <vfprintf+0xf0>
     dbe:	88 36       	cpi	r24, 0x68	; 104
     dc0:	41 f4       	brne	.+16     	; 0xdd2 <vfprintf+0x100>
     dc2:	f6 01       	movw	r30, r12
     dc4:	93 fd       	sbrc	r25, 3
     dc6:	85 91       	lpm	r24, Z+
     dc8:	93 ff       	sbrs	r25, 3
     dca:	81 91       	ld	r24, Z+
     dcc:	6f 01       	movw	r12, r30
     dce:	81 11       	cpse	r24, r1
     dd0:	c1 cf       	rjmp	.-126    	; 0xd54 <vfprintf+0x82>
     dd2:	98 2f       	mov	r25, r24
     dd4:	9f 7d       	andi	r25, 0xDF	; 223
     dd6:	95 54       	subi	r25, 0x45	; 69
     dd8:	93 30       	cpi	r25, 0x03	; 3
     dda:	28 f4       	brcc	.+10     	; 0xde6 <vfprintf+0x114>
     ddc:	0c 5f       	subi	r16, 0xFC	; 252
     dde:	1f 4f       	sbci	r17, 0xFF	; 255
     de0:	ff e3       	ldi	r31, 0x3F	; 63
     de2:	f9 83       	std	Y+1, r31	; 0x01
     de4:	0d c0       	rjmp	.+26     	; 0xe00 <vfprintf+0x12e>
     de6:	83 36       	cpi	r24, 0x63	; 99
     de8:	31 f0       	breq	.+12     	; 0xdf6 <vfprintf+0x124>
     dea:	83 37       	cpi	r24, 0x73	; 115
     dec:	71 f0       	breq	.+28     	; 0xe0a <vfprintf+0x138>
     dee:	83 35       	cpi	r24, 0x53	; 83
     df0:	09 f0       	breq	.+2      	; 0xdf4 <vfprintf+0x122>
     df2:	57 c0       	rjmp	.+174    	; 0xea2 <vfprintf+0x1d0>
     df4:	21 c0       	rjmp	.+66     	; 0xe38 <vfprintf+0x166>
     df6:	f8 01       	movw	r30, r16
     df8:	80 81       	ld	r24, Z
     dfa:	89 83       	std	Y+1, r24	; 0x01
     dfc:	0e 5f       	subi	r16, 0xFE	; 254
     dfe:	1f 4f       	sbci	r17, 0xFF	; 255
     e00:	44 24       	eor	r4, r4
     e02:	43 94       	inc	r4
     e04:	51 2c       	mov	r5, r1
     e06:	54 01       	movw	r10, r8
     e08:	14 c0       	rjmp	.+40     	; 0xe32 <vfprintf+0x160>
     e0a:	38 01       	movw	r6, r16
     e0c:	f2 e0       	ldi	r31, 0x02	; 2
     e0e:	6f 0e       	add	r6, r31
     e10:	71 1c       	adc	r7, r1
     e12:	f8 01       	movw	r30, r16
     e14:	a0 80       	ld	r10, Z
     e16:	b1 80       	ldd	r11, Z+1	; 0x01
     e18:	26 ff       	sbrs	r18, 6
     e1a:	03 c0       	rjmp	.+6      	; 0xe22 <vfprintf+0x150>
     e1c:	65 2d       	mov	r22, r5
     e1e:	70 e0       	ldi	r23, 0x00	; 0
     e20:	02 c0       	rjmp	.+4      	; 0xe26 <vfprintf+0x154>
     e22:	6f ef       	ldi	r22, 0xFF	; 255
     e24:	7f ef       	ldi	r23, 0xFF	; 255
     e26:	c5 01       	movw	r24, r10
     e28:	2c 87       	std	Y+12, r18	; 0x0c
     e2a:	6d d1       	rcall	.+730    	; 0x1106 <strnlen>
     e2c:	2c 01       	movw	r4, r24
     e2e:	83 01       	movw	r16, r6
     e30:	2c 85       	ldd	r18, Y+12	; 0x0c
     e32:	2f 77       	andi	r18, 0x7F	; 127
     e34:	22 2e       	mov	r2, r18
     e36:	16 c0       	rjmp	.+44     	; 0xe64 <vfprintf+0x192>
     e38:	38 01       	movw	r6, r16
     e3a:	f2 e0       	ldi	r31, 0x02	; 2
     e3c:	6f 0e       	add	r6, r31
     e3e:	71 1c       	adc	r7, r1
     e40:	f8 01       	movw	r30, r16
     e42:	a0 80       	ld	r10, Z
     e44:	b1 80       	ldd	r11, Z+1	; 0x01
     e46:	26 ff       	sbrs	r18, 6
     e48:	03 c0       	rjmp	.+6      	; 0xe50 <vfprintf+0x17e>
     e4a:	65 2d       	mov	r22, r5
     e4c:	70 e0       	ldi	r23, 0x00	; 0
     e4e:	02 c0       	rjmp	.+4      	; 0xe54 <vfprintf+0x182>
     e50:	6f ef       	ldi	r22, 0xFF	; 255
     e52:	7f ef       	ldi	r23, 0xFF	; 255
     e54:	c5 01       	movw	r24, r10
     e56:	2c 87       	std	Y+12, r18	; 0x0c
     e58:	44 d1       	rcall	.+648    	; 0x10e2 <strnlen_P>
     e5a:	2c 01       	movw	r4, r24
     e5c:	2c 85       	ldd	r18, Y+12	; 0x0c
     e5e:	20 68       	ori	r18, 0x80	; 128
     e60:	22 2e       	mov	r2, r18
     e62:	83 01       	movw	r16, r6
     e64:	23 fc       	sbrc	r2, 3
     e66:	19 c0       	rjmp	.+50     	; 0xe9a <vfprintf+0x1c8>
     e68:	83 2d       	mov	r24, r3
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	48 16       	cp	r4, r24
     e6e:	59 06       	cpc	r5, r25
     e70:	a0 f4       	brcc	.+40     	; 0xe9a <vfprintf+0x1c8>
     e72:	b7 01       	movw	r22, r14
     e74:	80 e2       	ldi	r24, 0x20	; 32
     e76:	90 e0       	ldi	r25, 0x00	; 0
     e78:	51 d1       	rcall	.+674    	; 0x111c <fputc>
     e7a:	3a 94       	dec	r3
     e7c:	f5 cf       	rjmp	.-22     	; 0xe68 <vfprintf+0x196>
     e7e:	f5 01       	movw	r30, r10
     e80:	27 fc       	sbrc	r2, 7
     e82:	85 91       	lpm	r24, Z+
     e84:	27 fe       	sbrs	r2, 7
     e86:	81 91       	ld	r24, Z+
     e88:	5f 01       	movw	r10, r30
     e8a:	b7 01       	movw	r22, r14
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	46 d1       	rcall	.+652    	; 0x111c <fputc>
     e90:	31 10       	cpse	r3, r1
     e92:	3a 94       	dec	r3
     e94:	f1 e0       	ldi	r31, 0x01	; 1
     e96:	4f 1a       	sub	r4, r31
     e98:	51 08       	sbc	r5, r1
     e9a:	41 14       	cp	r4, r1
     e9c:	51 04       	cpc	r5, r1
     e9e:	79 f7       	brne	.-34     	; 0xe7e <vfprintf+0x1ac>
     ea0:	de c0       	rjmp	.+444    	; 0x105e <vfprintf+0x38c>
     ea2:	84 36       	cpi	r24, 0x64	; 100
     ea4:	11 f0       	breq	.+4      	; 0xeaa <vfprintf+0x1d8>
     ea6:	89 36       	cpi	r24, 0x69	; 105
     ea8:	31 f5       	brne	.+76     	; 0xef6 <vfprintf+0x224>
     eaa:	f8 01       	movw	r30, r16
     eac:	27 ff       	sbrs	r18, 7
     eae:	07 c0       	rjmp	.+14     	; 0xebe <vfprintf+0x1ec>
     eb0:	60 81       	ld	r22, Z
     eb2:	71 81       	ldd	r23, Z+1	; 0x01
     eb4:	82 81       	ldd	r24, Z+2	; 0x02
     eb6:	93 81       	ldd	r25, Z+3	; 0x03
     eb8:	0c 5f       	subi	r16, 0xFC	; 252
     eba:	1f 4f       	sbci	r17, 0xFF	; 255
     ebc:	08 c0       	rjmp	.+16     	; 0xece <vfprintf+0x1fc>
     ebe:	60 81       	ld	r22, Z
     ec0:	71 81       	ldd	r23, Z+1	; 0x01
     ec2:	88 27       	eor	r24, r24
     ec4:	77 fd       	sbrc	r23, 7
     ec6:	80 95       	com	r24
     ec8:	98 2f       	mov	r25, r24
     eca:	0e 5f       	subi	r16, 0xFE	; 254
     ecc:	1f 4f       	sbci	r17, 0xFF	; 255
     ece:	2f 76       	andi	r18, 0x6F	; 111
     ed0:	b2 2e       	mov	r11, r18
     ed2:	97 ff       	sbrs	r25, 7
     ed4:	09 c0       	rjmp	.+18     	; 0xee8 <vfprintf+0x216>
     ed6:	90 95       	com	r25
     ed8:	80 95       	com	r24
     eda:	70 95       	com	r23
     edc:	61 95       	neg	r22
     ede:	7f 4f       	sbci	r23, 0xFF	; 255
     ee0:	8f 4f       	sbci	r24, 0xFF	; 255
     ee2:	9f 4f       	sbci	r25, 0xFF	; 255
     ee4:	20 68       	ori	r18, 0x80	; 128
     ee6:	b2 2e       	mov	r11, r18
     ee8:	2a e0       	ldi	r18, 0x0A	; 10
     eea:	30 e0       	ldi	r19, 0x00	; 0
     eec:	a4 01       	movw	r20, r8
     eee:	48 d1       	rcall	.+656    	; 0x1180 <__ultoa_invert>
     ef0:	a8 2e       	mov	r10, r24
     ef2:	a8 18       	sub	r10, r8
     ef4:	43 c0       	rjmp	.+134    	; 0xf7c <vfprintf+0x2aa>
     ef6:	85 37       	cpi	r24, 0x75	; 117
     ef8:	29 f4       	brne	.+10     	; 0xf04 <vfprintf+0x232>
     efa:	2f 7e       	andi	r18, 0xEF	; 239
     efc:	b2 2e       	mov	r11, r18
     efe:	2a e0       	ldi	r18, 0x0A	; 10
     f00:	30 e0       	ldi	r19, 0x00	; 0
     f02:	25 c0       	rjmp	.+74     	; 0xf4e <vfprintf+0x27c>
     f04:	f2 2f       	mov	r31, r18
     f06:	f9 7f       	andi	r31, 0xF9	; 249
     f08:	bf 2e       	mov	r11, r31
     f0a:	8f 36       	cpi	r24, 0x6F	; 111
     f0c:	c1 f0       	breq	.+48     	; 0xf3e <vfprintf+0x26c>
     f0e:	18 f4       	brcc	.+6      	; 0xf16 <vfprintf+0x244>
     f10:	88 35       	cpi	r24, 0x58	; 88
     f12:	79 f0       	breq	.+30     	; 0xf32 <vfprintf+0x260>
     f14:	ad c0       	rjmp	.+346    	; 0x1070 <vfprintf+0x39e>
     f16:	80 37       	cpi	r24, 0x70	; 112
     f18:	19 f0       	breq	.+6      	; 0xf20 <vfprintf+0x24e>
     f1a:	88 37       	cpi	r24, 0x78	; 120
     f1c:	21 f0       	breq	.+8      	; 0xf26 <vfprintf+0x254>
     f1e:	a8 c0       	rjmp	.+336    	; 0x1070 <vfprintf+0x39e>
     f20:	2f 2f       	mov	r18, r31
     f22:	20 61       	ori	r18, 0x10	; 16
     f24:	b2 2e       	mov	r11, r18
     f26:	b4 fe       	sbrs	r11, 4
     f28:	0d c0       	rjmp	.+26     	; 0xf44 <vfprintf+0x272>
     f2a:	8b 2d       	mov	r24, r11
     f2c:	84 60       	ori	r24, 0x04	; 4
     f2e:	b8 2e       	mov	r11, r24
     f30:	09 c0       	rjmp	.+18     	; 0xf44 <vfprintf+0x272>
     f32:	24 ff       	sbrs	r18, 4
     f34:	0a c0       	rjmp	.+20     	; 0xf4a <vfprintf+0x278>
     f36:	9f 2f       	mov	r25, r31
     f38:	96 60       	ori	r25, 0x06	; 6
     f3a:	b9 2e       	mov	r11, r25
     f3c:	06 c0       	rjmp	.+12     	; 0xf4a <vfprintf+0x278>
     f3e:	28 e0       	ldi	r18, 0x08	; 8
     f40:	30 e0       	ldi	r19, 0x00	; 0
     f42:	05 c0       	rjmp	.+10     	; 0xf4e <vfprintf+0x27c>
     f44:	20 e1       	ldi	r18, 0x10	; 16
     f46:	30 e0       	ldi	r19, 0x00	; 0
     f48:	02 c0       	rjmp	.+4      	; 0xf4e <vfprintf+0x27c>
     f4a:	20 e1       	ldi	r18, 0x10	; 16
     f4c:	32 e0       	ldi	r19, 0x02	; 2
     f4e:	f8 01       	movw	r30, r16
     f50:	b7 fe       	sbrs	r11, 7
     f52:	07 c0       	rjmp	.+14     	; 0xf62 <vfprintf+0x290>
     f54:	60 81       	ld	r22, Z
     f56:	71 81       	ldd	r23, Z+1	; 0x01
     f58:	82 81       	ldd	r24, Z+2	; 0x02
     f5a:	93 81       	ldd	r25, Z+3	; 0x03
     f5c:	0c 5f       	subi	r16, 0xFC	; 252
     f5e:	1f 4f       	sbci	r17, 0xFF	; 255
     f60:	06 c0       	rjmp	.+12     	; 0xf6e <vfprintf+0x29c>
     f62:	60 81       	ld	r22, Z
     f64:	71 81       	ldd	r23, Z+1	; 0x01
     f66:	80 e0       	ldi	r24, 0x00	; 0
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	0e 5f       	subi	r16, 0xFE	; 254
     f6c:	1f 4f       	sbci	r17, 0xFF	; 255
     f6e:	a4 01       	movw	r20, r8
     f70:	07 d1       	rcall	.+526    	; 0x1180 <__ultoa_invert>
     f72:	a8 2e       	mov	r10, r24
     f74:	a8 18       	sub	r10, r8
     f76:	fb 2d       	mov	r31, r11
     f78:	ff 77       	andi	r31, 0x7F	; 127
     f7a:	bf 2e       	mov	r11, r31
     f7c:	b6 fe       	sbrs	r11, 6
     f7e:	0b c0       	rjmp	.+22     	; 0xf96 <vfprintf+0x2c4>
     f80:	2b 2d       	mov	r18, r11
     f82:	2e 7f       	andi	r18, 0xFE	; 254
     f84:	a5 14       	cp	r10, r5
     f86:	50 f4       	brcc	.+20     	; 0xf9c <vfprintf+0x2ca>
     f88:	b4 fe       	sbrs	r11, 4
     f8a:	0a c0       	rjmp	.+20     	; 0xfa0 <vfprintf+0x2ce>
     f8c:	b2 fc       	sbrc	r11, 2
     f8e:	08 c0       	rjmp	.+16     	; 0xfa0 <vfprintf+0x2ce>
     f90:	2b 2d       	mov	r18, r11
     f92:	2e 7e       	andi	r18, 0xEE	; 238
     f94:	05 c0       	rjmp	.+10     	; 0xfa0 <vfprintf+0x2ce>
     f96:	7a 2c       	mov	r7, r10
     f98:	2b 2d       	mov	r18, r11
     f9a:	03 c0       	rjmp	.+6      	; 0xfa2 <vfprintf+0x2d0>
     f9c:	7a 2c       	mov	r7, r10
     f9e:	01 c0       	rjmp	.+2      	; 0xfa2 <vfprintf+0x2d0>
     fa0:	75 2c       	mov	r7, r5
     fa2:	24 ff       	sbrs	r18, 4
     fa4:	0d c0       	rjmp	.+26     	; 0xfc0 <vfprintf+0x2ee>
     fa6:	fe 01       	movw	r30, r28
     fa8:	ea 0d       	add	r30, r10
     faa:	f1 1d       	adc	r31, r1
     fac:	80 81       	ld	r24, Z
     fae:	80 33       	cpi	r24, 0x30	; 48
     fb0:	11 f4       	brne	.+4      	; 0xfb6 <vfprintf+0x2e4>
     fb2:	29 7e       	andi	r18, 0xE9	; 233
     fb4:	09 c0       	rjmp	.+18     	; 0xfc8 <vfprintf+0x2f6>
     fb6:	22 ff       	sbrs	r18, 2
     fb8:	06 c0       	rjmp	.+12     	; 0xfc6 <vfprintf+0x2f4>
     fba:	73 94       	inc	r7
     fbc:	73 94       	inc	r7
     fbe:	04 c0       	rjmp	.+8      	; 0xfc8 <vfprintf+0x2f6>
     fc0:	82 2f       	mov	r24, r18
     fc2:	86 78       	andi	r24, 0x86	; 134
     fc4:	09 f0       	breq	.+2      	; 0xfc8 <vfprintf+0x2f6>
     fc6:	73 94       	inc	r7
     fc8:	23 fd       	sbrc	r18, 3
     fca:	12 c0       	rjmp	.+36     	; 0xff0 <vfprintf+0x31e>
     fcc:	20 ff       	sbrs	r18, 0
     fce:	06 c0       	rjmp	.+12     	; 0xfdc <vfprintf+0x30a>
     fd0:	5a 2c       	mov	r5, r10
     fd2:	73 14       	cp	r7, r3
     fd4:	18 f4       	brcc	.+6      	; 0xfdc <vfprintf+0x30a>
     fd6:	53 0c       	add	r5, r3
     fd8:	57 18       	sub	r5, r7
     fda:	73 2c       	mov	r7, r3
     fdc:	73 14       	cp	r7, r3
     fde:	60 f4       	brcc	.+24     	; 0xff8 <vfprintf+0x326>
     fe0:	b7 01       	movw	r22, r14
     fe2:	80 e2       	ldi	r24, 0x20	; 32
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	2c 87       	std	Y+12, r18	; 0x0c
     fe8:	99 d0       	rcall	.+306    	; 0x111c <fputc>
     fea:	73 94       	inc	r7
     fec:	2c 85       	ldd	r18, Y+12	; 0x0c
     fee:	f6 cf       	rjmp	.-20     	; 0xfdc <vfprintf+0x30a>
     ff0:	73 14       	cp	r7, r3
     ff2:	10 f4       	brcc	.+4      	; 0xff8 <vfprintf+0x326>
     ff4:	37 18       	sub	r3, r7
     ff6:	01 c0       	rjmp	.+2      	; 0xffa <vfprintf+0x328>
     ff8:	31 2c       	mov	r3, r1
     ffa:	24 ff       	sbrs	r18, 4
     ffc:	11 c0       	rjmp	.+34     	; 0x1020 <vfprintf+0x34e>
     ffe:	b7 01       	movw	r22, r14
    1000:	80 e3       	ldi	r24, 0x30	; 48
    1002:	90 e0       	ldi	r25, 0x00	; 0
    1004:	2c 87       	std	Y+12, r18	; 0x0c
    1006:	8a d0       	rcall	.+276    	; 0x111c <fputc>
    1008:	2c 85       	ldd	r18, Y+12	; 0x0c
    100a:	22 ff       	sbrs	r18, 2
    100c:	16 c0       	rjmp	.+44     	; 0x103a <vfprintf+0x368>
    100e:	21 ff       	sbrs	r18, 1
    1010:	03 c0       	rjmp	.+6      	; 0x1018 <vfprintf+0x346>
    1012:	88 e5       	ldi	r24, 0x58	; 88
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	02 c0       	rjmp	.+4      	; 0x101c <vfprintf+0x34a>
    1018:	88 e7       	ldi	r24, 0x78	; 120
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	b7 01       	movw	r22, r14
    101e:	0c c0       	rjmp	.+24     	; 0x1038 <vfprintf+0x366>
    1020:	82 2f       	mov	r24, r18
    1022:	86 78       	andi	r24, 0x86	; 134
    1024:	51 f0       	breq	.+20     	; 0x103a <vfprintf+0x368>
    1026:	21 fd       	sbrc	r18, 1
    1028:	02 c0       	rjmp	.+4      	; 0x102e <vfprintf+0x35c>
    102a:	80 e2       	ldi	r24, 0x20	; 32
    102c:	01 c0       	rjmp	.+2      	; 0x1030 <vfprintf+0x35e>
    102e:	8b e2       	ldi	r24, 0x2B	; 43
    1030:	27 fd       	sbrc	r18, 7
    1032:	8d e2       	ldi	r24, 0x2D	; 45
    1034:	b7 01       	movw	r22, r14
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	71 d0       	rcall	.+226    	; 0x111c <fputc>
    103a:	a5 14       	cp	r10, r5
    103c:	30 f4       	brcc	.+12     	; 0x104a <vfprintf+0x378>
    103e:	b7 01       	movw	r22, r14
    1040:	80 e3       	ldi	r24, 0x30	; 48
    1042:	90 e0       	ldi	r25, 0x00	; 0
    1044:	6b d0       	rcall	.+214    	; 0x111c <fputc>
    1046:	5a 94       	dec	r5
    1048:	f8 cf       	rjmp	.-16     	; 0x103a <vfprintf+0x368>
    104a:	aa 94       	dec	r10
    104c:	f4 01       	movw	r30, r8
    104e:	ea 0d       	add	r30, r10
    1050:	f1 1d       	adc	r31, r1
    1052:	80 81       	ld	r24, Z
    1054:	b7 01       	movw	r22, r14
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	61 d0       	rcall	.+194    	; 0x111c <fputc>
    105a:	a1 10       	cpse	r10, r1
    105c:	f6 cf       	rjmp	.-20     	; 0x104a <vfprintf+0x378>
    105e:	33 20       	and	r3, r3
    1060:	09 f4       	brne	.+2      	; 0x1064 <vfprintf+0x392>
    1062:	5d ce       	rjmp	.-838    	; 0xd1e <vfprintf+0x4c>
    1064:	b7 01       	movw	r22, r14
    1066:	80 e2       	ldi	r24, 0x20	; 32
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	58 d0       	rcall	.+176    	; 0x111c <fputc>
    106c:	3a 94       	dec	r3
    106e:	f7 cf       	rjmp	.-18     	; 0x105e <vfprintf+0x38c>
    1070:	f7 01       	movw	r30, r14
    1072:	86 81       	ldd	r24, Z+6	; 0x06
    1074:	97 81       	ldd	r25, Z+7	; 0x07
    1076:	02 c0       	rjmp	.+4      	; 0x107c <vfprintf+0x3aa>
    1078:	8f ef       	ldi	r24, 0xFF	; 255
    107a:	9f ef       	ldi	r25, 0xFF	; 255
    107c:	2c 96       	adiw	r28, 0x0c	; 12
    107e:	0f b6       	in	r0, 0x3f	; 63
    1080:	f8 94       	cli
    1082:	de bf       	out	0x3e, r29	; 62
    1084:	0f be       	out	0x3f, r0	; 63
    1086:	cd bf       	out	0x3d, r28	; 61
    1088:	df 91       	pop	r29
    108a:	cf 91       	pop	r28
    108c:	1f 91       	pop	r17
    108e:	0f 91       	pop	r16
    1090:	ff 90       	pop	r15
    1092:	ef 90       	pop	r14
    1094:	df 90       	pop	r13
    1096:	cf 90       	pop	r12
    1098:	bf 90       	pop	r11
    109a:	af 90       	pop	r10
    109c:	9f 90       	pop	r9
    109e:	8f 90       	pop	r8
    10a0:	7f 90       	pop	r7
    10a2:	6f 90       	pop	r6
    10a4:	5f 90       	pop	r5
    10a6:	4f 90       	pop	r4
    10a8:	3f 90       	pop	r3
    10aa:	2f 90       	pop	r2
    10ac:	08 95       	ret

000010ae <calloc>:
    10ae:	0f 93       	push	r16
    10b0:	1f 93       	push	r17
    10b2:	cf 93       	push	r28
    10b4:	df 93       	push	r29
    10b6:	86 9f       	mul	r24, r22
    10b8:	80 01       	movw	r16, r0
    10ba:	87 9f       	mul	r24, r23
    10bc:	10 0d       	add	r17, r0
    10be:	96 9f       	mul	r25, r22
    10c0:	10 0d       	add	r17, r0
    10c2:	11 24       	eor	r1, r1
    10c4:	c8 01       	movw	r24, r16
    10c6:	83 dc       	rcall	.-1786   	; 0x9ce <malloc>
    10c8:	ec 01       	movw	r28, r24
    10ca:	00 97       	sbiw	r24, 0x00	; 0
    10cc:	21 f0       	breq	.+8      	; 0x10d6 <calloc+0x28>
    10ce:	a8 01       	movw	r20, r16
    10d0:	60 e0       	ldi	r22, 0x00	; 0
    10d2:	70 e0       	ldi	r23, 0x00	; 0
    10d4:	11 d0       	rcall	.+34     	; 0x10f8 <memset>
    10d6:	ce 01       	movw	r24, r28
    10d8:	df 91       	pop	r29
    10da:	cf 91       	pop	r28
    10dc:	1f 91       	pop	r17
    10de:	0f 91       	pop	r16
    10e0:	08 95       	ret

000010e2 <strnlen_P>:
    10e2:	fc 01       	movw	r30, r24
    10e4:	05 90       	lpm	r0, Z+
    10e6:	61 50       	subi	r22, 0x01	; 1
    10e8:	70 40       	sbci	r23, 0x00	; 0
    10ea:	01 10       	cpse	r0, r1
    10ec:	d8 f7       	brcc	.-10     	; 0x10e4 <strnlen_P+0x2>
    10ee:	80 95       	com	r24
    10f0:	90 95       	com	r25
    10f2:	8e 0f       	add	r24, r30
    10f4:	9f 1f       	adc	r25, r31
    10f6:	08 95       	ret

000010f8 <memset>:
    10f8:	dc 01       	movw	r26, r24
    10fa:	01 c0       	rjmp	.+2      	; 0x10fe <memset+0x6>
    10fc:	6d 93       	st	X+, r22
    10fe:	41 50       	subi	r20, 0x01	; 1
    1100:	50 40       	sbci	r21, 0x00	; 0
    1102:	e0 f7       	brcc	.-8      	; 0x10fc <memset+0x4>
    1104:	08 95       	ret

00001106 <strnlen>:
    1106:	fc 01       	movw	r30, r24
    1108:	61 50       	subi	r22, 0x01	; 1
    110a:	70 40       	sbci	r23, 0x00	; 0
    110c:	01 90       	ld	r0, Z+
    110e:	01 10       	cpse	r0, r1
    1110:	d8 f7       	brcc	.-10     	; 0x1108 <strnlen+0x2>
    1112:	80 95       	com	r24
    1114:	90 95       	com	r25
    1116:	8e 0f       	add	r24, r30
    1118:	9f 1f       	adc	r25, r31
    111a:	08 95       	ret

0000111c <fputc>:
    111c:	0f 93       	push	r16
    111e:	1f 93       	push	r17
    1120:	cf 93       	push	r28
    1122:	df 93       	push	r29
    1124:	18 2f       	mov	r17, r24
    1126:	09 2f       	mov	r16, r25
    1128:	eb 01       	movw	r28, r22
    112a:	8b 81       	ldd	r24, Y+3	; 0x03
    112c:	81 fd       	sbrc	r24, 1
    112e:	03 c0       	rjmp	.+6      	; 0x1136 <fputc+0x1a>
    1130:	8f ef       	ldi	r24, 0xFF	; 255
    1132:	9f ef       	ldi	r25, 0xFF	; 255
    1134:	20 c0       	rjmp	.+64     	; 0x1176 <fputc+0x5a>
    1136:	82 ff       	sbrs	r24, 2
    1138:	10 c0       	rjmp	.+32     	; 0x115a <fputc+0x3e>
    113a:	4e 81       	ldd	r20, Y+6	; 0x06
    113c:	5f 81       	ldd	r21, Y+7	; 0x07
    113e:	2c 81       	ldd	r18, Y+4	; 0x04
    1140:	3d 81       	ldd	r19, Y+5	; 0x05
    1142:	42 17       	cp	r20, r18
    1144:	53 07       	cpc	r21, r19
    1146:	7c f4       	brge	.+30     	; 0x1166 <fputc+0x4a>
    1148:	e8 81       	ld	r30, Y
    114a:	f9 81       	ldd	r31, Y+1	; 0x01
    114c:	9f 01       	movw	r18, r30
    114e:	2f 5f       	subi	r18, 0xFF	; 255
    1150:	3f 4f       	sbci	r19, 0xFF	; 255
    1152:	39 83       	std	Y+1, r19	; 0x01
    1154:	28 83       	st	Y, r18
    1156:	10 83       	st	Z, r17
    1158:	06 c0       	rjmp	.+12     	; 0x1166 <fputc+0x4a>
    115a:	e8 85       	ldd	r30, Y+8	; 0x08
    115c:	f9 85       	ldd	r31, Y+9	; 0x09
    115e:	81 2f       	mov	r24, r17
    1160:	19 95       	eicall
    1162:	89 2b       	or	r24, r25
    1164:	29 f7       	brne	.-54     	; 0x1130 <fputc+0x14>
    1166:	2e 81       	ldd	r18, Y+6	; 0x06
    1168:	3f 81       	ldd	r19, Y+7	; 0x07
    116a:	2f 5f       	subi	r18, 0xFF	; 255
    116c:	3f 4f       	sbci	r19, 0xFF	; 255
    116e:	3f 83       	std	Y+7, r19	; 0x07
    1170:	2e 83       	std	Y+6, r18	; 0x06
    1172:	81 2f       	mov	r24, r17
    1174:	90 2f       	mov	r25, r16
    1176:	df 91       	pop	r29
    1178:	cf 91       	pop	r28
    117a:	1f 91       	pop	r17
    117c:	0f 91       	pop	r16
    117e:	08 95       	ret

00001180 <__ultoa_invert>:
    1180:	fa 01       	movw	r30, r20
    1182:	aa 27       	eor	r26, r26
    1184:	28 30       	cpi	r18, 0x08	; 8
    1186:	51 f1       	breq	.+84     	; 0x11dc <__ultoa_invert+0x5c>
    1188:	20 31       	cpi	r18, 0x10	; 16
    118a:	81 f1       	breq	.+96     	; 0x11ec <__ultoa_invert+0x6c>
    118c:	e8 94       	clt
    118e:	6f 93       	push	r22
    1190:	6e 7f       	andi	r22, 0xFE	; 254
    1192:	6e 5f       	subi	r22, 0xFE	; 254
    1194:	7f 4f       	sbci	r23, 0xFF	; 255
    1196:	8f 4f       	sbci	r24, 0xFF	; 255
    1198:	9f 4f       	sbci	r25, 0xFF	; 255
    119a:	af 4f       	sbci	r26, 0xFF	; 255
    119c:	b1 e0       	ldi	r27, 0x01	; 1
    119e:	3e d0       	rcall	.+124    	; 0x121c <__ultoa_invert+0x9c>
    11a0:	b4 e0       	ldi	r27, 0x04	; 4
    11a2:	3c d0       	rcall	.+120    	; 0x121c <__ultoa_invert+0x9c>
    11a4:	67 0f       	add	r22, r23
    11a6:	78 1f       	adc	r23, r24
    11a8:	89 1f       	adc	r24, r25
    11aa:	9a 1f       	adc	r25, r26
    11ac:	a1 1d       	adc	r26, r1
    11ae:	68 0f       	add	r22, r24
    11b0:	79 1f       	adc	r23, r25
    11b2:	8a 1f       	adc	r24, r26
    11b4:	91 1d       	adc	r25, r1
    11b6:	a1 1d       	adc	r26, r1
    11b8:	6a 0f       	add	r22, r26
    11ba:	71 1d       	adc	r23, r1
    11bc:	81 1d       	adc	r24, r1
    11be:	91 1d       	adc	r25, r1
    11c0:	a1 1d       	adc	r26, r1
    11c2:	20 d0       	rcall	.+64     	; 0x1204 <__ultoa_invert+0x84>
    11c4:	09 f4       	brne	.+2      	; 0x11c8 <__ultoa_invert+0x48>
    11c6:	68 94       	set
    11c8:	3f 91       	pop	r19
    11ca:	2a e0       	ldi	r18, 0x0A	; 10
    11cc:	26 9f       	mul	r18, r22
    11ce:	11 24       	eor	r1, r1
    11d0:	30 19       	sub	r19, r0
    11d2:	30 5d       	subi	r19, 0xD0	; 208
    11d4:	31 93       	st	Z+, r19
    11d6:	de f6       	brtc	.-74     	; 0x118e <__ultoa_invert+0xe>
    11d8:	cf 01       	movw	r24, r30
    11da:	08 95       	ret
    11dc:	46 2f       	mov	r20, r22
    11de:	47 70       	andi	r20, 0x07	; 7
    11e0:	40 5d       	subi	r20, 0xD0	; 208
    11e2:	41 93       	st	Z+, r20
    11e4:	b3 e0       	ldi	r27, 0x03	; 3
    11e6:	0f d0       	rcall	.+30     	; 0x1206 <__ultoa_invert+0x86>
    11e8:	c9 f7       	brne	.-14     	; 0x11dc <__ultoa_invert+0x5c>
    11ea:	f6 cf       	rjmp	.-20     	; 0x11d8 <__ultoa_invert+0x58>
    11ec:	46 2f       	mov	r20, r22
    11ee:	4f 70       	andi	r20, 0x0F	; 15
    11f0:	40 5d       	subi	r20, 0xD0	; 208
    11f2:	4a 33       	cpi	r20, 0x3A	; 58
    11f4:	18 f0       	brcs	.+6      	; 0x11fc <__ultoa_invert+0x7c>
    11f6:	49 5d       	subi	r20, 0xD9	; 217
    11f8:	31 fd       	sbrc	r19, 1
    11fa:	40 52       	subi	r20, 0x20	; 32
    11fc:	41 93       	st	Z+, r20
    11fe:	02 d0       	rcall	.+4      	; 0x1204 <__ultoa_invert+0x84>
    1200:	a9 f7       	brne	.-22     	; 0x11ec <__ultoa_invert+0x6c>
    1202:	ea cf       	rjmp	.-44     	; 0x11d8 <__ultoa_invert+0x58>
    1204:	b4 e0       	ldi	r27, 0x04	; 4
    1206:	a6 95       	lsr	r26
    1208:	97 95       	ror	r25
    120a:	87 95       	ror	r24
    120c:	77 95       	ror	r23
    120e:	67 95       	ror	r22
    1210:	ba 95       	dec	r27
    1212:	c9 f7       	brne	.-14     	; 0x1206 <__ultoa_invert+0x86>
    1214:	00 97       	sbiw	r24, 0x00	; 0
    1216:	61 05       	cpc	r22, r1
    1218:	71 05       	cpc	r23, r1
    121a:	08 95       	ret
    121c:	9b 01       	movw	r18, r22
    121e:	ac 01       	movw	r20, r24
    1220:	0a 2e       	mov	r0, r26
    1222:	06 94       	lsr	r0
    1224:	57 95       	ror	r21
    1226:	47 95       	ror	r20
    1228:	37 95       	ror	r19
    122a:	27 95       	ror	r18
    122c:	ba 95       	dec	r27
    122e:	c9 f7       	brne	.-14     	; 0x1222 <__ultoa_invert+0xa2>
    1230:	62 0f       	add	r22, r18
    1232:	73 1f       	adc	r23, r19
    1234:	84 1f       	adc	r24, r20
    1236:	95 1f       	adc	r25, r21
    1238:	a0 1d       	adc	r26, r0
    123a:	08 95       	ret

0000123c <_exit>:
    123c:	f8 94       	cli

0000123e <__stop_program>:
    123e:	ff cf       	rjmp	.-2      	; 0x123e <__stop_program>

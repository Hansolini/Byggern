
Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800200  00000c08  00000c9c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c08  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080021a  0080021a  00000cb6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000cb6  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000f0  00000000  00000000  00000d12  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a08  00000000  00000000  00000e02  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000053b  00000000  00000000  0000180a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006a6  00000000  00000000  00001d45  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000208  00000000  00000000  000023ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000032e  00000000  00000000  000025f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000670  00000000  00000000  00002922  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a0  00000000  00000000  00002f92  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e8 e0       	ldi	r30, 0x08	; 8
  fc:	fc e0       	ldi	r31, 0x0C	; 12
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	aa 31       	cpi	r26, 0x1A	; 26
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	aa e1       	ldi	r26, 0x1A	; 26
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a4 32       	cpi	r26, 0x24	; 36
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	81 d0       	rcall	.+258    	; 0x222 <main>
 120:	71 c5       	rjmp	.+2786   	; 0xc04 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <can_init>:
	mcp_request_to_send(0,1,0);		//Request to send - sending will start as soon as the bus is clear
	
	/*print error message? TXBnCTRL.TXERR and the CANINTF.MERRF bits will be set and an
	interrupt will be generated on the INT pin if the CANINTE.MERRE bit is set
	*/
}
 124:	cf 93       	push	r28
 126:	c8 2f       	mov	r28, r24
 128:	40 e0       	ldi	r20, 0x00	; 0
 12a:	6c e1       	ldi	r22, 0x1C	; 28
 12c:	8b e2       	ldi	r24, 0x2B	; 43
 12e:	60 d0       	rcall	.+192    	; 0x1f0 <mcp_bit_modify>
 130:	40 e6       	ldi	r20, 0x60	; 96
 132:	60 e6       	ldi	r22, 0x60	; 96
 134:	80 e6       	ldi	r24, 0x60	; 96
 136:	5c d0       	rcall	.+184    	; 0x1f0 <mcp_bit_modify>
 138:	4c 2f       	mov	r20, r28
 13a:	6f ef       	ldi	r22, 0xFF	; 255
 13c:	8f e0       	ldi	r24, 0x0F	; 15
 13e:	58 d0       	rcall	.+176    	; 0x1f0 <mcp_bit_modify>
 140:	cf 91       	pop	r28
 142:	08 95       	ret

00000144 <can_read>:

//MCP_TXB0CTRL
char* can_read(){
 144:	8f 92       	push	r8
 146:	9f 92       	push	r9
 148:	af 92       	push	r10
 14a:	bf 92       	push	r11
 14c:	cf 92       	push	r12
 14e:	df 92       	push	r13
 150:	ef 92       	push	r14
 152:	ff 92       	push	r15
 154:	0f 93       	push	r16
 156:	1f 93       	push	r17
 158:	cf 93       	push	r28
 15a:	df 93       	push	r29
 15c:	cd b7       	in	r28, 0x3d	; 61
 15e:	de b7       	in	r29, 0x3e	; 62
		data[i] = mcp_read(0x66 + i);  //Read data
	}
	//data[data_length] = '\0';
	mcp_bit_modify(0x2C, 1, 0);	//CANINTF - Sets RX0IF to 0
	return data;
 160:	8d b6       	in	r8, 0x3d	; 61
 162:	9e b6       	in	r9, 0x3e	; 62

//MCP_TXB0CTRL
char* can_read(){
	//Add something to read the standard identifier of the message received
	
	uint8_t data_length = mcp_read(0x65) & 0b00001111;
 164:	85 e6       	ldi	r24, 0x65	; 101
 166:	38 d0       	rcall	.+112    	; 0x1d8 <mcp_read>
 168:	8f 70       	andi	r24, 0x0F	; 15
	char data[data_length];
 16a:	c8 2e       	mov	r12, r24
 16c:	d1 2c       	mov	r13, r1
 16e:	8d b7       	in	r24, 0x3d	; 61
 170:	9e b7       	in	r25, 0x3e	; 62
 172:	8c 19       	sub	r24, r12
 174:	9d 09       	sbc	r25, r13
 176:	0f b6       	in	r0, 0x3f	; 63
 178:	f8 94       	cli
 17a:	9e bf       	out	0x3e, r25	; 62
 17c:	0f be       	out	0x3f, r0	; 63
 17e:	8d bf       	out	0x3d, r24	; 61
 180:	ed b7       	in	r30, 0x3d	; 61
 182:	fe b7       	in	r31, 0x3e	; 62
 184:	31 96       	adiw	r30, 0x01	; 1
 186:	5f 01       	movw	r10, r30
	for(int i = 0; i < data_length; i++){
 188:	1c 14       	cp	r1, r12
 18a:	1d 04       	cpc	r1, r13
 18c:	74 f4       	brge	.+28     	; 0x1aa <can_read+0x66>
 18e:	7f 01       	movw	r14, r30
 190:	00 e0       	ldi	r16, 0x00	; 0
 192:	10 e0       	ldi	r17, 0x00	; 0
		data[i] = mcp_read(0x66 + i);  //Read data
 194:	86 e6       	ldi	r24, 0x66	; 102
 196:	80 0f       	add	r24, r16
 198:	1f d0       	rcall	.+62     	; 0x1d8 <mcp_read>
 19a:	f7 01       	movw	r30, r14
 19c:	81 93       	st	Z+, r24
 19e:	7f 01       	movw	r14, r30
char* can_read(){
	//Add something to read the standard identifier of the message received
	
	uint8_t data_length = mcp_read(0x65) & 0b00001111;
	char data[data_length];
	for(int i = 0; i < data_length; i++){
 1a0:	0f 5f       	subi	r16, 0xFF	; 255
 1a2:	1f 4f       	sbci	r17, 0xFF	; 255
 1a4:	0c 15       	cp	r16, r12
 1a6:	1d 05       	cpc	r17, r13
 1a8:	ac f3       	brlt	.-22     	; 0x194 <can_read+0x50>
		data[i] = mcp_read(0x66 + i);  //Read data
	}
	//data[data_length] = '\0';
	mcp_bit_modify(0x2C, 1, 0);	//CANINTF - Sets RX0IF to 0
 1aa:	40 e0       	ldi	r20, 0x00	; 0
 1ac:	61 e0       	ldi	r22, 0x01	; 1
 1ae:	8c e2       	ldi	r24, 0x2C	; 44
 1b0:	1f d0       	rcall	.+62     	; 0x1f0 <mcp_bit_modify>
	return data;
 1b2:	c5 01       	movw	r24, r10
 1b4:	0f b6       	in	r0, 0x3f	; 63
 1b6:	f8 94       	cli
 1b8:	9e be       	out	0x3e, r9	; 62
 1ba:	0f be       	out	0x3f, r0	; 63
 1bc:	8d be       	out	0x3d, r8	; 61
 1be:	df 91       	pop	r29
 1c0:	cf 91       	pop	r28
 1c2:	1f 91       	pop	r17
 1c4:	0f 91       	pop	r16
 1c6:	ff 90       	pop	r15
 1c8:	ef 90       	pop	r14
 1ca:	df 90       	pop	r13
 1cc:	cf 90       	pop	r12
 1ce:	bf 90       	pop	r11
 1d0:	af 90       	pop	r10
 1d2:	9f 90       	pop	r9
 1d4:	8f 90       	pop	r8
 1d6:	08 95       	ret

000001d8 <mcp_read>:
 1d8:	cf 93       	push	r28
 1da:	c8 2f       	mov	r28, r24
 1dc:	2f 98       	cbi	0x05, 7	; 5
 1de:	83 e0       	ldi	r24, 0x03	; 3
 1e0:	55 d0       	rcall	.+170    	; 0x28c <spi_master_transmit>
 1e2:	8c 2f       	mov	r24, r28
 1e4:	53 d0       	rcall	.+166    	; 0x28c <spi_master_transmit>
 1e6:	80 e0       	ldi	r24, 0x00	; 0
 1e8:	51 d0       	rcall	.+162    	; 0x28c <spi_master_transmit>
 1ea:	2f 9a       	sbi	0x05, 7	; 5
 1ec:	cf 91       	pop	r28
 1ee:	08 95       	ret

000001f0 <mcp_bit_modify>:
 1f0:	1f 93       	push	r17
 1f2:	cf 93       	push	r28
 1f4:	df 93       	push	r29
 1f6:	18 2f       	mov	r17, r24
 1f8:	d6 2f       	mov	r29, r22
 1fa:	c4 2f       	mov	r28, r20
 1fc:	2f 98       	cbi	0x05, 7	; 5
 1fe:	85 e0       	ldi	r24, 0x05	; 5
 200:	45 d0       	rcall	.+138    	; 0x28c <spi_master_transmit>
 202:	81 2f       	mov	r24, r17
 204:	43 d0       	rcall	.+134    	; 0x28c <spi_master_transmit>
 206:	8d 2f       	mov	r24, r29
 208:	41 d0       	rcall	.+130    	; 0x28c <spi_master_transmit>
 20a:	8c 2f       	mov	r24, r28
 20c:	3f d0       	rcall	.+126    	; 0x28c <spi_master_transmit>
 20e:	2f 9a       	sbi	0x05, 7	; 5
 210:	df 91       	pop	r29
 212:	cf 91       	pop	r28
 214:	1f 91       	pop	r17
 216:	08 95       	ret

00000218 <mcp_reset>:
 218:	2f 98       	cbi	0x05, 7	; 5
 21a:	80 ec       	ldi	r24, 0xC0	; 192
 21c:	37 d0       	rcall	.+110    	; 0x28c <spi_master_transmit>
 21e:	2f 9a       	sbi	0x05, 7	; 5
 220:	08 95       	ret

00000222 <main>:
#include "mcp.h"
#include "joy.h"

int main(void)
{	
	uart_init(9600);
 222:	80 e8       	ldi	r24, 0x80	; 128
 224:	95 e2       	ldi	r25, 0x25	; 37
 226:	48 d0       	rcall	.+144    	; 0x2b8 <uart_init>
	spi_master_init();
 228:	29 d0       	rcall	.+82     	; 0x27c <spi_master_init>
    mcp_reset();
 22a:	f6 df       	rcall	.-20     	; 0x218 <mcp_reset>
	can_init(MODE_NORMAL);
 22c:	80 e0       	ldi	r24, 0x00	; 0
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	79 df       	rcall	.-270    	; 0x124 <can_init>
	while(1)
    {
		Position position2 = *(Position*)can_read();
		printf("x:%4d\ty:%4d\tz:%4d\r",position2.x,position2.y,position2.z);
 232:	c6 e0       	ldi	r28, 0x06	; 6
 234:	d2 e0       	ldi	r29, 0x02	; 2
	spi_master_init();
    mcp_reset();
	can_init(MODE_NORMAL);
	while(1)
    {
		Position position2 = *(Position*)can_read();
 236:	86 df       	rcall	.-244    	; 0x144 <can_read>
 238:	fc 01       	movw	r30, r24
		printf("x:%4d\ty:%4d\tz:%4d\r",position2.x,position2.y,position2.z);
 23a:	85 81       	ldd	r24, Z+5	; 0x05
 23c:	8f 93       	push	r24
 23e:	84 81       	ldd	r24, Z+4	; 0x04
 240:	8f 93       	push	r24
 242:	83 81       	ldd	r24, Z+3	; 0x03
 244:	8f 93       	push	r24
 246:	82 81       	ldd	r24, Z+2	; 0x02
 248:	8f 93       	push	r24
 24a:	81 81       	ldd	r24, Z+1	; 0x01
 24c:	8f 93       	push	r24
 24e:	80 81       	ld	r24, Z
 250:	8f 93       	push	r24
 252:	df 93       	push	r29
 254:	cf 93       	push	r28
 256:	e9 d0       	rcall	.+466    	; 0x42a <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 258:	9f ef       	ldi	r25, 0xFF	; 255
 25a:	21 ee       	ldi	r18, 0xE1	; 225
 25c:	84 e0       	ldi	r24, 0x04	; 4
 25e:	91 50       	subi	r25, 0x01	; 1
 260:	20 40       	sbci	r18, 0x00	; 0
 262:	80 40       	sbci	r24, 0x00	; 0
 264:	e1 f7       	brne	.-8      	; 0x25e <main+0x3c>
 266:	00 c0       	rjmp	.+0      	; 0x268 <main+0x46>
 268:	00 00       	nop
 26a:	8d b7       	in	r24, 0x3d	; 61
 26c:	9e b7       	in	r25, 0x3e	; 62
 26e:	08 96       	adiw	r24, 0x08	; 8
 270:	0f b6       	in	r0, 0x3f	; 63
 272:	f8 94       	cli
 274:	9e bf       	out	0x3e, r25	; 62
 276:	0f be       	out	0x3f, r0	; 63
 278:	8d bf       	out	0x3d, r24	; 61
 27a:	dd cf       	rjmp	.-70     	; 0x236 <main+0x14>

0000027c <spi_master_init>:
 27c:	84 b1       	in	r24, 0x04	; 4
 27e:	87 68       	ori	r24, 0x87	; 135
 280:	84 b9       	out	0x04, r24	; 4
 282:	23 98       	cbi	0x04, 3	; 4
 284:	81 e5       	ldi	r24, 0x51	; 81
 286:	8c bd       	out	0x2c, r24	; 44
 288:	2f 9a       	sbi	0x05, 7	; 5
 28a:	08 95       	ret

0000028c <spi_master_transmit>:
 28c:	8e bd       	out	0x2e, r24	; 46
 28e:	0d b4       	in	r0, 0x2d	; 45
 290:	07 fe       	sbrs	r0, 7
 292:	fd cf       	rjmp	.-6      	; 0x28e <spi_master_transmit+0x2>
 294:	8e b5       	in	r24, 0x2e	; 46
 296:	08 95       	ret

00000298 <uart_putchar>:
	return;
}

void uart_putchar(char c){
	//Wait for empty transmit buffer
	while (!( UCSR0A & (1<<UDRE0)));
 298:	e0 ec       	ldi	r30, 0xC0	; 192
 29a:	f0 e0       	ldi	r31, 0x00	; 0
 29c:	90 81       	ld	r25, Z
 29e:	95 ff       	sbrs	r25, 5
 2a0:	fd cf       	rjmp	.-6      	; 0x29c <uart_putchar+0x4>
	//Put data into buffer, sends the data
	UDR0 = c;
 2a2:	80 93 c6 00 	sts	0x00C6, r24
 2a6:	08 95       	ret

000002a8 <uart_getchar>:
	return;
}

unsigned char uart_getchar(){
	while (!( UCSR0A & (1<<RXC0)));
 2a8:	e0 ec       	ldi	r30, 0xC0	; 192
 2aa:	f0 e0       	ldi	r31, 0x00	; 0
 2ac:	80 81       	ld	r24, Z
 2ae:	88 23       	and	r24, r24
 2b0:	ec f7       	brge	.-6      	; 0x2ac <uart_getchar+0x4>
	return UDR0;
 2b2:	80 91 c6 00 	lds	r24, 0x00C6
 2b6:	08 95       	ret

000002b8 <uart_init>:
#include <stdio.h>

#include "uart.h"
//Asynchronous - No parity - 2 stop bits - 8 bit char size

void uart_init(int baudRate){
 2b8:	cf 93       	push	r28
 2ba:	df 93       	push	r29
	int UBRR = ((long)16000000/((long)16*baudRate) - 1); //DIFFERENT for node 2
 2bc:	aa 27       	eor	r26, r26
 2be:	97 fd       	sbrc	r25, 7
 2c0:	a0 95       	com	r26
 2c2:	ba 2f       	mov	r27, r26
 2c4:	88 0f       	add	r24, r24
 2c6:	99 1f       	adc	r25, r25
 2c8:	aa 1f       	adc	r26, r26
 2ca:	bb 1f       	adc	r27, r27
 2cc:	88 0f       	add	r24, r24
 2ce:	99 1f       	adc	r25, r25
 2d0:	aa 1f       	adc	r26, r26
 2d2:	bb 1f       	adc	r27, r27
 2d4:	9c 01       	movw	r18, r24
 2d6:	ad 01       	movw	r20, r26
 2d8:	22 0f       	add	r18, r18
 2da:	33 1f       	adc	r19, r19
 2dc:	44 1f       	adc	r20, r20
 2de:	55 1f       	adc	r21, r21
 2e0:	22 0f       	add	r18, r18
 2e2:	33 1f       	adc	r19, r19
 2e4:	44 1f       	adc	r20, r20
 2e6:	55 1f       	adc	r21, r21
 2e8:	60 e0       	ldi	r22, 0x00	; 0
 2ea:	74 e2       	ldi	r23, 0x24	; 36
 2ec:	84 ef       	ldi	r24, 0xF4	; 244
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	14 d0       	rcall	.+40     	; 0x31a <__divmodsi4>
 2f2:	e9 01       	movw	r28, r18
 2f4:	21 97       	sbiw	r28, 0x01	; 1
	//Enable printf
	fdevopen(uart_putchar, uart_getchar);
 2f6:	64 e5       	ldi	r22, 0x54	; 84
 2f8:	71 e0       	ldi	r23, 0x01	; 1
 2fa:	8c e4       	ldi	r24, 0x4C	; 76
 2fc:	91 e0       	ldi	r25, 0x01	; 1
 2fe:	4b d0       	rcall	.+150    	; 0x396 <fdevopen>
	//Setting
	UBRR0L = UBRR;
 300:	c0 93 c4 00 	sts	0x00C4, r28
	UBRR0H = (UBRR>>8);
 304:	d0 93 c5 00 	sts	0x00C5, r29
	//Enable receiver and transmitter
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 308:	88 e1       	ldi	r24, 0x18	; 24
 30a:	80 93 c1 00 	sts	0x00C1, r24
	//Set frame format: 2 stop bit, 8data
	UCSR0C = (1<<USBS0)|(3<<UCSZ00);			//DIFFERENT for node 2
 30e:	8e e0       	ldi	r24, 0x0E	; 14
 310:	80 93 c2 00 	sts	0x00C2, r24
	//Ursel makes sure we won't access UBRRH during operation, but UCSRC
	return;
}
 314:	df 91       	pop	r29
 316:	cf 91       	pop	r28
 318:	08 95       	ret

0000031a <__divmodsi4>:
 31a:	05 2e       	mov	r0, r21
 31c:	97 fb       	bst	r25, 7
 31e:	16 f4       	brtc	.+4      	; 0x324 <__divmodsi4+0xa>
 320:	00 94       	com	r0
 322:	0f d0       	rcall	.+30     	; 0x342 <__negsi2>
 324:	57 fd       	sbrc	r21, 7
 326:	05 d0       	rcall	.+10     	; 0x332 <__divmodsi4_neg2>
 328:	14 d0       	rcall	.+40     	; 0x352 <__udivmodsi4>
 32a:	07 fc       	sbrc	r0, 7
 32c:	02 d0       	rcall	.+4      	; 0x332 <__divmodsi4_neg2>
 32e:	46 f4       	brtc	.+16     	; 0x340 <__divmodsi4_exit>
 330:	08 c0       	rjmp	.+16     	; 0x342 <__negsi2>

00000332 <__divmodsi4_neg2>:
 332:	50 95       	com	r21
 334:	40 95       	com	r20
 336:	30 95       	com	r19
 338:	21 95       	neg	r18
 33a:	3f 4f       	sbci	r19, 0xFF	; 255
 33c:	4f 4f       	sbci	r20, 0xFF	; 255
 33e:	5f 4f       	sbci	r21, 0xFF	; 255

00000340 <__divmodsi4_exit>:
 340:	08 95       	ret

00000342 <__negsi2>:
 342:	90 95       	com	r25
 344:	80 95       	com	r24
 346:	70 95       	com	r23
 348:	61 95       	neg	r22
 34a:	7f 4f       	sbci	r23, 0xFF	; 255
 34c:	8f 4f       	sbci	r24, 0xFF	; 255
 34e:	9f 4f       	sbci	r25, 0xFF	; 255
 350:	08 95       	ret

00000352 <__udivmodsi4>:
 352:	a1 e2       	ldi	r26, 0x21	; 33
 354:	1a 2e       	mov	r1, r26
 356:	aa 1b       	sub	r26, r26
 358:	bb 1b       	sub	r27, r27
 35a:	fd 01       	movw	r30, r26
 35c:	0d c0       	rjmp	.+26     	; 0x378 <__udivmodsi4_ep>

0000035e <__udivmodsi4_loop>:
 35e:	aa 1f       	adc	r26, r26
 360:	bb 1f       	adc	r27, r27
 362:	ee 1f       	adc	r30, r30
 364:	ff 1f       	adc	r31, r31
 366:	a2 17       	cp	r26, r18
 368:	b3 07       	cpc	r27, r19
 36a:	e4 07       	cpc	r30, r20
 36c:	f5 07       	cpc	r31, r21
 36e:	20 f0       	brcs	.+8      	; 0x378 <__udivmodsi4_ep>
 370:	a2 1b       	sub	r26, r18
 372:	b3 0b       	sbc	r27, r19
 374:	e4 0b       	sbc	r30, r20
 376:	f5 0b       	sbc	r31, r21

00000378 <__udivmodsi4_ep>:
 378:	66 1f       	adc	r22, r22
 37a:	77 1f       	adc	r23, r23
 37c:	88 1f       	adc	r24, r24
 37e:	99 1f       	adc	r25, r25
 380:	1a 94       	dec	r1
 382:	69 f7       	brne	.-38     	; 0x35e <__udivmodsi4_loop>
 384:	60 95       	com	r22
 386:	70 95       	com	r23
 388:	80 95       	com	r24
 38a:	90 95       	com	r25
 38c:	9b 01       	movw	r18, r22
 38e:	ac 01       	movw	r20, r24
 390:	bd 01       	movw	r22, r26
 392:	cf 01       	movw	r24, r30
 394:	08 95       	ret

00000396 <fdevopen>:
 396:	0f 93       	push	r16
 398:	1f 93       	push	r17
 39a:	cf 93       	push	r28
 39c:	df 93       	push	r29
 39e:	ec 01       	movw	r28, r24
 3a0:	8b 01       	movw	r16, r22
 3a2:	00 97       	sbiw	r24, 0x00	; 0
 3a4:	31 f4       	brne	.+12     	; 0x3b2 <fdevopen+0x1c>
 3a6:	61 15       	cp	r22, r1
 3a8:	71 05       	cpc	r23, r1
 3aa:	19 f4       	brne	.+6      	; 0x3b2 <fdevopen+0x1c>
 3ac:	80 e0       	ldi	r24, 0x00	; 0
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	37 c0       	rjmp	.+110    	; 0x420 <fdevopen+0x8a>
 3b2:	6e e0       	ldi	r22, 0x0E	; 14
 3b4:	70 e0       	ldi	r23, 0x00	; 0
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	36 d2       	rcall	.+1132   	; 0x828 <calloc>
 3bc:	fc 01       	movw	r30, r24
 3be:	00 97       	sbiw	r24, 0x00	; 0
 3c0:	a9 f3       	breq	.-22     	; 0x3ac <fdevopen+0x16>
 3c2:	80 e8       	ldi	r24, 0x80	; 128
 3c4:	83 83       	std	Z+3, r24	; 0x03
 3c6:	01 15       	cp	r16, r1
 3c8:	11 05       	cpc	r17, r1
 3ca:	71 f0       	breq	.+28     	; 0x3e8 <fdevopen+0x52>
 3cc:	13 87       	std	Z+11, r17	; 0x0b
 3ce:	02 87       	std	Z+10, r16	; 0x0a
 3d0:	81 e8       	ldi	r24, 0x81	; 129
 3d2:	83 83       	std	Z+3, r24	; 0x03
 3d4:	80 91 1a 02 	lds	r24, 0x021A
 3d8:	90 91 1b 02 	lds	r25, 0x021B
 3dc:	89 2b       	or	r24, r25
 3de:	21 f4       	brne	.+8      	; 0x3e8 <fdevopen+0x52>
 3e0:	f0 93 1b 02 	sts	0x021B, r31
 3e4:	e0 93 1a 02 	sts	0x021A, r30
 3e8:	20 97       	sbiw	r28, 0x00	; 0
 3ea:	c9 f0       	breq	.+50     	; 0x41e <fdevopen+0x88>
 3ec:	d1 87       	std	Z+9, r29	; 0x09
 3ee:	c0 87       	std	Z+8, r28	; 0x08
 3f0:	83 81       	ldd	r24, Z+3	; 0x03
 3f2:	82 60       	ori	r24, 0x02	; 2
 3f4:	83 83       	std	Z+3, r24	; 0x03
 3f6:	80 91 1c 02 	lds	r24, 0x021C
 3fa:	90 91 1d 02 	lds	r25, 0x021D
 3fe:	89 2b       	or	r24, r25
 400:	71 f4       	brne	.+28     	; 0x41e <fdevopen+0x88>
 402:	f0 93 1d 02 	sts	0x021D, r31
 406:	e0 93 1c 02 	sts	0x021C, r30
 40a:	80 91 1e 02 	lds	r24, 0x021E
 40e:	90 91 1f 02 	lds	r25, 0x021F
 412:	89 2b       	or	r24, r25
 414:	21 f4       	brne	.+8      	; 0x41e <fdevopen+0x88>
 416:	f0 93 1f 02 	sts	0x021F, r31
 41a:	e0 93 1e 02 	sts	0x021E, r30
 41e:	cf 01       	movw	r24, r30
 420:	df 91       	pop	r29
 422:	cf 91       	pop	r28
 424:	1f 91       	pop	r17
 426:	0f 91       	pop	r16
 428:	08 95       	ret

0000042a <printf>:
 42a:	cf 93       	push	r28
 42c:	df 93       	push	r29
 42e:	cd b7       	in	r28, 0x3d	; 61
 430:	de b7       	in	r29, 0x3e	; 62
 432:	fe 01       	movw	r30, r28
 434:	36 96       	adiw	r30, 0x06	; 6
 436:	61 91       	ld	r22, Z+
 438:	71 91       	ld	r23, Z+
 43a:	af 01       	movw	r20, r30
 43c:	80 91 1c 02 	lds	r24, 0x021C
 440:	90 91 1d 02 	lds	r25, 0x021D
 444:	03 d0       	rcall	.+6      	; 0x44c <vfprintf>
 446:	df 91       	pop	r29
 448:	cf 91       	pop	r28
 44a:	08 95       	ret

0000044c <vfprintf>:
 44c:	2f 92       	push	r2
 44e:	3f 92       	push	r3
 450:	4f 92       	push	r4
 452:	5f 92       	push	r5
 454:	6f 92       	push	r6
 456:	7f 92       	push	r7
 458:	8f 92       	push	r8
 45a:	9f 92       	push	r9
 45c:	af 92       	push	r10
 45e:	bf 92       	push	r11
 460:	cf 92       	push	r12
 462:	df 92       	push	r13
 464:	ef 92       	push	r14
 466:	ff 92       	push	r15
 468:	0f 93       	push	r16
 46a:	1f 93       	push	r17
 46c:	cf 93       	push	r28
 46e:	df 93       	push	r29
 470:	cd b7       	in	r28, 0x3d	; 61
 472:	de b7       	in	r29, 0x3e	; 62
 474:	2c 97       	sbiw	r28, 0x0c	; 12
 476:	0f b6       	in	r0, 0x3f	; 63
 478:	f8 94       	cli
 47a:	de bf       	out	0x3e, r29	; 62
 47c:	0f be       	out	0x3f, r0	; 63
 47e:	cd bf       	out	0x3d, r28	; 61
 480:	7c 01       	movw	r14, r24
 482:	6b 01       	movw	r12, r22
 484:	8a 01       	movw	r16, r20
 486:	fc 01       	movw	r30, r24
 488:	17 82       	std	Z+7, r1	; 0x07
 48a:	16 82       	std	Z+6, r1	; 0x06
 48c:	83 81       	ldd	r24, Z+3	; 0x03
 48e:	81 ff       	sbrs	r24, 1
 490:	b0 c1       	rjmp	.+864    	; 0x7f2 <vfprintf+0x3a6>
 492:	ce 01       	movw	r24, r28
 494:	01 96       	adiw	r24, 0x01	; 1
 496:	4c 01       	movw	r8, r24
 498:	f7 01       	movw	r30, r14
 49a:	93 81       	ldd	r25, Z+3	; 0x03
 49c:	f6 01       	movw	r30, r12
 49e:	93 fd       	sbrc	r25, 3
 4a0:	85 91       	lpm	r24, Z+
 4a2:	93 ff       	sbrs	r25, 3
 4a4:	81 91       	ld	r24, Z+
 4a6:	6f 01       	movw	r12, r30
 4a8:	88 23       	and	r24, r24
 4aa:	09 f4       	brne	.+2      	; 0x4ae <vfprintf+0x62>
 4ac:	9e c1       	rjmp	.+828    	; 0x7ea <vfprintf+0x39e>
 4ae:	85 32       	cpi	r24, 0x25	; 37
 4b0:	39 f4       	brne	.+14     	; 0x4c0 <vfprintf+0x74>
 4b2:	93 fd       	sbrc	r25, 3
 4b4:	85 91       	lpm	r24, Z+
 4b6:	93 ff       	sbrs	r25, 3
 4b8:	81 91       	ld	r24, Z+
 4ba:	6f 01       	movw	r12, r30
 4bc:	85 32       	cpi	r24, 0x25	; 37
 4be:	21 f4       	brne	.+8      	; 0x4c8 <vfprintf+0x7c>
 4c0:	b7 01       	movw	r22, r14
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	0f d3       	rcall	.+1566   	; 0xae4 <fputc>
 4c6:	e8 cf       	rjmp	.-48     	; 0x498 <vfprintf+0x4c>
 4c8:	51 2c       	mov	r5, r1
 4ca:	31 2c       	mov	r3, r1
 4cc:	20 e0       	ldi	r18, 0x00	; 0
 4ce:	20 32       	cpi	r18, 0x20	; 32
 4d0:	a0 f4       	brcc	.+40     	; 0x4fa <vfprintf+0xae>
 4d2:	8b 32       	cpi	r24, 0x2B	; 43
 4d4:	69 f0       	breq	.+26     	; 0x4f0 <vfprintf+0xa4>
 4d6:	30 f4       	brcc	.+12     	; 0x4e4 <vfprintf+0x98>
 4d8:	80 32       	cpi	r24, 0x20	; 32
 4da:	59 f0       	breq	.+22     	; 0x4f2 <vfprintf+0xa6>
 4dc:	83 32       	cpi	r24, 0x23	; 35
 4de:	69 f4       	brne	.+26     	; 0x4fa <vfprintf+0xae>
 4e0:	20 61       	ori	r18, 0x10	; 16
 4e2:	2c c0       	rjmp	.+88     	; 0x53c <vfprintf+0xf0>
 4e4:	8d 32       	cpi	r24, 0x2D	; 45
 4e6:	39 f0       	breq	.+14     	; 0x4f6 <vfprintf+0xaa>
 4e8:	80 33       	cpi	r24, 0x30	; 48
 4ea:	39 f4       	brne	.+14     	; 0x4fa <vfprintf+0xae>
 4ec:	21 60       	ori	r18, 0x01	; 1
 4ee:	26 c0       	rjmp	.+76     	; 0x53c <vfprintf+0xf0>
 4f0:	22 60       	ori	r18, 0x02	; 2
 4f2:	24 60       	ori	r18, 0x04	; 4
 4f4:	23 c0       	rjmp	.+70     	; 0x53c <vfprintf+0xf0>
 4f6:	28 60       	ori	r18, 0x08	; 8
 4f8:	21 c0       	rjmp	.+66     	; 0x53c <vfprintf+0xf0>
 4fa:	27 fd       	sbrc	r18, 7
 4fc:	27 c0       	rjmp	.+78     	; 0x54c <vfprintf+0x100>
 4fe:	30 ed       	ldi	r19, 0xD0	; 208
 500:	38 0f       	add	r19, r24
 502:	3a 30       	cpi	r19, 0x0A	; 10
 504:	78 f4       	brcc	.+30     	; 0x524 <vfprintf+0xd8>
 506:	26 ff       	sbrs	r18, 6
 508:	06 c0       	rjmp	.+12     	; 0x516 <vfprintf+0xca>
 50a:	fa e0       	ldi	r31, 0x0A	; 10
 50c:	5f 9e       	mul	r5, r31
 50e:	30 0d       	add	r19, r0
 510:	11 24       	eor	r1, r1
 512:	53 2e       	mov	r5, r19
 514:	13 c0       	rjmp	.+38     	; 0x53c <vfprintf+0xf0>
 516:	8a e0       	ldi	r24, 0x0A	; 10
 518:	38 9e       	mul	r3, r24
 51a:	30 0d       	add	r19, r0
 51c:	11 24       	eor	r1, r1
 51e:	33 2e       	mov	r3, r19
 520:	20 62       	ori	r18, 0x20	; 32
 522:	0c c0       	rjmp	.+24     	; 0x53c <vfprintf+0xf0>
 524:	8e 32       	cpi	r24, 0x2E	; 46
 526:	21 f4       	brne	.+8      	; 0x530 <vfprintf+0xe4>
 528:	26 fd       	sbrc	r18, 6
 52a:	5f c1       	rjmp	.+702    	; 0x7ea <vfprintf+0x39e>
 52c:	20 64       	ori	r18, 0x40	; 64
 52e:	06 c0       	rjmp	.+12     	; 0x53c <vfprintf+0xf0>
 530:	8c 36       	cpi	r24, 0x6C	; 108
 532:	11 f4       	brne	.+4      	; 0x538 <vfprintf+0xec>
 534:	20 68       	ori	r18, 0x80	; 128
 536:	02 c0       	rjmp	.+4      	; 0x53c <vfprintf+0xf0>
 538:	88 36       	cpi	r24, 0x68	; 104
 53a:	41 f4       	brne	.+16     	; 0x54c <vfprintf+0x100>
 53c:	f6 01       	movw	r30, r12
 53e:	93 fd       	sbrc	r25, 3
 540:	85 91       	lpm	r24, Z+
 542:	93 ff       	sbrs	r25, 3
 544:	81 91       	ld	r24, Z+
 546:	6f 01       	movw	r12, r30
 548:	81 11       	cpse	r24, r1
 54a:	c1 cf       	rjmp	.-126    	; 0x4ce <vfprintf+0x82>
 54c:	98 2f       	mov	r25, r24
 54e:	9f 7d       	andi	r25, 0xDF	; 223
 550:	95 54       	subi	r25, 0x45	; 69
 552:	93 30       	cpi	r25, 0x03	; 3
 554:	28 f4       	brcc	.+10     	; 0x560 <vfprintf+0x114>
 556:	0c 5f       	subi	r16, 0xFC	; 252
 558:	1f 4f       	sbci	r17, 0xFF	; 255
 55a:	ff e3       	ldi	r31, 0x3F	; 63
 55c:	f9 83       	std	Y+1, r31	; 0x01
 55e:	0d c0       	rjmp	.+26     	; 0x57a <vfprintf+0x12e>
 560:	83 36       	cpi	r24, 0x63	; 99
 562:	31 f0       	breq	.+12     	; 0x570 <vfprintf+0x124>
 564:	83 37       	cpi	r24, 0x73	; 115
 566:	71 f0       	breq	.+28     	; 0x584 <vfprintf+0x138>
 568:	83 35       	cpi	r24, 0x53	; 83
 56a:	09 f0       	breq	.+2      	; 0x56e <vfprintf+0x122>
 56c:	57 c0       	rjmp	.+174    	; 0x61c <vfprintf+0x1d0>
 56e:	21 c0       	rjmp	.+66     	; 0x5b2 <vfprintf+0x166>
 570:	f8 01       	movw	r30, r16
 572:	80 81       	ld	r24, Z
 574:	89 83       	std	Y+1, r24	; 0x01
 576:	0e 5f       	subi	r16, 0xFE	; 254
 578:	1f 4f       	sbci	r17, 0xFF	; 255
 57a:	44 24       	eor	r4, r4
 57c:	43 94       	inc	r4
 57e:	51 2c       	mov	r5, r1
 580:	54 01       	movw	r10, r8
 582:	14 c0       	rjmp	.+40     	; 0x5ac <vfprintf+0x160>
 584:	38 01       	movw	r6, r16
 586:	f2 e0       	ldi	r31, 0x02	; 2
 588:	6f 0e       	add	r6, r31
 58a:	71 1c       	adc	r7, r1
 58c:	f8 01       	movw	r30, r16
 58e:	a0 80       	ld	r10, Z
 590:	b1 80       	ldd	r11, Z+1	; 0x01
 592:	26 ff       	sbrs	r18, 6
 594:	03 c0       	rjmp	.+6      	; 0x59c <vfprintf+0x150>
 596:	65 2d       	mov	r22, r5
 598:	70 e0       	ldi	r23, 0x00	; 0
 59a:	02 c0       	rjmp	.+4      	; 0x5a0 <vfprintf+0x154>
 59c:	6f ef       	ldi	r22, 0xFF	; 255
 59e:	7f ef       	ldi	r23, 0xFF	; 255
 5a0:	c5 01       	movw	r24, r10
 5a2:	2c 87       	std	Y+12, r18	; 0x0c
 5a4:	94 d2       	rcall	.+1320   	; 0xace <strnlen>
 5a6:	2c 01       	movw	r4, r24
 5a8:	83 01       	movw	r16, r6
 5aa:	2c 85       	ldd	r18, Y+12	; 0x0c
 5ac:	2f 77       	andi	r18, 0x7F	; 127
 5ae:	22 2e       	mov	r2, r18
 5b0:	16 c0       	rjmp	.+44     	; 0x5de <vfprintf+0x192>
 5b2:	38 01       	movw	r6, r16
 5b4:	f2 e0       	ldi	r31, 0x02	; 2
 5b6:	6f 0e       	add	r6, r31
 5b8:	71 1c       	adc	r7, r1
 5ba:	f8 01       	movw	r30, r16
 5bc:	a0 80       	ld	r10, Z
 5be:	b1 80       	ldd	r11, Z+1	; 0x01
 5c0:	26 ff       	sbrs	r18, 6
 5c2:	03 c0       	rjmp	.+6      	; 0x5ca <vfprintf+0x17e>
 5c4:	65 2d       	mov	r22, r5
 5c6:	70 e0       	ldi	r23, 0x00	; 0
 5c8:	02 c0       	rjmp	.+4      	; 0x5ce <vfprintf+0x182>
 5ca:	6f ef       	ldi	r22, 0xFF	; 255
 5cc:	7f ef       	ldi	r23, 0xFF	; 255
 5ce:	c5 01       	movw	r24, r10
 5d0:	2c 87       	std	Y+12, r18	; 0x0c
 5d2:	6b d2       	rcall	.+1238   	; 0xaaa <strnlen_P>
 5d4:	2c 01       	movw	r4, r24
 5d6:	2c 85       	ldd	r18, Y+12	; 0x0c
 5d8:	20 68       	ori	r18, 0x80	; 128
 5da:	22 2e       	mov	r2, r18
 5dc:	83 01       	movw	r16, r6
 5de:	23 fc       	sbrc	r2, 3
 5e0:	19 c0       	rjmp	.+50     	; 0x614 <vfprintf+0x1c8>
 5e2:	83 2d       	mov	r24, r3
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	48 16       	cp	r4, r24
 5e8:	59 06       	cpc	r5, r25
 5ea:	a0 f4       	brcc	.+40     	; 0x614 <vfprintf+0x1c8>
 5ec:	b7 01       	movw	r22, r14
 5ee:	80 e2       	ldi	r24, 0x20	; 32
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	78 d2       	rcall	.+1264   	; 0xae4 <fputc>
 5f4:	3a 94       	dec	r3
 5f6:	f5 cf       	rjmp	.-22     	; 0x5e2 <vfprintf+0x196>
 5f8:	f5 01       	movw	r30, r10
 5fa:	27 fc       	sbrc	r2, 7
 5fc:	85 91       	lpm	r24, Z+
 5fe:	27 fe       	sbrs	r2, 7
 600:	81 91       	ld	r24, Z+
 602:	5f 01       	movw	r10, r30
 604:	b7 01       	movw	r22, r14
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	6d d2       	rcall	.+1242   	; 0xae4 <fputc>
 60a:	31 10       	cpse	r3, r1
 60c:	3a 94       	dec	r3
 60e:	f1 e0       	ldi	r31, 0x01	; 1
 610:	4f 1a       	sub	r4, r31
 612:	51 08       	sbc	r5, r1
 614:	41 14       	cp	r4, r1
 616:	51 04       	cpc	r5, r1
 618:	79 f7       	brne	.-34     	; 0x5f8 <vfprintf+0x1ac>
 61a:	de c0       	rjmp	.+444    	; 0x7d8 <vfprintf+0x38c>
 61c:	84 36       	cpi	r24, 0x64	; 100
 61e:	11 f0       	breq	.+4      	; 0x624 <vfprintf+0x1d8>
 620:	89 36       	cpi	r24, 0x69	; 105
 622:	31 f5       	brne	.+76     	; 0x670 <vfprintf+0x224>
 624:	f8 01       	movw	r30, r16
 626:	27 ff       	sbrs	r18, 7
 628:	07 c0       	rjmp	.+14     	; 0x638 <vfprintf+0x1ec>
 62a:	60 81       	ld	r22, Z
 62c:	71 81       	ldd	r23, Z+1	; 0x01
 62e:	82 81       	ldd	r24, Z+2	; 0x02
 630:	93 81       	ldd	r25, Z+3	; 0x03
 632:	0c 5f       	subi	r16, 0xFC	; 252
 634:	1f 4f       	sbci	r17, 0xFF	; 255
 636:	08 c0       	rjmp	.+16     	; 0x648 <vfprintf+0x1fc>
 638:	60 81       	ld	r22, Z
 63a:	71 81       	ldd	r23, Z+1	; 0x01
 63c:	88 27       	eor	r24, r24
 63e:	77 fd       	sbrc	r23, 7
 640:	80 95       	com	r24
 642:	98 2f       	mov	r25, r24
 644:	0e 5f       	subi	r16, 0xFE	; 254
 646:	1f 4f       	sbci	r17, 0xFF	; 255
 648:	2f 76       	andi	r18, 0x6F	; 111
 64a:	b2 2e       	mov	r11, r18
 64c:	97 ff       	sbrs	r25, 7
 64e:	09 c0       	rjmp	.+18     	; 0x662 <vfprintf+0x216>
 650:	90 95       	com	r25
 652:	80 95       	com	r24
 654:	70 95       	com	r23
 656:	61 95       	neg	r22
 658:	7f 4f       	sbci	r23, 0xFF	; 255
 65a:	8f 4f       	sbci	r24, 0xFF	; 255
 65c:	9f 4f       	sbci	r25, 0xFF	; 255
 65e:	20 68       	ori	r18, 0x80	; 128
 660:	b2 2e       	mov	r11, r18
 662:	2a e0       	ldi	r18, 0x0A	; 10
 664:	30 e0       	ldi	r19, 0x00	; 0
 666:	a4 01       	movw	r20, r8
 668:	6f d2       	rcall	.+1246   	; 0xb48 <__ultoa_invert>
 66a:	a8 2e       	mov	r10, r24
 66c:	a8 18       	sub	r10, r8
 66e:	43 c0       	rjmp	.+134    	; 0x6f6 <vfprintf+0x2aa>
 670:	85 37       	cpi	r24, 0x75	; 117
 672:	29 f4       	brne	.+10     	; 0x67e <vfprintf+0x232>
 674:	2f 7e       	andi	r18, 0xEF	; 239
 676:	b2 2e       	mov	r11, r18
 678:	2a e0       	ldi	r18, 0x0A	; 10
 67a:	30 e0       	ldi	r19, 0x00	; 0
 67c:	25 c0       	rjmp	.+74     	; 0x6c8 <vfprintf+0x27c>
 67e:	f2 2f       	mov	r31, r18
 680:	f9 7f       	andi	r31, 0xF9	; 249
 682:	bf 2e       	mov	r11, r31
 684:	8f 36       	cpi	r24, 0x6F	; 111
 686:	c1 f0       	breq	.+48     	; 0x6b8 <vfprintf+0x26c>
 688:	18 f4       	brcc	.+6      	; 0x690 <vfprintf+0x244>
 68a:	88 35       	cpi	r24, 0x58	; 88
 68c:	79 f0       	breq	.+30     	; 0x6ac <vfprintf+0x260>
 68e:	ad c0       	rjmp	.+346    	; 0x7ea <vfprintf+0x39e>
 690:	80 37       	cpi	r24, 0x70	; 112
 692:	19 f0       	breq	.+6      	; 0x69a <vfprintf+0x24e>
 694:	88 37       	cpi	r24, 0x78	; 120
 696:	21 f0       	breq	.+8      	; 0x6a0 <vfprintf+0x254>
 698:	a8 c0       	rjmp	.+336    	; 0x7ea <vfprintf+0x39e>
 69a:	2f 2f       	mov	r18, r31
 69c:	20 61       	ori	r18, 0x10	; 16
 69e:	b2 2e       	mov	r11, r18
 6a0:	b4 fe       	sbrs	r11, 4
 6a2:	0d c0       	rjmp	.+26     	; 0x6be <vfprintf+0x272>
 6a4:	8b 2d       	mov	r24, r11
 6a6:	84 60       	ori	r24, 0x04	; 4
 6a8:	b8 2e       	mov	r11, r24
 6aa:	09 c0       	rjmp	.+18     	; 0x6be <vfprintf+0x272>
 6ac:	24 ff       	sbrs	r18, 4
 6ae:	0a c0       	rjmp	.+20     	; 0x6c4 <vfprintf+0x278>
 6b0:	9f 2f       	mov	r25, r31
 6b2:	96 60       	ori	r25, 0x06	; 6
 6b4:	b9 2e       	mov	r11, r25
 6b6:	06 c0       	rjmp	.+12     	; 0x6c4 <vfprintf+0x278>
 6b8:	28 e0       	ldi	r18, 0x08	; 8
 6ba:	30 e0       	ldi	r19, 0x00	; 0
 6bc:	05 c0       	rjmp	.+10     	; 0x6c8 <vfprintf+0x27c>
 6be:	20 e1       	ldi	r18, 0x10	; 16
 6c0:	30 e0       	ldi	r19, 0x00	; 0
 6c2:	02 c0       	rjmp	.+4      	; 0x6c8 <vfprintf+0x27c>
 6c4:	20 e1       	ldi	r18, 0x10	; 16
 6c6:	32 e0       	ldi	r19, 0x02	; 2
 6c8:	f8 01       	movw	r30, r16
 6ca:	b7 fe       	sbrs	r11, 7
 6cc:	07 c0       	rjmp	.+14     	; 0x6dc <vfprintf+0x290>
 6ce:	60 81       	ld	r22, Z
 6d0:	71 81       	ldd	r23, Z+1	; 0x01
 6d2:	82 81       	ldd	r24, Z+2	; 0x02
 6d4:	93 81       	ldd	r25, Z+3	; 0x03
 6d6:	0c 5f       	subi	r16, 0xFC	; 252
 6d8:	1f 4f       	sbci	r17, 0xFF	; 255
 6da:	06 c0       	rjmp	.+12     	; 0x6e8 <vfprintf+0x29c>
 6dc:	60 81       	ld	r22, Z
 6de:	71 81       	ldd	r23, Z+1	; 0x01
 6e0:	80 e0       	ldi	r24, 0x00	; 0
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	0e 5f       	subi	r16, 0xFE	; 254
 6e6:	1f 4f       	sbci	r17, 0xFF	; 255
 6e8:	a4 01       	movw	r20, r8
 6ea:	2e d2       	rcall	.+1116   	; 0xb48 <__ultoa_invert>
 6ec:	a8 2e       	mov	r10, r24
 6ee:	a8 18       	sub	r10, r8
 6f0:	fb 2d       	mov	r31, r11
 6f2:	ff 77       	andi	r31, 0x7F	; 127
 6f4:	bf 2e       	mov	r11, r31
 6f6:	b6 fe       	sbrs	r11, 6
 6f8:	0b c0       	rjmp	.+22     	; 0x710 <vfprintf+0x2c4>
 6fa:	2b 2d       	mov	r18, r11
 6fc:	2e 7f       	andi	r18, 0xFE	; 254
 6fe:	a5 14       	cp	r10, r5
 700:	50 f4       	brcc	.+20     	; 0x716 <vfprintf+0x2ca>
 702:	b4 fe       	sbrs	r11, 4
 704:	0a c0       	rjmp	.+20     	; 0x71a <vfprintf+0x2ce>
 706:	b2 fc       	sbrc	r11, 2
 708:	08 c0       	rjmp	.+16     	; 0x71a <vfprintf+0x2ce>
 70a:	2b 2d       	mov	r18, r11
 70c:	2e 7e       	andi	r18, 0xEE	; 238
 70e:	05 c0       	rjmp	.+10     	; 0x71a <vfprintf+0x2ce>
 710:	7a 2c       	mov	r7, r10
 712:	2b 2d       	mov	r18, r11
 714:	03 c0       	rjmp	.+6      	; 0x71c <vfprintf+0x2d0>
 716:	7a 2c       	mov	r7, r10
 718:	01 c0       	rjmp	.+2      	; 0x71c <vfprintf+0x2d0>
 71a:	75 2c       	mov	r7, r5
 71c:	24 ff       	sbrs	r18, 4
 71e:	0d c0       	rjmp	.+26     	; 0x73a <vfprintf+0x2ee>
 720:	fe 01       	movw	r30, r28
 722:	ea 0d       	add	r30, r10
 724:	f1 1d       	adc	r31, r1
 726:	80 81       	ld	r24, Z
 728:	80 33       	cpi	r24, 0x30	; 48
 72a:	11 f4       	brne	.+4      	; 0x730 <vfprintf+0x2e4>
 72c:	29 7e       	andi	r18, 0xE9	; 233
 72e:	09 c0       	rjmp	.+18     	; 0x742 <vfprintf+0x2f6>
 730:	22 ff       	sbrs	r18, 2
 732:	06 c0       	rjmp	.+12     	; 0x740 <vfprintf+0x2f4>
 734:	73 94       	inc	r7
 736:	73 94       	inc	r7
 738:	04 c0       	rjmp	.+8      	; 0x742 <vfprintf+0x2f6>
 73a:	82 2f       	mov	r24, r18
 73c:	86 78       	andi	r24, 0x86	; 134
 73e:	09 f0       	breq	.+2      	; 0x742 <vfprintf+0x2f6>
 740:	73 94       	inc	r7
 742:	23 fd       	sbrc	r18, 3
 744:	12 c0       	rjmp	.+36     	; 0x76a <vfprintf+0x31e>
 746:	20 ff       	sbrs	r18, 0
 748:	06 c0       	rjmp	.+12     	; 0x756 <vfprintf+0x30a>
 74a:	5a 2c       	mov	r5, r10
 74c:	73 14       	cp	r7, r3
 74e:	18 f4       	brcc	.+6      	; 0x756 <vfprintf+0x30a>
 750:	53 0c       	add	r5, r3
 752:	57 18       	sub	r5, r7
 754:	73 2c       	mov	r7, r3
 756:	73 14       	cp	r7, r3
 758:	60 f4       	brcc	.+24     	; 0x772 <vfprintf+0x326>
 75a:	b7 01       	movw	r22, r14
 75c:	80 e2       	ldi	r24, 0x20	; 32
 75e:	90 e0       	ldi	r25, 0x00	; 0
 760:	2c 87       	std	Y+12, r18	; 0x0c
 762:	c0 d1       	rcall	.+896    	; 0xae4 <fputc>
 764:	73 94       	inc	r7
 766:	2c 85       	ldd	r18, Y+12	; 0x0c
 768:	f6 cf       	rjmp	.-20     	; 0x756 <vfprintf+0x30a>
 76a:	73 14       	cp	r7, r3
 76c:	10 f4       	brcc	.+4      	; 0x772 <vfprintf+0x326>
 76e:	37 18       	sub	r3, r7
 770:	01 c0       	rjmp	.+2      	; 0x774 <vfprintf+0x328>
 772:	31 2c       	mov	r3, r1
 774:	24 ff       	sbrs	r18, 4
 776:	11 c0       	rjmp	.+34     	; 0x79a <vfprintf+0x34e>
 778:	b7 01       	movw	r22, r14
 77a:	80 e3       	ldi	r24, 0x30	; 48
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	2c 87       	std	Y+12, r18	; 0x0c
 780:	b1 d1       	rcall	.+866    	; 0xae4 <fputc>
 782:	2c 85       	ldd	r18, Y+12	; 0x0c
 784:	22 ff       	sbrs	r18, 2
 786:	16 c0       	rjmp	.+44     	; 0x7b4 <vfprintf+0x368>
 788:	21 ff       	sbrs	r18, 1
 78a:	03 c0       	rjmp	.+6      	; 0x792 <vfprintf+0x346>
 78c:	88 e5       	ldi	r24, 0x58	; 88
 78e:	90 e0       	ldi	r25, 0x00	; 0
 790:	02 c0       	rjmp	.+4      	; 0x796 <vfprintf+0x34a>
 792:	88 e7       	ldi	r24, 0x78	; 120
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	b7 01       	movw	r22, r14
 798:	0c c0       	rjmp	.+24     	; 0x7b2 <vfprintf+0x366>
 79a:	82 2f       	mov	r24, r18
 79c:	86 78       	andi	r24, 0x86	; 134
 79e:	51 f0       	breq	.+20     	; 0x7b4 <vfprintf+0x368>
 7a0:	21 fd       	sbrc	r18, 1
 7a2:	02 c0       	rjmp	.+4      	; 0x7a8 <vfprintf+0x35c>
 7a4:	80 e2       	ldi	r24, 0x20	; 32
 7a6:	01 c0       	rjmp	.+2      	; 0x7aa <vfprintf+0x35e>
 7a8:	8b e2       	ldi	r24, 0x2B	; 43
 7aa:	27 fd       	sbrc	r18, 7
 7ac:	8d e2       	ldi	r24, 0x2D	; 45
 7ae:	b7 01       	movw	r22, r14
 7b0:	90 e0       	ldi	r25, 0x00	; 0
 7b2:	98 d1       	rcall	.+816    	; 0xae4 <fputc>
 7b4:	a5 14       	cp	r10, r5
 7b6:	30 f4       	brcc	.+12     	; 0x7c4 <vfprintf+0x378>
 7b8:	b7 01       	movw	r22, r14
 7ba:	80 e3       	ldi	r24, 0x30	; 48
 7bc:	90 e0       	ldi	r25, 0x00	; 0
 7be:	92 d1       	rcall	.+804    	; 0xae4 <fputc>
 7c0:	5a 94       	dec	r5
 7c2:	f8 cf       	rjmp	.-16     	; 0x7b4 <vfprintf+0x368>
 7c4:	aa 94       	dec	r10
 7c6:	f4 01       	movw	r30, r8
 7c8:	ea 0d       	add	r30, r10
 7ca:	f1 1d       	adc	r31, r1
 7cc:	80 81       	ld	r24, Z
 7ce:	b7 01       	movw	r22, r14
 7d0:	90 e0       	ldi	r25, 0x00	; 0
 7d2:	88 d1       	rcall	.+784    	; 0xae4 <fputc>
 7d4:	a1 10       	cpse	r10, r1
 7d6:	f6 cf       	rjmp	.-20     	; 0x7c4 <vfprintf+0x378>
 7d8:	33 20       	and	r3, r3
 7da:	09 f4       	brne	.+2      	; 0x7de <vfprintf+0x392>
 7dc:	5d ce       	rjmp	.-838    	; 0x498 <vfprintf+0x4c>
 7de:	b7 01       	movw	r22, r14
 7e0:	80 e2       	ldi	r24, 0x20	; 32
 7e2:	90 e0       	ldi	r25, 0x00	; 0
 7e4:	7f d1       	rcall	.+766    	; 0xae4 <fputc>
 7e6:	3a 94       	dec	r3
 7e8:	f7 cf       	rjmp	.-18     	; 0x7d8 <vfprintf+0x38c>
 7ea:	f7 01       	movw	r30, r14
 7ec:	86 81       	ldd	r24, Z+6	; 0x06
 7ee:	97 81       	ldd	r25, Z+7	; 0x07
 7f0:	02 c0       	rjmp	.+4      	; 0x7f6 <vfprintf+0x3aa>
 7f2:	8f ef       	ldi	r24, 0xFF	; 255
 7f4:	9f ef       	ldi	r25, 0xFF	; 255
 7f6:	2c 96       	adiw	r28, 0x0c	; 12
 7f8:	0f b6       	in	r0, 0x3f	; 63
 7fa:	f8 94       	cli
 7fc:	de bf       	out	0x3e, r29	; 62
 7fe:	0f be       	out	0x3f, r0	; 63
 800:	cd bf       	out	0x3d, r28	; 61
 802:	df 91       	pop	r29
 804:	cf 91       	pop	r28
 806:	1f 91       	pop	r17
 808:	0f 91       	pop	r16
 80a:	ff 90       	pop	r15
 80c:	ef 90       	pop	r14
 80e:	df 90       	pop	r13
 810:	cf 90       	pop	r12
 812:	bf 90       	pop	r11
 814:	af 90       	pop	r10
 816:	9f 90       	pop	r9
 818:	8f 90       	pop	r8
 81a:	7f 90       	pop	r7
 81c:	6f 90       	pop	r6
 81e:	5f 90       	pop	r5
 820:	4f 90       	pop	r4
 822:	3f 90       	pop	r3
 824:	2f 90       	pop	r2
 826:	08 95       	ret

00000828 <calloc>:
 828:	0f 93       	push	r16
 82a:	1f 93       	push	r17
 82c:	cf 93       	push	r28
 82e:	df 93       	push	r29
 830:	86 9f       	mul	r24, r22
 832:	80 01       	movw	r16, r0
 834:	87 9f       	mul	r24, r23
 836:	10 0d       	add	r17, r0
 838:	96 9f       	mul	r25, r22
 83a:	10 0d       	add	r17, r0
 83c:	11 24       	eor	r1, r1
 83e:	c8 01       	movw	r24, r16
 840:	0d d0       	rcall	.+26     	; 0x85c <malloc>
 842:	ec 01       	movw	r28, r24
 844:	00 97       	sbiw	r24, 0x00	; 0
 846:	21 f0       	breq	.+8      	; 0x850 <calloc+0x28>
 848:	a8 01       	movw	r20, r16
 84a:	60 e0       	ldi	r22, 0x00	; 0
 84c:	70 e0       	ldi	r23, 0x00	; 0
 84e:	38 d1       	rcall	.+624    	; 0xac0 <memset>
 850:	ce 01       	movw	r24, r28
 852:	df 91       	pop	r29
 854:	cf 91       	pop	r28
 856:	1f 91       	pop	r17
 858:	0f 91       	pop	r16
 85a:	08 95       	ret

0000085c <malloc>:
 85c:	cf 93       	push	r28
 85e:	df 93       	push	r29
 860:	82 30       	cpi	r24, 0x02	; 2
 862:	91 05       	cpc	r25, r1
 864:	10 f4       	brcc	.+4      	; 0x86a <malloc+0xe>
 866:	82 e0       	ldi	r24, 0x02	; 2
 868:	90 e0       	ldi	r25, 0x00	; 0
 86a:	e0 91 22 02 	lds	r30, 0x0222
 86e:	f0 91 23 02 	lds	r31, 0x0223
 872:	20 e0       	ldi	r18, 0x00	; 0
 874:	30 e0       	ldi	r19, 0x00	; 0
 876:	a0 e0       	ldi	r26, 0x00	; 0
 878:	b0 e0       	ldi	r27, 0x00	; 0
 87a:	30 97       	sbiw	r30, 0x00	; 0
 87c:	39 f1       	breq	.+78     	; 0x8cc <malloc+0x70>
 87e:	40 81       	ld	r20, Z
 880:	51 81       	ldd	r21, Z+1	; 0x01
 882:	48 17       	cp	r20, r24
 884:	59 07       	cpc	r21, r25
 886:	b8 f0       	brcs	.+46     	; 0x8b6 <malloc+0x5a>
 888:	48 17       	cp	r20, r24
 88a:	59 07       	cpc	r21, r25
 88c:	71 f4       	brne	.+28     	; 0x8aa <malloc+0x4e>
 88e:	82 81       	ldd	r24, Z+2	; 0x02
 890:	93 81       	ldd	r25, Z+3	; 0x03
 892:	10 97       	sbiw	r26, 0x00	; 0
 894:	29 f0       	breq	.+10     	; 0x8a0 <malloc+0x44>
 896:	13 96       	adiw	r26, 0x03	; 3
 898:	9c 93       	st	X, r25
 89a:	8e 93       	st	-X, r24
 89c:	12 97       	sbiw	r26, 0x02	; 2
 89e:	2c c0       	rjmp	.+88     	; 0x8f8 <malloc+0x9c>
 8a0:	90 93 23 02 	sts	0x0223, r25
 8a4:	80 93 22 02 	sts	0x0222, r24
 8a8:	27 c0       	rjmp	.+78     	; 0x8f8 <malloc+0x9c>
 8aa:	21 15       	cp	r18, r1
 8ac:	31 05       	cpc	r19, r1
 8ae:	31 f0       	breq	.+12     	; 0x8bc <malloc+0x60>
 8b0:	42 17       	cp	r20, r18
 8b2:	53 07       	cpc	r21, r19
 8b4:	18 f0       	brcs	.+6      	; 0x8bc <malloc+0x60>
 8b6:	a9 01       	movw	r20, r18
 8b8:	db 01       	movw	r26, r22
 8ba:	01 c0       	rjmp	.+2      	; 0x8be <malloc+0x62>
 8bc:	ef 01       	movw	r28, r30
 8be:	9a 01       	movw	r18, r20
 8c0:	bd 01       	movw	r22, r26
 8c2:	df 01       	movw	r26, r30
 8c4:	02 80       	ldd	r0, Z+2	; 0x02
 8c6:	f3 81       	ldd	r31, Z+3	; 0x03
 8c8:	e0 2d       	mov	r30, r0
 8ca:	d7 cf       	rjmp	.-82     	; 0x87a <malloc+0x1e>
 8cc:	21 15       	cp	r18, r1
 8ce:	31 05       	cpc	r19, r1
 8d0:	f9 f0       	breq	.+62     	; 0x910 <malloc+0xb4>
 8d2:	28 1b       	sub	r18, r24
 8d4:	39 0b       	sbc	r19, r25
 8d6:	24 30       	cpi	r18, 0x04	; 4
 8d8:	31 05       	cpc	r19, r1
 8da:	80 f4       	brcc	.+32     	; 0x8fc <malloc+0xa0>
 8dc:	8a 81       	ldd	r24, Y+2	; 0x02
 8de:	9b 81       	ldd	r25, Y+3	; 0x03
 8e0:	61 15       	cp	r22, r1
 8e2:	71 05       	cpc	r23, r1
 8e4:	21 f0       	breq	.+8      	; 0x8ee <malloc+0x92>
 8e6:	fb 01       	movw	r30, r22
 8e8:	93 83       	std	Z+3, r25	; 0x03
 8ea:	82 83       	std	Z+2, r24	; 0x02
 8ec:	04 c0       	rjmp	.+8      	; 0x8f6 <malloc+0x9a>
 8ee:	90 93 23 02 	sts	0x0223, r25
 8f2:	80 93 22 02 	sts	0x0222, r24
 8f6:	fe 01       	movw	r30, r28
 8f8:	32 96       	adiw	r30, 0x02	; 2
 8fa:	44 c0       	rjmp	.+136    	; 0x984 <malloc+0x128>
 8fc:	fe 01       	movw	r30, r28
 8fe:	e2 0f       	add	r30, r18
 900:	f3 1f       	adc	r31, r19
 902:	81 93       	st	Z+, r24
 904:	91 93       	st	Z+, r25
 906:	22 50       	subi	r18, 0x02	; 2
 908:	31 09       	sbc	r19, r1
 90a:	39 83       	std	Y+1, r19	; 0x01
 90c:	28 83       	st	Y, r18
 90e:	3a c0       	rjmp	.+116    	; 0x984 <malloc+0x128>
 910:	20 91 20 02 	lds	r18, 0x0220
 914:	30 91 21 02 	lds	r19, 0x0221
 918:	23 2b       	or	r18, r19
 91a:	41 f4       	brne	.+16     	; 0x92c <malloc+0xd0>
 91c:	20 91 02 02 	lds	r18, 0x0202
 920:	30 91 03 02 	lds	r19, 0x0203
 924:	30 93 21 02 	sts	0x0221, r19
 928:	20 93 20 02 	sts	0x0220, r18
 92c:	20 91 00 02 	lds	r18, 0x0200
 930:	30 91 01 02 	lds	r19, 0x0201
 934:	21 15       	cp	r18, r1
 936:	31 05       	cpc	r19, r1
 938:	41 f4       	brne	.+16     	; 0x94a <malloc+0xee>
 93a:	2d b7       	in	r18, 0x3d	; 61
 93c:	3e b7       	in	r19, 0x3e	; 62
 93e:	40 91 04 02 	lds	r20, 0x0204
 942:	50 91 05 02 	lds	r21, 0x0205
 946:	24 1b       	sub	r18, r20
 948:	35 0b       	sbc	r19, r21
 94a:	e0 91 20 02 	lds	r30, 0x0220
 94e:	f0 91 21 02 	lds	r31, 0x0221
 952:	e2 17       	cp	r30, r18
 954:	f3 07       	cpc	r31, r19
 956:	a0 f4       	brcc	.+40     	; 0x980 <malloc+0x124>
 958:	2e 1b       	sub	r18, r30
 95a:	3f 0b       	sbc	r19, r31
 95c:	28 17       	cp	r18, r24
 95e:	39 07       	cpc	r19, r25
 960:	78 f0       	brcs	.+30     	; 0x980 <malloc+0x124>
 962:	ac 01       	movw	r20, r24
 964:	4e 5f       	subi	r20, 0xFE	; 254
 966:	5f 4f       	sbci	r21, 0xFF	; 255
 968:	24 17       	cp	r18, r20
 96a:	35 07       	cpc	r19, r21
 96c:	48 f0       	brcs	.+18     	; 0x980 <malloc+0x124>
 96e:	4e 0f       	add	r20, r30
 970:	5f 1f       	adc	r21, r31
 972:	50 93 21 02 	sts	0x0221, r21
 976:	40 93 20 02 	sts	0x0220, r20
 97a:	81 93       	st	Z+, r24
 97c:	91 93       	st	Z+, r25
 97e:	02 c0       	rjmp	.+4      	; 0x984 <malloc+0x128>
 980:	e0 e0       	ldi	r30, 0x00	; 0
 982:	f0 e0       	ldi	r31, 0x00	; 0
 984:	cf 01       	movw	r24, r30
 986:	df 91       	pop	r29
 988:	cf 91       	pop	r28
 98a:	08 95       	ret

0000098c <free>:
 98c:	cf 93       	push	r28
 98e:	df 93       	push	r29
 990:	00 97       	sbiw	r24, 0x00	; 0
 992:	09 f4       	brne	.+2      	; 0x996 <free+0xa>
 994:	87 c0       	rjmp	.+270    	; 0xaa4 <free+0x118>
 996:	fc 01       	movw	r30, r24
 998:	32 97       	sbiw	r30, 0x02	; 2
 99a:	13 82       	std	Z+3, r1	; 0x03
 99c:	12 82       	std	Z+2, r1	; 0x02
 99e:	c0 91 22 02 	lds	r28, 0x0222
 9a2:	d0 91 23 02 	lds	r29, 0x0223
 9a6:	20 97       	sbiw	r28, 0x00	; 0
 9a8:	81 f4       	brne	.+32     	; 0x9ca <free+0x3e>
 9aa:	20 81       	ld	r18, Z
 9ac:	31 81       	ldd	r19, Z+1	; 0x01
 9ae:	28 0f       	add	r18, r24
 9b0:	39 1f       	adc	r19, r25
 9b2:	80 91 20 02 	lds	r24, 0x0220
 9b6:	90 91 21 02 	lds	r25, 0x0221
 9ba:	82 17       	cp	r24, r18
 9bc:	93 07       	cpc	r25, r19
 9be:	79 f5       	brne	.+94     	; 0xa1e <free+0x92>
 9c0:	f0 93 21 02 	sts	0x0221, r31
 9c4:	e0 93 20 02 	sts	0x0220, r30
 9c8:	6d c0       	rjmp	.+218    	; 0xaa4 <free+0x118>
 9ca:	de 01       	movw	r26, r28
 9cc:	20 e0       	ldi	r18, 0x00	; 0
 9ce:	30 e0       	ldi	r19, 0x00	; 0
 9d0:	ae 17       	cp	r26, r30
 9d2:	bf 07       	cpc	r27, r31
 9d4:	50 f4       	brcc	.+20     	; 0x9ea <free+0x5e>
 9d6:	12 96       	adiw	r26, 0x02	; 2
 9d8:	4d 91       	ld	r20, X+
 9da:	5c 91       	ld	r21, X
 9dc:	13 97       	sbiw	r26, 0x03	; 3
 9de:	9d 01       	movw	r18, r26
 9e0:	41 15       	cp	r20, r1
 9e2:	51 05       	cpc	r21, r1
 9e4:	09 f1       	breq	.+66     	; 0xa28 <free+0x9c>
 9e6:	da 01       	movw	r26, r20
 9e8:	f3 cf       	rjmp	.-26     	; 0x9d0 <free+0x44>
 9ea:	b3 83       	std	Z+3, r27	; 0x03
 9ec:	a2 83       	std	Z+2, r26	; 0x02
 9ee:	40 81       	ld	r20, Z
 9f0:	51 81       	ldd	r21, Z+1	; 0x01
 9f2:	84 0f       	add	r24, r20
 9f4:	95 1f       	adc	r25, r21
 9f6:	8a 17       	cp	r24, r26
 9f8:	9b 07       	cpc	r25, r27
 9fa:	71 f4       	brne	.+28     	; 0xa18 <free+0x8c>
 9fc:	8d 91       	ld	r24, X+
 9fe:	9c 91       	ld	r25, X
 a00:	11 97       	sbiw	r26, 0x01	; 1
 a02:	84 0f       	add	r24, r20
 a04:	95 1f       	adc	r25, r21
 a06:	02 96       	adiw	r24, 0x02	; 2
 a08:	91 83       	std	Z+1, r25	; 0x01
 a0a:	80 83       	st	Z, r24
 a0c:	12 96       	adiw	r26, 0x02	; 2
 a0e:	8d 91       	ld	r24, X+
 a10:	9c 91       	ld	r25, X
 a12:	13 97       	sbiw	r26, 0x03	; 3
 a14:	93 83       	std	Z+3, r25	; 0x03
 a16:	82 83       	std	Z+2, r24	; 0x02
 a18:	21 15       	cp	r18, r1
 a1a:	31 05       	cpc	r19, r1
 a1c:	29 f4       	brne	.+10     	; 0xa28 <free+0x9c>
 a1e:	f0 93 23 02 	sts	0x0223, r31
 a22:	e0 93 22 02 	sts	0x0222, r30
 a26:	3e c0       	rjmp	.+124    	; 0xaa4 <free+0x118>
 a28:	d9 01       	movw	r26, r18
 a2a:	13 96       	adiw	r26, 0x03	; 3
 a2c:	fc 93       	st	X, r31
 a2e:	ee 93       	st	-X, r30
 a30:	12 97       	sbiw	r26, 0x02	; 2
 a32:	4d 91       	ld	r20, X+
 a34:	5d 91       	ld	r21, X+
 a36:	a4 0f       	add	r26, r20
 a38:	b5 1f       	adc	r27, r21
 a3a:	ea 17       	cp	r30, r26
 a3c:	fb 07       	cpc	r31, r27
 a3e:	79 f4       	brne	.+30     	; 0xa5e <free+0xd2>
 a40:	80 81       	ld	r24, Z
 a42:	91 81       	ldd	r25, Z+1	; 0x01
 a44:	84 0f       	add	r24, r20
 a46:	95 1f       	adc	r25, r21
 a48:	02 96       	adiw	r24, 0x02	; 2
 a4a:	d9 01       	movw	r26, r18
 a4c:	11 96       	adiw	r26, 0x01	; 1
 a4e:	9c 93       	st	X, r25
 a50:	8e 93       	st	-X, r24
 a52:	82 81       	ldd	r24, Z+2	; 0x02
 a54:	93 81       	ldd	r25, Z+3	; 0x03
 a56:	13 96       	adiw	r26, 0x03	; 3
 a58:	9c 93       	st	X, r25
 a5a:	8e 93       	st	-X, r24
 a5c:	12 97       	sbiw	r26, 0x02	; 2
 a5e:	e0 e0       	ldi	r30, 0x00	; 0
 a60:	f0 e0       	ldi	r31, 0x00	; 0
 a62:	8a 81       	ldd	r24, Y+2	; 0x02
 a64:	9b 81       	ldd	r25, Y+3	; 0x03
 a66:	00 97       	sbiw	r24, 0x00	; 0
 a68:	19 f0       	breq	.+6      	; 0xa70 <free+0xe4>
 a6a:	fe 01       	movw	r30, r28
 a6c:	ec 01       	movw	r28, r24
 a6e:	f9 cf       	rjmp	.-14     	; 0xa62 <free+0xd6>
 a70:	ce 01       	movw	r24, r28
 a72:	02 96       	adiw	r24, 0x02	; 2
 a74:	28 81       	ld	r18, Y
 a76:	39 81       	ldd	r19, Y+1	; 0x01
 a78:	82 0f       	add	r24, r18
 a7a:	93 1f       	adc	r25, r19
 a7c:	20 91 20 02 	lds	r18, 0x0220
 a80:	30 91 21 02 	lds	r19, 0x0221
 a84:	28 17       	cp	r18, r24
 a86:	39 07       	cpc	r19, r25
 a88:	69 f4       	brne	.+26     	; 0xaa4 <free+0x118>
 a8a:	30 97       	sbiw	r30, 0x00	; 0
 a8c:	29 f4       	brne	.+10     	; 0xa98 <free+0x10c>
 a8e:	10 92 23 02 	sts	0x0223, r1
 a92:	10 92 22 02 	sts	0x0222, r1
 a96:	02 c0       	rjmp	.+4      	; 0xa9c <free+0x110>
 a98:	13 82       	std	Z+3, r1	; 0x03
 a9a:	12 82       	std	Z+2, r1	; 0x02
 a9c:	d0 93 21 02 	sts	0x0221, r29
 aa0:	c0 93 20 02 	sts	0x0220, r28
 aa4:	df 91       	pop	r29
 aa6:	cf 91       	pop	r28
 aa8:	08 95       	ret

00000aaa <strnlen_P>:
 aaa:	fc 01       	movw	r30, r24
 aac:	05 90       	lpm	r0, Z+
 aae:	61 50       	subi	r22, 0x01	; 1
 ab0:	70 40       	sbci	r23, 0x00	; 0
 ab2:	01 10       	cpse	r0, r1
 ab4:	d8 f7       	brcc	.-10     	; 0xaac <strnlen_P+0x2>
 ab6:	80 95       	com	r24
 ab8:	90 95       	com	r25
 aba:	8e 0f       	add	r24, r30
 abc:	9f 1f       	adc	r25, r31
 abe:	08 95       	ret

00000ac0 <memset>:
 ac0:	dc 01       	movw	r26, r24
 ac2:	01 c0       	rjmp	.+2      	; 0xac6 <memset+0x6>
 ac4:	6d 93       	st	X+, r22
 ac6:	41 50       	subi	r20, 0x01	; 1
 ac8:	50 40       	sbci	r21, 0x00	; 0
 aca:	e0 f7       	brcc	.-8      	; 0xac4 <memset+0x4>
 acc:	08 95       	ret

00000ace <strnlen>:
 ace:	fc 01       	movw	r30, r24
 ad0:	61 50       	subi	r22, 0x01	; 1
 ad2:	70 40       	sbci	r23, 0x00	; 0
 ad4:	01 90       	ld	r0, Z+
 ad6:	01 10       	cpse	r0, r1
 ad8:	d8 f7       	brcc	.-10     	; 0xad0 <strnlen+0x2>
 ada:	80 95       	com	r24
 adc:	90 95       	com	r25
 ade:	8e 0f       	add	r24, r30
 ae0:	9f 1f       	adc	r25, r31
 ae2:	08 95       	ret

00000ae4 <fputc>:
 ae4:	0f 93       	push	r16
 ae6:	1f 93       	push	r17
 ae8:	cf 93       	push	r28
 aea:	df 93       	push	r29
 aec:	18 2f       	mov	r17, r24
 aee:	09 2f       	mov	r16, r25
 af0:	eb 01       	movw	r28, r22
 af2:	8b 81       	ldd	r24, Y+3	; 0x03
 af4:	81 fd       	sbrc	r24, 1
 af6:	03 c0       	rjmp	.+6      	; 0xafe <fputc+0x1a>
 af8:	8f ef       	ldi	r24, 0xFF	; 255
 afa:	9f ef       	ldi	r25, 0xFF	; 255
 afc:	20 c0       	rjmp	.+64     	; 0xb3e <fputc+0x5a>
 afe:	82 ff       	sbrs	r24, 2
 b00:	10 c0       	rjmp	.+32     	; 0xb22 <fputc+0x3e>
 b02:	4e 81       	ldd	r20, Y+6	; 0x06
 b04:	5f 81       	ldd	r21, Y+7	; 0x07
 b06:	2c 81       	ldd	r18, Y+4	; 0x04
 b08:	3d 81       	ldd	r19, Y+5	; 0x05
 b0a:	42 17       	cp	r20, r18
 b0c:	53 07       	cpc	r21, r19
 b0e:	7c f4       	brge	.+30     	; 0xb2e <fputc+0x4a>
 b10:	e8 81       	ld	r30, Y
 b12:	f9 81       	ldd	r31, Y+1	; 0x01
 b14:	9f 01       	movw	r18, r30
 b16:	2f 5f       	subi	r18, 0xFF	; 255
 b18:	3f 4f       	sbci	r19, 0xFF	; 255
 b1a:	39 83       	std	Y+1, r19	; 0x01
 b1c:	28 83       	st	Y, r18
 b1e:	10 83       	st	Z, r17
 b20:	06 c0       	rjmp	.+12     	; 0xb2e <fputc+0x4a>
 b22:	e8 85       	ldd	r30, Y+8	; 0x08
 b24:	f9 85       	ldd	r31, Y+9	; 0x09
 b26:	81 2f       	mov	r24, r17
 b28:	19 95       	eicall
 b2a:	89 2b       	or	r24, r25
 b2c:	29 f7       	brne	.-54     	; 0xaf8 <fputc+0x14>
 b2e:	2e 81       	ldd	r18, Y+6	; 0x06
 b30:	3f 81       	ldd	r19, Y+7	; 0x07
 b32:	2f 5f       	subi	r18, 0xFF	; 255
 b34:	3f 4f       	sbci	r19, 0xFF	; 255
 b36:	3f 83       	std	Y+7, r19	; 0x07
 b38:	2e 83       	std	Y+6, r18	; 0x06
 b3a:	81 2f       	mov	r24, r17
 b3c:	90 2f       	mov	r25, r16
 b3e:	df 91       	pop	r29
 b40:	cf 91       	pop	r28
 b42:	1f 91       	pop	r17
 b44:	0f 91       	pop	r16
 b46:	08 95       	ret

00000b48 <__ultoa_invert>:
 b48:	fa 01       	movw	r30, r20
 b4a:	aa 27       	eor	r26, r26
 b4c:	28 30       	cpi	r18, 0x08	; 8
 b4e:	51 f1       	breq	.+84     	; 0xba4 <__ultoa_invert+0x5c>
 b50:	20 31       	cpi	r18, 0x10	; 16
 b52:	81 f1       	breq	.+96     	; 0xbb4 <__ultoa_invert+0x6c>
 b54:	e8 94       	clt
 b56:	6f 93       	push	r22
 b58:	6e 7f       	andi	r22, 0xFE	; 254
 b5a:	6e 5f       	subi	r22, 0xFE	; 254
 b5c:	7f 4f       	sbci	r23, 0xFF	; 255
 b5e:	8f 4f       	sbci	r24, 0xFF	; 255
 b60:	9f 4f       	sbci	r25, 0xFF	; 255
 b62:	af 4f       	sbci	r26, 0xFF	; 255
 b64:	b1 e0       	ldi	r27, 0x01	; 1
 b66:	3e d0       	rcall	.+124    	; 0xbe4 <__ultoa_invert+0x9c>
 b68:	b4 e0       	ldi	r27, 0x04	; 4
 b6a:	3c d0       	rcall	.+120    	; 0xbe4 <__ultoa_invert+0x9c>
 b6c:	67 0f       	add	r22, r23
 b6e:	78 1f       	adc	r23, r24
 b70:	89 1f       	adc	r24, r25
 b72:	9a 1f       	adc	r25, r26
 b74:	a1 1d       	adc	r26, r1
 b76:	68 0f       	add	r22, r24
 b78:	79 1f       	adc	r23, r25
 b7a:	8a 1f       	adc	r24, r26
 b7c:	91 1d       	adc	r25, r1
 b7e:	a1 1d       	adc	r26, r1
 b80:	6a 0f       	add	r22, r26
 b82:	71 1d       	adc	r23, r1
 b84:	81 1d       	adc	r24, r1
 b86:	91 1d       	adc	r25, r1
 b88:	a1 1d       	adc	r26, r1
 b8a:	20 d0       	rcall	.+64     	; 0xbcc <__ultoa_invert+0x84>
 b8c:	09 f4       	brne	.+2      	; 0xb90 <__ultoa_invert+0x48>
 b8e:	68 94       	set
 b90:	3f 91       	pop	r19
 b92:	2a e0       	ldi	r18, 0x0A	; 10
 b94:	26 9f       	mul	r18, r22
 b96:	11 24       	eor	r1, r1
 b98:	30 19       	sub	r19, r0
 b9a:	30 5d       	subi	r19, 0xD0	; 208
 b9c:	31 93       	st	Z+, r19
 b9e:	de f6       	brtc	.-74     	; 0xb56 <__ultoa_invert+0xe>
 ba0:	cf 01       	movw	r24, r30
 ba2:	08 95       	ret
 ba4:	46 2f       	mov	r20, r22
 ba6:	47 70       	andi	r20, 0x07	; 7
 ba8:	40 5d       	subi	r20, 0xD0	; 208
 baa:	41 93       	st	Z+, r20
 bac:	b3 e0       	ldi	r27, 0x03	; 3
 bae:	0f d0       	rcall	.+30     	; 0xbce <__ultoa_invert+0x86>
 bb0:	c9 f7       	brne	.-14     	; 0xba4 <__ultoa_invert+0x5c>
 bb2:	f6 cf       	rjmp	.-20     	; 0xba0 <__ultoa_invert+0x58>
 bb4:	46 2f       	mov	r20, r22
 bb6:	4f 70       	andi	r20, 0x0F	; 15
 bb8:	40 5d       	subi	r20, 0xD0	; 208
 bba:	4a 33       	cpi	r20, 0x3A	; 58
 bbc:	18 f0       	brcs	.+6      	; 0xbc4 <__ultoa_invert+0x7c>
 bbe:	49 5d       	subi	r20, 0xD9	; 217
 bc0:	31 fd       	sbrc	r19, 1
 bc2:	40 52       	subi	r20, 0x20	; 32
 bc4:	41 93       	st	Z+, r20
 bc6:	02 d0       	rcall	.+4      	; 0xbcc <__ultoa_invert+0x84>
 bc8:	a9 f7       	brne	.-22     	; 0xbb4 <__ultoa_invert+0x6c>
 bca:	ea cf       	rjmp	.-44     	; 0xba0 <__ultoa_invert+0x58>
 bcc:	b4 e0       	ldi	r27, 0x04	; 4
 bce:	a6 95       	lsr	r26
 bd0:	97 95       	ror	r25
 bd2:	87 95       	ror	r24
 bd4:	77 95       	ror	r23
 bd6:	67 95       	ror	r22
 bd8:	ba 95       	dec	r27
 bda:	c9 f7       	brne	.-14     	; 0xbce <__ultoa_invert+0x86>
 bdc:	00 97       	sbiw	r24, 0x00	; 0
 bde:	61 05       	cpc	r22, r1
 be0:	71 05       	cpc	r23, r1
 be2:	08 95       	ret
 be4:	9b 01       	movw	r18, r22
 be6:	ac 01       	movw	r20, r24
 be8:	0a 2e       	mov	r0, r26
 bea:	06 94       	lsr	r0
 bec:	57 95       	ror	r21
 bee:	47 95       	ror	r20
 bf0:	37 95       	ror	r19
 bf2:	27 95       	ror	r18
 bf4:	ba 95       	dec	r27
 bf6:	c9 f7       	brne	.-14     	; 0xbea <__ultoa_invert+0xa2>
 bf8:	62 0f       	add	r22, r18
 bfa:	73 1f       	adc	r23, r19
 bfc:	84 1f       	adc	r24, r20
 bfe:	95 1f       	adc	r25, r21
 c00:	a0 1d       	adc	r26, r0
 c02:	08 95       	ret

00000c04 <_exit>:
 c04:	f8 94       	cli

00000c06 <__stop_program>:
 c06:	ff cf       	rjmp	.-2      	; 0xc06 <__stop_program>
